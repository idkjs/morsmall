Hello - from /Users/mandalarian/.vscode/extensions/jaredly.reason-vscode-1.7.8/bin.native
Previous log location: /var/folders/rt/7lc5vcw16459dszl8djk35fh0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":true,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","languageId":"ocaml","version":1,"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> Literal \"foo\") ;\n       1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/mandalarian/Github/morsmall/tests/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00619888305664ms
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/mandalarian/Github/morsmall/tests/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/mandalarian/Github/morsmall/tests/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/mandalarian/Github/morsmall/tests/.merlin", "command": ""}}]}
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///Users/mandalarian/Github/morsmall/src/.merlin","type":2},{"uri":"file:///Users/mandalarian/Github/morsmall/_build/default/src/.merlin","type":2},{"uri":"file:///Users/mandalarian/Github/morsmall/src/utilities/.merlin","type":2},{"uri":"file:///Users/mandalarian/Github/morsmall/_build/default/src/utilities/.merlin","type":2}]}}
Got a watched file change
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","languageId":"ocaml","version":1,"text":"(***************************************************************************)\n(*                                 Morsmall                                *)\n(*                      A concise AST for POSIX shell                      *)\n(*                                                                         *)\n(*  Copyright (C) 2017,2018,2019 Yann RÃ©gis-Gianas, Ralf Treinen,          *)\n(*  Nicolas Jeannerod                                                      *)\n(*                                                                         *)\n(*  This program is free software: you can redistribute it and/or modify   *)\n(*  it under the terms of the GNU General Public License as published by   *)\n(*  the Free Software Foundation, either version 3 of the License, or      *)\n(*  (at your option) any later version.                                    *)\n(*                                                                         *)\n(*  This program is distributed in the hope that it will be useful,        *)\n(*  but WITHOUT ANY WARRANTY; without even the implied warranty of         *)\n(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *)\n(*  GNU General Public License for more details.                           *)\n(*                                                                         *)\n(*  You should have received a copy of the GNU General Public License      *)\n(*  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *)\n(***************************************************************************)\n\nopen Morbig.CST\n\n(* Helpers about locations. *)\n\nlet convert_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b Location.located =\n  fun f loc -> { value = f loc.value ; position = loc.position }\n\nlet convert_location_2 : 'a 'b 'c. ('a -> 'b -> 'c) -> 'a located -> 'b -> 'c Location.located =\n  fun f loc x ->\n  { value = f loc.value x ; position = loc.position }\n\nlet erase_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b =\n  fun f x -> f x.value\n\n(* Convertion functions *)\n\n(* CST.program -> AST.program *)\n\nlet rec program__to__program = function\n  | Program_LineBreak_CompleteCommands_LineBreak (_, complete_commands', _) ->\n     complete_commands'__to__command'_list complete_commands'\n  | Program_LineBreak _ ->\n     []\n\nand program'__to__program (program' : program') : AST.program =\n  erase_location program__to__program program'\n\n(* CST.complete_commands -> AST.command list *)\n\nand complete_commands__to__command_list = function\n  | CompleteCommands_CompleteCommands_NewlineList_CompleteCommand (complete_commands', _, complete_command') ->\n     (complete_commands'__to__command'_list complete_commands')\n     @ [complete_command'__to__command' complete_command']\n  | CompleteCommands_CompleteCommand complete_command' ->\n     [complete_command'__to__command' complete_command']\n\nand complete_commands'__to__command'_list (complete_commands' : complete_commands') : AST.command' list =\n  erase_location complete_commands__to__command_list complete_commands'\n\n(* CST.complete_command -> AST.command option *)\n\nand complete_command__to__command = function\n  | CompleteCommand_CList_SeparatorOp (clist', sepop') ->\n     clist'__to__command' clist'\n     |> separator_op'__to__command sepop'\n  | CompleteCommand_CList clist' ->\n     clist'__to__command clist'\n\nand complete_command'__to__command' (complete_command' : complete_command') : AST.command' =\n  convert_location complete_command__to__command complete_command'\n\n(* CST.clist -> AST.command *)\n\nand clist__to__command : clist -> AST.command = function\n  | CList_CList_SeparatorOp_AndOr (clist', sep_op', and_or') ->\n     AST.Seq (\n         clist'__to__command' clist'\n         |> separator_op'__to__command' sep_op',\n         and_or'__to__command' and_or'\n       )\n  | CList_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand clist'__to__command (clist' : clist') : AST.command =\n  erase_location clist__to__command clist'\n\nand clist'__to__command' (clist' : clist') : AST.command' =\n  convert_location clist__to__command clist'\n\n(* CST.and_or -> AST.command *)\n\nand and_or__to__command : and_or -> AST.command = function\n  | AndOr_Pipeline pipeline' ->\n     pipeline'__to__command pipeline'\n  | AndOr_AndOr_AndIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.And (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n  | AndOr_AndOr_OrIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.Or (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n\nand and_or'__to__command (and_or' : and_or') : AST.command =\n  erase_location and_or__to__command and_or'\n\nand and_or'__to__command' (and_or' : and_or') : AST.command' =\n  convert_location and_or__to__command and_or'\n\n(* CST.pipeline -> AST.command *)\n\nand pipeline__to__command : pipeline -> AST.command = function\n  | Pipeline_PipeSequence pipe_sequence' ->\n     pipe_sequence'__to__command pipe_sequence'\n  | Pipeline_Bang_PipeSequence pipe_sequence' ->\n     AST.Not (pipe_sequence'__to__command' pipe_sequence')\n\nand pipeline'__to__command (pipeline' : pipeline') : AST.command =\n  erase_location pipeline__to__command pipeline'\n\nand pipeline'__to__command' (pipeline' : pipeline') : AST.command' =\n  convert_location pipeline__to__command pipeline'\n\n(* CST.pipe_sequence -> AST.command *)\n\nand pipe_sequence__to__command : pipe_sequence -> AST.command = function\n  | PipeSequence_Command command' ->\n     command'__to__command command'\n  | PipeSequence_PipeSequence_Pipe_LineBreak_Command (pipe_sequence', _, command') ->\n     AST.Pipe (\n         pipe_sequence'__to__command' pipe_sequence',\n         command'__to__command' command'\n       )\n\nand pipe_sequence'__to__command (pipe_sequence') : AST.command =\n  erase_location pipe_sequence__to__command pipe_sequence'\n\nand pipe_sequence'__to__command' (pipe_sequence') : AST.command' =\n  convert_location pipe_sequence__to__command pipe_sequence'\n\n(* CST.command -> AST.command *)\n\nand command__to__command : command -> AST.command = function\n  | Command_SimpleCommand simple_command' ->\n     simple_command'__to__command simple_command'\n  | Command_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | Command_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n  | Command_FunctionDefinition function_definition' ->\n     function_definition'__to__command function_definition'\n\nand command'__to__command (command' : command') : AST.command =\n  erase_location command__to__command command'\n\nand command'__to__command' (command' : command') : AST.command' =\n  convert_location command__to__command command'\n\n(* CST.compound_command -> AST.command *)\n\nand compound_command__to__command : compound_command -> AST.command = function\n  | CompoundCommand_BraceGroup brace_group' ->\n     brace_group'__to__command brace_group'\n  | CompoundCommand_Subshell subshell' ->\n     subshell'__to__command subshell'\n  | CompoundCommand_ForClause for_clause' ->\n     for_clause'__to__command for_clause'\n  | CompoundCommand_CaseClause case_clause' ->\n     case_clause'__to__command case_clause'\n  | CompoundCommand_IfClause if_clause' ->\n     if_clause'__to__command if_clause'\n  | CompoundCommand_WhileClause while_clause' ->\n     while_clause'__to__command while_clause'\n  | CompoundCommand_UntilClause until_clause' ->\n     until_clause'__to__command until_clause'\n\nand compound_command'__to__command (compound_command' : compound_command') : AST.command =\n  erase_location compound_command__to__command compound_command'\n\nand compound_command'__to__command' (compound_command' : compound_command') : AST.command' =\n  convert_location compound_command__to__command compound_command'\n\n(* CST.subshell -> AST.command *)\n\nand subshell__to__command : subshell -> AST.command  = function\n  | Subshell_Lparen_CompoundList_Rparen compound_list' ->\n     AST.Subshell (compound_list'__to__command' compound_list')\n\nand subshell'__to__command (subshell' : subshell') : AST.command =\n  erase_location subshell__to__command subshell'\n\n(* CST.compound_list -> AST.command *)\n\nand compound_list__to__command : compound_list -> AST.command = function\n  | CompoundList_LineBreak_Term (_, term') ->\n     term'__to__command term'\n  | CompoundList_LineBreak_Term_Separator (_, term', sep') ->\n     term'__to__command' term'\n     |> separator'__to__command sep'\n\nand compound_list'__to__command (compound_list' : compound_list') : AST.command =\n  erase_location compound_list__to__command compound_list'\n\nand compound_list'__to__command' (compound_list' : compound_list') : AST.command' =\n  convert_location compound_list__to__command compound_list'\n\n(* CST.term -> AST.command *)\n\nand term__to__command : term -> AST.command = function\n  | Term_Term_Separator_AndOr (term', sep', and_or') ->\n     AST.Seq (\n         term'__to__command' term'\n         |> separator'__to__command' sep',\n         and_or'__to__command' and_or'\n       )\n  | Term_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand term'__to__command (term' : term') : AST.command =\n  erase_location term__to__command term'\n\nand term'__to__command' (term' : term') : AST.command' =\n  convert_location term__to__command term'\n\n(* CST.for_clause -> AST.command *)\n\nand for_clause__to__command : for_clause -> AST.command = function\n  | ForClause_For_Name_DoGroup (name', do_group')\n  | ForClause_For_Name_SequentialSep_DoGroup (name', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         None ,\n         do_group'__to__command' do_group'\n       )\n  | ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup (name', _, _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some [] ,\n         do_group'__to__command' do_group'\n     )\n  | ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup (name', _, wordlist', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some (wordlist'__to__word'_list wordlist') ,\n         do_group'__to__command' do_group'\n       )\n\nand for_clause'__to__command (for_clause' : for_clause') : AST.command =\n  erase_location for_clause__to__command for_clause'\n\n(* CST.wordlist -> AST.word list *)\n\nand wordlist__to__word'_list : wordlist -> AST.word' list = function\n  | WordList_WordList_Word (wordlist', word') ->\n     (wordlist'__to__word'_list wordlist')\n     @ [word'__to__word' word']\n  | WordList_Word word' ->\n     [word'__to__word' word']\n\nand wordlist'__to__word'_list (wordlist' : wordlist') : AST.word' list =\n  erase_location wordlist__to__word'_list wordlist'\n\n(* CST.case_clause -> AST.command *)\n\nand case_clause__to__command : case_clause -> AST.command = function\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac (word', _, _, case_list') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list'__to__case_item'_list case_list'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac (word', _, _, case_list_ns') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list_ns'__to__case_item'_list case_list_ns'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_Esac (word', _, _) ->\n     AST.Case (\n         word'__to__word' word' ,\n         []\n       )\n\nand case_clause'__to__command (case_clause' : case_clause') : AST.command =\n  erase_location case_clause__to__command case_clause'\n\n(* CST.case_list_ns -> AST.case list *)\n\nand case_list_ns__to__case_item'_list : case_list_ns -> AST.case_item' list = function (*FIXME*)\n  | CaseListNS_CaseList_CaseItemNS (case_list', case_item_ns') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item_ns'__to__case_item' case_item_ns']\n  | CaseListNS_CaseItemNS case_item_ns' ->\n     [case_item_ns'__to__case_item' case_item_ns']\n\nand case_list_ns'__to__case_item'_list (case_list_ns' : case_list_ns') : AST.case_item' list =\n  erase_location case_list_ns__to__case_item'_list case_list_ns'\n\n(* CST.case_list -> AST.case list *)\n\nand case_list__to__case_item'_list : case_list -> AST.case_item' list = function (*FIXME*)\n  | CaseList_CaseList_CaseItem (case_list', case_item') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item'__to__case_item' case_item']\n  | CaseList_CaseItem case_item' ->\n     [case_item'__to__case_item' case_item']\n\nand case_list'__to__case_item'_list (case_list' : case_list') : AST.case_item' list =\n  erase_location case_list__to__case_item'_list case_list'\n\n(* CST.case_item_ns -> AST.case_item *)\n\nand case_item_ns__to__case_item : case_item_ns -> AST.case_item = function\n  | CaseItemNS_Pattern_Rparen_LineBreak (pattern', _)\n  | CaseItemNS_Lparen_Pattern_Rparen_LineBreak (pattern', _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItemNS_Pattern_Rparen_CompoundList (pattern', compound_list')\n  | CaseItemNS_Lparen_Pattern_Rparen_CompoundList (pattern', compound_list') ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item_ns'__to__case_item' (case_item_ns' : case_item_ns') : AST.case_item' =\n  convert_location case_item_ns__to__case_item case_item_ns'\n\n(* CST.case_item -> AST.case_item *)\n\nand case_item__to__case_item : case_item -> AST.case_item = function\n  | CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _)\n  | CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _)\n  | CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _) ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item'__to__case_item' (case_item' : case_item') : AST.case_item' =\n  convert_location case_item__to__case_item case_item'\n\n(* CST.pattern -> AST.pattern *)\n\nand pattern__to__pattern : pattern -> AST.pattern = function\n  | Pattern_Word word' ->\n     [word'__to__word word']\n  | Pattern_Pattern_Pipe_Word (pattern', word') ->\n     (pattern'__to__pattern pattern')\n     @ [word'__to__word word']\n\nand pattern'__to__pattern (pattern' : pattern') : AST.pattern =\n  erase_location pattern__to__pattern pattern'\n\nand pattern'__to__pattern' (pattern' : pattern') : AST.pattern' =\n  convert_location pattern__to__pattern pattern'\n\n(* CST.if_clause -> AST.command *)\n\nand if_clause__to__command : if_clause -> AST.command = function\n  | IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | IfClause_If_CompoundList_Then_CompoundList_Fi (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n\nand if_clause'__to__command (if_clause' : if_clause') : AST.command =\n  erase_location if_clause__to__command if_clause'\n\n(* CST.else_part -> AST.command *)\n\nand else_part__to__command : else_part -> AST.command = function\n  | ElsePart_Elif_CompoundList_Then_CompoundList (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n  | ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | ElsePart_Else_CompoundList compound_list' ->\n     compound_list'__to__command compound_list'\n\nand else_part'__to__command' (else_part' : else_part') : AST.command' =\n  convert_location else_part__to__command else_part'\n\n(* CST.while_clause -> AST.command *)\n\nand while_clause__to__command : while_clause -> AST.command = function\n  | WhileClause_While_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.While (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand while_clause'__to__command (while_clause' : while_clause') : AST.command =\n  erase_location while_clause__to__command while_clause'\n\n(* CST.until_clause -> AST.command *)\n\nand until_clause__to__command : until_clause -> AST.command = function\n  | UntilClause_Until_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.Until (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand until_clause'__to__command (until_clause' : until_clause') : AST.command =\n  erase_location until_clause__to__command until_clause'\n\n(* CST.function_definition -> AST.command *)\n\nand function_definition__to__command : function_definition -> AST.command = function\n  | FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody (fname', _, function_body') ->\n     AST.Function (\n         fname'__to__name fname' ,\n         function_body'__to__command' function_body'\n       )\n\nand function_definition'__to__command (function_definition' : function_definition') : AST.command =\n  erase_location function_definition__to__command function_definition'\n\n(* CST.function_body -> AST.command *)\n\nand function_body__to__command : function_body -> AST.command = function\n  | FunctionBody_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | FunctionBody_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n\nand function_body'__to__command' (function_body' : function_body') : AST.command' =\n  convert_location function_body__to__command function_body'\n\n(* CST.fname -> AST.name *)\n\nand fname__to__name : fname -> AST.name = function\n  | Fname_Name name -> name__to__name name\n\nand fname'__to__name (fname' : fname') : AST.name =\n  erase_location fname__to__name fname'\n\n(* CST.brace_group -> AST.command *)\n\nand brace_group__to__command : brace_group -> AST.command = function\n  | BraceGroup_LBrace_CompoundList_RBrace compound_list' ->\n     compound_list'__to__command compound_list'\n\nand brace_group'__to__command (brace_group' : brace_group') : AST.command =\n  erase_location brace_group__to__command brace_group'\n\n(* CST.do_group -> AST.command *)\n\nand do_group__to__command : do_group -> AST.command = function\n  | DoGroup_Do_CompoundList_Done compound_list' ->\n     compound_list'__to__command compound_list'\n\nand do_group'__to__command' (do_group' : do_group') : AST.command' =\n  convert_location do_group__to__command do_group'\n\n(* CST.simple_command -> AST.command *)\n\nand simple_command'__to__command (simple_command' : simple_command') : AST.command =\n  let ( assignment'_list , word'_list , io_redirect'_list ) =\n    match simple_command'.value with\n    | SimpleCommand_CmdPrefix_CmdWord_CmdSuffix (cmd_prefix', cmd_word', cmd_suffix') ->\n       (* Since we are sorting right-to-left, we need to sort the\n          suffix before the prefix. *)\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] io_redirect'_list cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix_CmdWord (cmd_prefix', cmd_word') ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: [] ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix cmd_prefix' ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       ( List.map assignment_word'__to__assignment' assignment_word'_list ,\n         [] ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName_CmdSuffix (cmd_name', cmd_suffix') ->\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName cmd_name' ->\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: [] ,\n         [] )\n  in\n  (* Because of the semantics of redirections, we need to handle that\n     redirection list from right to left. *)\n  List.fold_right\n    (\n      fun io_redirect' command ->\n      io_redirect'__to__command\n        io_redirect'\n        { value = command ;\n          position = simple_command'.position }\n    )\n    io_redirect'_list\n    (AST.Simple (assignment'_list, word'_list ))\n\n(* CST.cmd_prefix -> CST.assignment_word' list * CST.io_redirect' list\n\n   This function takes a prefix (which is basically a list of either\n   CST.assignment_word' or CST.io_redirect' and return two separate\n   lists for these two type of elements. It uses accumulators, but\n   since we are converting right-to-left lists to left-to-right lists,\n   we do not need a List.rev. *)\n\nand sort__cmd_prefix (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list) (*FIXME: check order*)\n    : cmd_prefix -> assignment_word' list * io_redirect' list = function\n  | CmdPrefix_IoRedirect io_redirect' ->\n     ( assignment_word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_IoRedirect (cmd_prefix', io_redirect') ->\n     sort__cmd_prefix'\n       assignment_word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_prefix'\n\n  | CmdPrefix_AssignmentWord assignment_word' ->\n     ( assignment_word' :: assignment_word'_acc ,\n       io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_AssignmentWord (cmd_prefix', assignment_word') ->\n     sort__cmd_prefix'\n       (assignment_word' :: assignment_word'_acc)\n       io_redirect'_acc\n       cmd_prefix'\n\nand sort__cmd_prefix' (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_prefix' : cmd_prefix') : assignment_word' list * io_redirect' list =\n  sort__cmd_prefix assignment_word'_acc io_redirect'_acc cmd_prefix'.value\n\n(* CST.cmd_suffix -> CST.word' list * CST.io_redirect' list\n\n   This function takes a suffix (which is basically a list of either\n   CST.word' or CST.io_redirect' and return two separate lists for\n   these two type of elements. It uses accumulators, but since we are\n   converting right-to-left lists to left-to-right lists, we do not\n   need a List.rev. *)\n\nand sort__cmd_suffix (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    : cmd_suffix -> word' list * io_redirect' list = function\n  | CmdSuffix_IoRedirect io_redirect' ->\n     ( word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_IoRedirect (cmd_suffix', io_redirect') ->\n     sort__cmd_suffix'\n       word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_suffix'\n\n  | CmdSuffix_Word word' ->\n     ( word' :: word'_acc ,\n       io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_Word (cmd_suffix', word') ->\n     sort__cmd_suffix'\n       (word' :: word'_acc)\n       io_redirect'_acc\n       cmd_suffix'\n\nand sort__cmd_suffix' (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_suffix' : cmd_suffix') : word' list * io_redirect' list =\n  sort__cmd_suffix word'_acc io_redirect'_acc cmd_suffix'.value\n\n(* CST.cmd_name -> AST.word *)\n\nand cmd_name__to__word : cmd_name -> AST.word = function\n  | CmdName_Word word' ->\n     word'__to__word word'\n\nand cmd_name'__to__word' (cmd_name' : cmd_name') : AST.word' =\n  convert_location cmd_name__to__word cmd_name'\n\n(* CST.cmd_word -> AST.word *)\n\nand cmd_word__to__word : cmd_word -> AST.word = function\n  | CmdWord_Word word' ->\n     word'__to__word word'\n\nand cmd_word'__to__word' (cmd_word' : cmd_word') : AST.word' =\n  convert_location cmd_word__to__word cmd_word'\n\n(* CST.redirect_list -> AST.command' -> AST.command *)\n\nand redirect_list__to__command redirect_list (command' : AST.command') : AST.command =\n  match redirect_list with\n  | RedirectList_IoRedirect io_redirect' ->\n     command'\n     |> io_redirect'__to__command io_redirect'\n  | RedirectList_RedirectList_IoRedirect (redirect_list', io_redirect') ->\n     command'\n     |> io_redirect'__to__command' io_redirect'\n     |> redirect_list'__to__command redirect_list' (*FIXME: check order of the redirections*)\n\nand redirect_list'__to__command (redirect_list' : redirect_list') (command' : AST.command') : AST.command =\n  erase_location redirect_list__to__command redirect_list' command'\n\n(* CST.io_redirect -> AST.command' -> AST.command *)\n\nand io_redirect__to__command (io_redirect : io_redirect) (command' : AST.command') : AST.command =\n  match io_redirect with\n  | IoRedirect_IoFile io_file' ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (AST.default_redirection_descriptor kind) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoNumber_IoFile (io_number, io_file') ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (io_number__to__int io_number) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoHere io_here' ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         0 ,\n         word' (* FIXME: strip that word if needed *)\n       )\n  | IoRedirect_IoNumber_IoHere (io_number, io_here') ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         (io_number__to__int io_number) ,\n         word' (* FIXME: strip that word if needed *)\n       )\n\nand io_redirect'__to__command (io_redirect' : io_redirect') (command' : AST.command') : AST.command =\n  erase_location io_redirect__to__command io_redirect' command'\n\nand io_redirect'__to__command' (io_redirect' : io_redirect') (command' : AST.command') : AST.command' =\n  convert_location_2 io_redirect__to__command io_redirect' command'\n\n(* CST.io_file -> AST.redirection_kind * AST.word *)\n\nand io_file__to__kind_word' io_file =\n  let kind, filename' =\n    match io_file with\n    | IoFile_Less_FileName filename' -> AST.Input, filename'\n    | IoFile_LessAnd_FileName filename' -> AST.InputDuplicate, filename'\n    | IoFile_Great_FileName filename' -> AST.Output, filename'\n    | IoFile_GreatAnd_FileName filename' -> AST.OutputDuplicate, filename'\n    | IoFile_DGreat_FileName filename' -> AST.OutputAppend, filename'\n    | IoFile_LessGreat_FileName filename' -> AST.InputOutput, filename'\n    | IoFile_Clobber_FileName filename' -> AST.OutputClobber, filename'\n  in\n  ( kind , filename'__to__word' filename' )\n\nand io_file'__to__kind_word' (io_file' : io_file') : AST.kind * AST.word' =\n  erase_location io_file__to__kind_word' io_file'\n\n(* CST.filename -> AST.word *)\n\nand filename__to__word' : filename -> AST.word' = function\n  | Filename_Word word' ->\n     word'__to__word' word'\n\nand filename'__to__word' (filename' : filename') : AST.word' =\n  erase_location filename__to__word' filename'\n\n(* CST.io_here -> bool * AST.word *)\n\nand io_here__to__strip_word' : io_here -> bool * AST.word' = function\n  | IoHere_DLess_HereEnd (_, word'_ref) ->\n     (false, word'__to__word' !word'_ref)\n  | IoHere_DLessDash_HereEnd (_, word'_ref) ->\n     (true, word'__to__word' !word'_ref)\n\nand io_here'__to__strip_word' (io_here' : io_here') : bool * AST.word' =\n  erase_location io_here__to__strip_word' io_here'\n\n(* CST.separator_op -> AST.command -> AST.command *)\n\nand separator_op__to__command (sep_op : separator_op) (command' : AST.command') : AST.command =\n  match sep_op with\n  | SeparatorOp_Uppersand -> AST.Async command'\n  | SeparatorOp_Semicolon -> command'.value\n\nand separator_op'__to__command (sep_op' : separator_op') (command' : AST.command') : AST.command =\n  erase_location separator_op__to__command sep_op' command'\n\nand separator_op'__to__command' (sep_op' : separator_op') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator_op'__to__command sep_op' command')\n\n(* CST.separator -> AST.command -> AST.command *)\n\nand separator__to__command (sep : separator) (command' : AST.command') : AST.command =\n  match sep with\n  | Separator_SeparatorOp_LineBreak (sep_op', _) ->\n     separator_op'__to__command sep_op' command'\n  | Separator_NewLineList _ ->\n     command'.value\n\nand separator'__to__command (sep' : separator') (command' : AST.command') : AST.command =\n  erase_location separator__to__command sep' command'\n\nand separator'__to__command' (sep' : separator') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator'__to__command sep' command')\n\n(* *)\n\nand sequential_sep__to__command _ (command : AST.command) : AST.command =\n  command\n\n(* CST.word -> AST.word *)\n\nand word__to__word : word -> AST.word = function\n  | Word (_, word_cst) ->\n     word_cst__to__word word_cst\n\nand word'__to__word (word' : word') : AST.word =\n  erase_location word__to__word word'\n\nand word'__to__word' (word' : word') : AST.word' =\n  convert_location word__to__word word'\n\nand word_double_quoted__to__word (Word (_, word_cst)) =\n  word_cst_double_quoted__to__word word_cst\n\n(* CST.word_cst -> AST.word *)\n\nand word_cst__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component__to__word word_cst\n  |> List.flatten\n\nand word_cst_double_quoted__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component_double_quoted__to__word word_cst\n  |> List.flatten\n\n(* CST.word_component -> AST.word_component *)\n\nand word_component__to__word = function\n  | WordEmpty ->\n    []\n  | WordName name ->\n    [AST.WLiteral name]\n  | WordTildePrefix prefix ->\n    [AST.WTildePrefix prefix]\n  | WordLiteral literal ->\n    [AST.WLiteral literal]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst__to__word word_cst\n  | WordSingleQuoted (Word (_, [WordLiteral literal])) ->\n    [AST.WLiteral literal]\n  | WordSingleQuoted (Word (_, [])) ->\n    [AST.WLiteral \"\"]\n  | WordSingleQuoted _ ->\n    assert false\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordDoubleQuoted word ->\n    [AST.WDoubleQuoted (word_double_quoted__to__word word)]\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordGlobAll ->\n    [AST.WGlobAll]\n  | WordGlobAny ->\n    [AST.WGlobAny]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n\nand word_component_double_quoted__to__word = function\n  | WordEmpty ->\n    []\n  | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n    [AST.WLiteral literal]\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst_double_quoted__to__word word_cst\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n  | WordDoubleQuoted _ | WordSingleQuoted _\n  | WordGlobAll | WordGlobAny ->\n    assert false\n\nand variable_attribute__to__attribute = function\n  | NoAttribute ->\n    AST.NoAttribute\n  | ParameterLength word ->\n    AST.ParameterLength (word__to__word word)\n  | UseDefaultValues (_, word) ->\n    AST.UseDefaultValues (word__to__word word)\n  | AssignDefaultValues (_, word) ->\n    AST.AssignDefaultValues (word__to__word word)\n  | IndicateErrorifNullorUnset (_, word) ->\n    AST.IndicateErrorifNullorUnset (word__to__word word)\n  | UseAlternativeValue (_, word) ->\n    AST.UseAlternativeValue (word__to__word word)\n  | RemoveSmallestSuffixPattern word ->\n    AST.RemoveSmallestSuffixPattern (word__to__word word)\n  | RemoveLargestSuffixPattern word ->\n    AST.RemoveLargestSuffixPattern (word__to__word word)\n  | RemoveSmallestPrefixPattern word ->\n    AST.RemoveSmallestPrefixPattern (word__to__word word)\n  | RemoveLargestPrefixPattern word ->\n    AST.RemoveLargestPrefixPattern (word__to__word word)\n\n(* CST.name -> AST.name *)\n\nand name__to__name : name -> AST.name = function\n  | Name name -> name\n\nand name'__to__name (name' : name') : AST.name =\n  erase_location name__to__name name'\n\n(* CST.assignment_word -> AST.assignment *)\n\nand assignment_word__to__assignment ((name, word) : assignment_word) : AST.assignment =\n  (name__to__name name,\n   word__to__word word)\n\nand assignment_word'__to__assignment' (assignment_word' : assignment_word') : AST.assignment' =\n  convert_location assignment_word__to__assignment assignment_word'\n\n(* CST.io_number -> AST.descr *)\n\nand io_number__to__int  = function\n  | IONumber io_number -> int_of_string io_number\n"}}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/src
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/src
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Get ocaml stdlib dirs
New dune process
[MerlinFile]: Error: Insufficient build files found for module Morsmall - src: /Users/mandalarian/Github/morsmall/src/morsmall.ml, srci: /Users/mandalarian/Github/morsmall/src/morsmall.mli, cmi: (), cmt: (), cmti: ()
[MerlinFile]: Error: Insufficient build files found for module CST_to_AST - src: /Users/mandalarian/Github/morsmall/src/CST_to_AST.ml, srci: (), cmi: (), cmt: (), cmti: ()
[MerlinFile]: Error: No source files for module Morsmall - src: (), srci: (), cmi: (), cmt: (), cmti: ()
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr
File "src/CST_to_AST.ml", line 771, characters 4-19:
771 |   | WordTildePrefix prefix ->
          ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Affected files: file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/bsconfig.json", "diagnostics": []}}
 > /Users/mandalarian/Github/morsmall/src/AST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.ml
 > /Users/mandalarian/Github/morsmall/src/location.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/topdirs.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unix.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.ml
 > /Users/mandalarian/Github/morsmall/src/utilities/testParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/pervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.ml
 > /Users/mandalarian/Github/morsmall/src/utilities/testParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/raw_spacetime_lib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/extPervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/name.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/debug.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.ml
 > /Users/mandalarian/.opam/4.08.1/lib/visitors/runtime/VisitorsRuntime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unixLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/std_exit.ml
 > /Users/mandalarian/Github/morsmall/src/safePrinter.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/assignment.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexerState.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/engine.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/version.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionLexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/keyword.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/token.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_dump.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/result/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/quoteRemoval.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/patternMatchingRecognizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/ExtMenhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.mli
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretoken.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/dynlink.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.ml
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/recursiveParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretokenizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/str.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.mli
Reloading because you created a new file: /Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.cmt
Size 195073
<< Making lastDefinitions with type error for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast", line 771, characters 4-19:
771 |   | WordTildePrefix prefix ->
          ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml", "diagnostics": [{"range": {"start": {"line": 770, "character": 4}, "end": {"line": 770, "character": 19}}, "message": "771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 4, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0119209289551ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": [{"name": "erase_location", "kind": 22, "location": {"range": {"start": {"line": 32, "character": 0}, "end": {"line": 33, "character": 22}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location_2", "kind": 22, "location": {"range": {"start": {"line": 28, "character": 0}, "end": {"line": 30, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location", "kind": 22, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 26, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "191 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name, pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordName, WordEmpty], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst, compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', complete_commands'}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":6,"character":44}}}
[server] Got a method textDocument/hover
[server] processing took 0.0121593475342ms
Sending response {"id": 7, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 8, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":775,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 9, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":770,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Sending response {"id": 10, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"message":"771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 11, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":770,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Sending response {"id": 12, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"message":"771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":685,"character":27},"end":{"line":685,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 14, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"message":"771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 15, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 16, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 17, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 18, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 19, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 20, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":687,"character":19},"end":{"line":687,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 21, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":740,"character":4},"end":{"line":740,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 22, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":741,"character":13},"end":{"line":741,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 23, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":756,"character":11},"end":{"line":756,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0400543212891ms
Sending response {"id": 24, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":756,"character":11},"end":{"line":756,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 25, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":756,"character":11},"end":{"line":756,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 26, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":756,"character":11},"end":{"line":756,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0169277191162ms
Sending response {"id": 27, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":756,"character":11},"end":{"line":756,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0171661376953ms
Sending response {"id": 28, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":796,"character":4},"end":{"line":796,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 29, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":763,"character":7},"end":{"line":763,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 30, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":759,"character":55}}}
[server] Got a method textDocument/hover
[server] processing took 0.0319480895996ms
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting global Morbig
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting for 896 in word_cst
[ref] Trying for declared Type 896 in file file:///Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Yes!! got it
Sending response {"id": 31, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 759, "character": 49}, "end": {"line": 759, "character": 57}}, "contents": {"kind": "markdown", "value": "```\nMorbig.CST.word_cst\n```\n\n```\ntype word_cst = list(word_component)\n```\n\nfile:///Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":760,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
[ref] Trying for declared Value 1291 in file file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Sending response {"id": 32, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 760, "character": 11}, "end": {"line": 760, "character": 49}}, "contents": {"kind": "markdown", "value": "```\nMorbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)\n```\n\n<root>/src/CST_to_AST.ml"}}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":761,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
[ref] Getting global Stdlib
FINDING docs for module IntfAndImpl(/Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmti, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmt, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmti src /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli
FINDING docs for module IntfAndImpl(/Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmti, /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmt, /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmti src /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
[ref] Getting for 96 in flatten
[ref] Trying for declared Value 96 in file file:///Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
[ref] Yes!! got it
Sending response {"id": 33, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 761, "character": 10}, "end": {"line": 761, "character": 17}}, "contents": {"kind": "markdown", "value": "```\nlist(list('a)) => list('a)\n```\n\nAn alias for `concat`.\n\n\n\nfile:///Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli"}}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":763,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Sending response {"id": 34, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":761,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.312089920044ms
[ref] Getting global Stdlib
FINDING docs for module IntfAndImpl(/Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmti, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmt, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.cmti src /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli
FINDING docs for module IntfAndImpl(/Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmti, /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli, /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmt, /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib__list.cmti src /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
[ref] Getting for 96 in flatten
[ref] Trying for declared Value 96 in file file:///Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
[ref] Yes!! got it
Sending response {"id": 35, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 761, "character": 10}, "end": {"line": 761, "character": 17}}, "contents": {"kind": "markdown", "value": "```\nlist(list('a)) => list('a)\n```\n\nAn alias for `concat`.\n\n\n\nfile:///Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli"}}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":770,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Sending response {"id": 36, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"message":"771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 37, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":1},"end":{"line":771,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":770,"character":4},"end":{"line":770,"character":19}},"message":"771 |   | WordTildePrefix prefix ->\n          ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 38, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":2},"contentChanges":[{"text":"(***************************************************************************)\n(*                                 Morsmall                                *)\n(*                      A concise AST for POSIX shell                      *)\n(*                                                                         *)\n(*  Copyright (C) 2017,2018,2019 Yann RÃ©gis-Gianas, Ralf Treinen,          *)\n(*  Nicolas Jeannerod                                                      *)\n(*                                                                         *)\n(*  This program is free software: you can redistribute it and/or modify   *)\n(*  it under the terms of the GNU General Public License as published by   *)\n(*  the Free Software Foundation, either version 3 of the License, or      *)\n(*  (at your option) any later version.                                    *)\n(*                                                                         *)\n(*  This program is distributed in the hope that it will be useful,        *)\n(*  but WITHOUT ANY WARRANTY; without even the implied warranty of         *)\n(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *)\n(*  GNU General Public License for more details.                           *)\n(*                                                                         *)\n(*  You should have received a copy of the GNU General Public License      *)\n(*  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *)\n(***************************************************************************)\n\nopen Morbig.CST\n\n(* Helpers about locations. *)\n\nlet convert_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b Location.located =\n  fun f loc -> { value = f loc.value ; position = loc.position }\n\nlet convert_location_2 : 'a 'b 'c. ('a -> 'b -> 'c) -> 'a located -> 'b -> 'c Location.located =\n  fun f loc x ->\n  { value = f loc.value x ; position = loc.position }\n\nlet erase_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b =\n  fun f x -> f x.value\n\n(* Convertion functions *)\n\n(* CST.program -> AST.program *)\n\nlet rec program__to__program = function\n  | Program_LineBreak_CompleteCommands_LineBreak (_, complete_commands', _) ->\n     complete_commands'__to__command'_list complete_commands'\n  | Program_LineBreak _ ->\n     []\n\nand program'__to__program (program' : program') : AST.program =\n  erase_location program__to__program program'\n\n(* CST.complete_commands -> AST.command list *)\n\nand complete_commands__to__command_list = function\n  | CompleteCommands_CompleteCommands_NewlineList_CompleteCommand (complete_commands', _, complete_command') ->\n     (complete_commands'__to__command'_list complete_commands')\n     @ [complete_command'__to__command' complete_command']\n  | CompleteCommands_CompleteCommand complete_command' ->\n     [complete_command'__to__command' complete_command']\n\nand complete_commands'__to__command'_list (complete_commands' : complete_commands') : AST.command' list =\n  erase_location complete_commands__to__command_list complete_commands'\n\n(* CST.complete_command -> AST.command option *)\n\nand complete_command__to__command = function\n  | CompleteCommand_CList_SeparatorOp (clist', sepop') ->\n     clist'__to__command' clist'\n     |> separator_op'__to__command sepop'\n  | CompleteCommand_CList clist' ->\n     clist'__to__command clist'\n\nand complete_command'__to__command' (complete_command' : complete_command') : AST.command' =\n  convert_location complete_command__to__command complete_command'\n\n(* CST.clist -> AST.command *)\n\nand clist__to__command : clist -> AST.command = function\n  | CList_CList_SeparatorOp_AndOr (clist', sep_op', and_or') ->\n     AST.Seq (\n         clist'__to__command' clist'\n         |> separator_op'__to__command' sep_op',\n         and_or'__to__command' and_or'\n       )\n  | CList_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand clist'__to__command (clist' : clist') : AST.command =\n  erase_location clist__to__command clist'\n\nand clist'__to__command' (clist' : clist') : AST.command' =\n  convert_location clist__to__command clist'\n\n(* CST.and_or -> AST.command *)\n\nand and_or__to__command : and_or -> AST.command = function\n  | AndOr_Pipeline pipeline' ->\n     pipeline'__to__command pipeline'\n  | AndOr_AndOr_AndIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.And (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n  | AndOr_AndOr_OrIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.Or (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n\nand and_or'__to__command (and_or' : and_or') : AST.command =\n  erase_location and_or__to__command and_or'\n\nand and_or'__to__command' (and_or' : and_or') : AST.command' =\n  convert_location and_or__to__command and_or'\n\n(* CST.pipeline -> AST.command *)\n\nand pipeline__to__command : pipeline -> AST.command = function\n  | Pipeline_PipeSequence pipe_sequence' ->\n     pipe_sequence'__to__command pipe_sequence'\n  | Pipeline_Bang_PipeSequence pipe_sequence' ->\n     AST.Not (pipe_sequence'__to__command' pipe_sequence')\n\nand pipeline'__to__command (pipeline' : pipeline') : AST.command =\n  erase_location pipeline__to__command pipeline'\n\nand pipeline'__to__command' (pipeline' : pipeline') : AST.command' =\n  convert_location pipeline__to__command pipeline'\n\n(* CST.pipe_sequence -> AST.command *)\n\nand pipe_sequence__to__command : pipe_sequence -> AST.command = function\n  | PipeSequence_Command command' ->\n     command'__to__command command'\n  | PipeSequence_PipeSequence_Pipe_LineBreak_Command (pipe_sequence', _, command') ->\n     AST.Pipe (\n         pipe_sequence'__to__command' pipe_sequence',\n         command'__to__command' command'\n       )\n\nand pipe_sequence'__to__command (pipe_sequence') : AST.command =\n  erase_location pipe_sequence__to__command pipe_sequence'\n\nand pipe_sequence'__to__command' (pipe_sequence') : AST.command' =\n  convert_location pipe_sequence__to__command pipe_sequence'\n\n(* CST.command -> AST.command *)\n\nand command__to__command : command -> AST.command = function\n  | Command_SimpleCommand simple_command' ->\n     simple_command'__to__command simple_command'\n  | Command_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | Command_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n  | Command_FunctionDefinition function_definition' ->\n     function_definition'__to__command function_definition'\n\nand command'__to__command (command' : command') : AST.command =\n  erase_location command__to__command command'\n\nand command'__to__command' (command' : command') : AST.command' =\n  convert_location command__to__command command'\n\n(* CST.compound_command -> AST.command *)\n\nand compound_command__to__command : compound_command -> AST.command = function\n  | CompoundCommand_BraceGroup brace_group' ->\n     brace_group'__to__command brace_group'\n  | CompoundCommand_Subshell subshell' ->\n     subshell'__to__command subshell'\n  | CompoundCommand_ForClause for_clause' ->\n     for_clause'__to__command for_clause'\n  | CompoundCommand_CaseClause case_clause' ->\n     case_clause'__to__command case_clause'\n  | CompoundCommand_IfClause if_clause' ->\n     if_clause'__to__command if_clause'\n  | CompoundCommand_WhileClause while_clause' ->\n     while_clause'__to__command while_clause'\n  | CompoundCommand_UntilClause until_clause' ->\n     until_clause'__to__command until_clause'\n\nand compound_command'__to__command (compound_command' : compound_command') : AST.command =\n  erase_location compound_command__to__command compound_command'\n\nand compound_command'__to__command' (compound_command' : compound_command') : AST.command' =\n  convert_location compound_command__to__command compound_command'\n\n(* CST.subshell -> AST.command *)\n\nand subshell__to__command : subshell -> AST.command  = function\n  | Subshell_Lparen_CompoundList_Rparen compound_list' ->\n     AST.Subshell (compound_list'__to__command' compound_list')\n\nand subshell'__to__command (subshell' : subshell') : AST.command =\n  erase_location subshell__to__command subshell'\n\n(* CST.compound_list -> AST.command *)\n\nand compound_list__to__command : compound_list -> AST.command = function\n  | CompoundList_LineBreak_Term (_, term') ->\n     term'__to__command term'\n  | CompoundList_LineBreak_Term_Separator (_, term', sep') ->\n     term'__to__command' term'\n     |> separator'__to__command sep'\n\nand compound_list'__to__command (compound_list' : compound_list') : AST.command =\n  erase_location compound_list__to__command compound_list'\n\nand compound_list'__to__command' (compound_list' : compound_list') : AST.command' =\n  convert_location compound_list__to__command compound_list'\n\n(* CST.term -> AST.command *)\n\nand term__to__command : term -> AST.command = function\n  | Term_Term_Separator_AndOr (term', sep', and_or') ->\n     AST.Seq (\n         term'__to__command' term'\n         |> separator'__to__command' sep',\n         and_or'__to__command' and_or'\n       )\n  | Term_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand term'__to__command (term' : term') : AST.command =\n  erase_location term__to__command term'\n\nand term'__to__command' (term' : term') : AST.command' =\n  convert_location term__to__command term'\n\n(* CST.for_clause -> AST.command *)\n\nand for_clause__to__command : for_clause -> AST.command = function\n  | ForClause_For_Name_DoGroup (name', do_group')\n  | ForClause_For_Name_SequentialSep_DoGroup (name', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         None ,\n         do_group'__to__command' do_group'\n       )\n  | ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup (name', _, _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some [] ,\n         do_group'__to__command' do_group'\n     )\n  | ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup (name', _, wordlist', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some (wordlist'__to__word'_list wordlist') ,\n         do_group'__to__command' do_group'\n       )\n\nand for_clause'__to__command (for_clause' : for_clause') : AST.command =\n  erase_location for_clause__to__command for_clause'\n\n(* CST.wordlist -> AST.word list *)\n\nand wordlist__to__word'_list : wordlist -> AST.word' list = function\n  | WordList_WordList_Word (wordlist', word') ->\n     (wordlist'__to__word'_list wordlist')\n     @ [word'__to__word' word']\n  | WordList_Word word' ->\n     [word'__to__word' word']\n\nand wordlist'__to__word'_list (wordlist' : wordlist') : AST.word' list =\n  erase_location wordlist__to__word'_list wordlist'\n\n(* CST.case_clause -> AST.command *)\n\nand case_clause__to__command : case_clause -> AST.command = function\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac (word', _, _, case_list') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list'__to__case_item'_list case_list'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac (word', _, _, case_list_ns') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list_ns'__to__case_item'_list case_list_ns'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_Esac (word', _, _) ->\n     AST.Case (\n         word'__to__word' word' ,\n         []\n       )\n\nand case_clause'__to__command (case_clause' : case_clause') : AST.command =\n  erase_location case_clause__to__command case_clause'\n\n(* CST.case_list_ns -> AST.case list *)\n\nand case_list_ns__to__case_item'_list : case_list_ns -> AST.case_item' list = function (*FIXME*)\n  | CaseListNS_CaseList_CaseItemNS (case_list', case_item_ns') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item_ns'__to__case_item' case_item_ns']\n  | CaseListNS_CaseItemNS case_item_ns' ->\n     [case_item_ns'__to__case_item' case_item_ns']\n\nand case_list_ns'__to__case_item'_list (case_list_ns' : case_list_ns') : AST.case_item' list =\n  erase_location case_list_ns__to__case_item'_list case_list_ns'\n\n(* CST.case_list -> AST.case list *)\n\nand case_list__to__case_item'_list : case_list -> AST.case_item' list = function (*FIXME*)\n  | CaseList_CaseList_CaseItem (case_list', case_item') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item'__to__case_item' case_item']\n  | CaseList_CaseItem case_item' ->\n     [case_item'__to__case_item' case_item']\n\nand case_list'__to__case_item'_list (case_list' : case_list') : AST.case_item' list =\n  erase_location case_list__to__case_item'_list case_list'\n\n(* CST.case_item_ns -> AST.case_item *)\n\nand case_item_ns__to__case_item : case_item_ns -> AST.case_item = function\n  | CaseItemNS_Pattern_Rparen_LineBreak (pattern', _)\n  | CaseItemNS_Lparen_Pattern_Rparen_LineBreak (pattern', _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItemNS_Pattern_Rparen_CompoundList (pattern', compound_list')\n  | CaseItemNS_Lparen_Pattern_Rparen_CompoundList (pattern', compound_list') ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item_ns'__to__case_item' (case_item_ns' : case_item_ns') : AST.case_item' =\n  convert_location case_item_ns__to__case_item case_item_ns'\n\n(* CST.case_item -> AST.case_item *)\n\nand case_item__to__case_item : case_item -> AST.case_item = function\n  | CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _)\n  | CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _)\n  | CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _) ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item'__to__case_item' (case_item' : case_item') : AST.case_item' =\n  convert_location case_item__to__case_item case_item'\n\n(* CST.pattern -> AST.pattern *)\n\nand pattern__to__pattern : pattern -> AST.pattern = function\n  | Pattern_Word word' ->\n     [word'__to__word word']\n  | Pattern_Pattern_Pipe_Word (pattern', word') ->\n     (pattern'__to__pattern pattern')\n     @ [word'__to__word word']\n\nand pattern'__to__pattern (pattern' : pattern') : AST.pattern =\n  erase_location pattern__to__pattern pattern'\n\nand pattern'__to__pattern' (pattern' : pattern') : AST.pattern' =\n  convert_location pattern__to__pattern pattern'\n\n(* CST.if_clause -> AST.command *)\n\nand if_clause__to__command : if_clause -> AST.command = function\n  | IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | IfClause_If_CompoundList_Then_CompoundList_Fi (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n\nand if_clause'__to__command (if_clause' : if_clause') : AST.command =\n  erase_location if_clause__to__command if_clause'\n\n(* CST.else_part -> AST.command *)\n\nand else_part__to__command : else_part -> AST.command = function\n  | ElsePart_Elif_CompoundList_Then_CompoundList (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n  | ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | ElsePart_Else_CompoundList compound_list' ->\n     compound_list'__to__command compound_list'\n\nand else_part'__to__command' (else_part' : else_part') : AST.command' =\n  convert_location else_part__to__command else_part'\n\n(* CST.while_clause -> AST.command *)\n\nand while_clause__to__command : while_clause -> AST.command = function\n  | WhileClause_While_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.While (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand while_clause'__to__command (while_clause' : while_clause') : AST.command =\n  erase_location while_clause__to__command while_clause'\n\n(* CST.until_clause -> AST.command *)\n\nand until_clause__to__command : until_clause -> AST.command = function\n  | UntilClause_Until_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.Until (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand until_clause'__to__command (until_clause' : until_clause') : AST.command =\n  erase_location until_clause__to__command until_clause'\n\n(* CST.function_definition -> AST.command *)\n\nand function_definition__to__command : function_definition -> AST.command = function\n  | FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody (fname', _, function_body') ->\n     AST.Function (\n         fname'__to__name fname' ,\n         function_body'__to__command' function_body'\n       )\n\nand function_definition'__to__command (function_definition' : function_definition') : AST.command =\n  erase_location function_definition__to__command function_definition'\n\n(* CST.function_body -> AST.command *)\n\nand function_body__to__command : function_body -> AST.command = function\n  | FunctionBody_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | FunctionBody_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n\nand function_body'__to__command' (function_body' : function_body') : AST.command' =\n  convert_location function_body__to__command function_body'\n\n(* CST.fname -> AST.name *)\n\nand fname__to__name : fname -> AST.name = function\n  | Fname_Name name -> name__to__name name\n\nand fname'__to__name (fname' : fname') : AST.name =\n  erase_location fname__to__name fname'\n\n(* CST.brace_group -> AST.command *)\n\nand brace_group__to__command : brace_group -> AST.command = function\n  | BraceGroup_LBrace_CompoundList_RBrace compound_list' ->\n     compound_list'__to__command compound_list'\n\nand brace_group'__to__command (brace_group' : brace_group') : AST.command =\n  erase_location brace_group__to__command brace_group'\n\n(* CST.do_group -> AST.command *)\n\nand do_group__to__command : do_group -> AST.command = function\n  | DoGroup_Do_CompoundList_Done compound_list' ->\n     compound_list'__to__command compound_list'\n\nand do_group'__to__command' (do_group' : do_group') : AST.command' =\n  convert_location do_group__to__command do_group'\n\n(* CST.simple_command -> AST.command *)\n\nand simple_command'__to__command (simple_command' : simple_command') : AST.command =\n  let ( assignment'_list , word'_list , io_redirect'_list ) =\n    match simple_command'.value with\n    | SimpleCommand_CmdPrefix_CmdWord_CmdSuffix (cmd_prefix', cmd_word', cmd_suffix') ->\n       (* Since we are sorting right-to-left, we need to sort the\n          suffix before the prefix. *)\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] io_redirect'_list cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix_CmdWord (cmd_prefix', cmd_word') ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: [] ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix cmd_prefix' ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       ( List.map assignment_word'__to__assignment' assignment_word'_list ,\n         [] ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName_CmdSuffix (cmd_name', cmd_suffix') ->\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName cmd_name' ->\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: [] ,\n         [] )\n  in\n  (* Because of the semantics of redirections, we need to handle that\n     redirection list from right to left. *)\n  List.fold_right\n    (\n      fun io_redirect' command ->\n      io_redirect'__to__command\n        io_redirect'\n        { value = command ;\n          position = simple_command'.position }\n    )\n    io_redirect'_list\n    (AST.Simple (assignment'_list, word'_list ))\n\n(* CST.cmd_prefix -> CST.assignment_word' list * CST.io_redirect' list\n\n   This function takes a prefix (which is basically a list of either\n   CST.assignment_word' or CST.io_redirect' and return two separate\n   lists for these two type of elements. It uses accumulators, but\n   since we are converting right-to-left lists to left-to-right lists,\n   we do not need a List.rev. *)\n\nand sort__cmd_prefix (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list) (*FIXME: check order*)\n    : cmd_prefix -> assignment_word' list * io_redirect' list = function\n  | CmdPrefix_IoRedirect io_redirect' ->\n     ( assignment_word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_IoRedirect (cmd_prefix', io_redirect') ->\n     sort__cmd_prefix'\n       assignment_word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_prefix'\n\n  | CmdPrefix_AssignmentWord assignment_word' ->\n     ( assignment_word' :: assignment_word'_acc ,\n       io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_AssignmentWord (cmd_prefix', assignment_word') ->\n     sort__cmd_prefix'\n       (assignment_word' :: assignment_word'_acc)\n       io_redirect'_acc\n       cmd_prefix'\n\nand sort__cmd_prefix' (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_prefix' : cmd_prefix') : assignment_word' list * io_redirect' list =\n  sort__cmd_prefix assignment_word'_acc io_redirect'_acc cmd_prefix'.value\n\n(* CST.cmd_suffix -> CST.word' list * CST.io_redirect' list\n\n   This function takes a suffix (which is basically a list of either\n   CST.word' or CST.io_redirect' and return two separate lists for\n   these two type of elements. It uses accumulators, but since we are\n   converting right-to-left lists to left-to-right lists, we do not\n   need a List.rev. *)\n\nand sort__cmd_suffix (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    : cmd_suffix -> word' list * io_redirect' list = function\n  | CmdSuffix_IoRedirect io_redirect' ->\n     ( word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_IoRedirect (cmd_suffix', io_redirect') ->\n     sort__cmd_suffix'\n       word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_suffix'\n\n  | CmdSuffix_Word word' ->\n     ( word' :: word'_acc ,\n       io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_Word (cmd_suffix', word') ->\n     sort__cmd_suffix'\n       (word' :: word'_acc)\n       io_redirect'_acc\n       cmd_suffix'\n\nand sort__cmd_suffix' (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_suffix' : cmd_suffix') : word' list * io_redirect' list =\n  sort__cmd_suffix word'_acc io_redirect'_acc cmd_suffix'.value\n\n(* CST.cmd_name -> AST.word *)\n\nand cmd_name__to__word : cmd_name -> AST.word = function\n  | CmdName_Word word' ->\n     word'__to__word word'\n\nand cmd_name'__to__word' (cmd_name' : cmd_name') : AST.word' =\n  convert_location cmd_name__to__word cmd_name'\n\n(* CST.cmd_word -> AST.word *)\n\nand cmd_word__to__word : cmd_word -> AST.word = function\n  | CmdWord_Word word' ->\n     word'__to__word word'\n\nand cmd_word'__to__word' (cmd_word' : cmd_word') : AST.word' =\n  convert_location cmd_word__to__word cmd_word'\n\n(* CST.redirect_list -> AST.command' -> AST.command *)\n\nand redirect_list__to__command redirect_list (command' : AST.command') : AST.command =\n  match redirect_list with\n  | RedirectList_IoRedirect io_redirect' ->\n     command'\n     |> io_redirect'__to__command io_redirect'\n  | RedirectList_RedirectList_IoRedirect (redirect_list', io_redirect') ->\n     command'\n     |> io_redirect'__to__command' io_redirect'\n     |> redirect_list'__to__command redirect_list' (*FIXME: check order of the redirections*)\n\nand redirect_list'__to__command (redirect_list' : redirect_list') (command' : AST.command') : AST.command =\n  erase_location redirect_list__to__command redirect_list' command'\n\n(* CST.io_redirect -> AST.command' -> AST.command *)\n\nand io_redirect__to__command (io_redirect : io_redirect) (command' : AST.command') : AST.command =\n  match io_redirect with\n  | IoRedirect_IoFile io_file' ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (AST.default_redirection_descriptor kind) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoNumber_IoFile (io_number, io_file') ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (io_number__to__int io_number) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoHere io_here' ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         0 ,\n         word' (* FIXME: strip that word if needed *)\n       )\n  | IoRedirect_IoNumber_IoHere (io_number, io_here') ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         (io_number__to__int io_number) ,\n         word' (* FIXME: strip that word if needed *)\n       )\n\nand io_redirect'__to__command (io_redirect' : io_redirect') (command' : AST.command') : AST.command =\n  erase_location io_redirect__to__command io_redirect' command'\n\nand io_redirect'__to__command' (io_redirect' : io_redirect') (command' : AST.command') : AST.command' =\n  convert_location_2 io_redirect__to__command io_redirect' command'\n\n(* CST.io_file -> AST.redirection_kind * AST.word *)\n\nand io_file__to__kind_word' io_file =\n  let kind, filename' =\n    match io_file with\n    | IoFile_Less_FileName filename' -> AST.Input, filename'\n    | IoFile_LessAnd_FileName filename' -> AST.InputDuplicate, filename'\n    | IoFile_Great_FileName filename' -> AST.Output, filename'\n    | IoFile_GreatAnd_FileName filename' -> AST.OutputDuplicate, filename'\n    | IoFile_DGreat_FileName filename' -> AST.OutputAppend, filename'\n    | IoFile_LessGreat_FileName filename' -> AST.InputOutput, filename'\n    | IoFile_Clobber_FileName filename' -> AST.OutputClobber, filename'\n  in\n  ( kind , filename'__to__word' filename' )\n\nand io_file'__to__kind_word' (io_file' : io_file') : AST.kind * AST.word' =\n  erase_location io_file__to__kind_word' io_file'\n\n(* CST.filename -> AST.word *)\n\nand filename__to__word' : filename -> AST.word' = function\n  | Filename_Word word' ->\n     word'__to__word' word'\n\nand filename'__to__word' (filename' : filename') : AST.word' =\n  erase_location filename__to__word' filename'\n\n(* CST.io_here -> bool * AST.word *)\n\nand io_here__to__strip_word' : io_here -> bool * AST.word' = function\n  | IoHere_DLess_HereEnd (_, word'_ref) ->\n     (false, word'__to__word' !word'_ref)\n  | IoHere_DLessDash_HereEnd (_, word'_ref) ->\n     (true, word'__to__word' !word'_ref)\n\nand io_here'__to__strip_word' (io_here' : io_here') : bool * AST.word' =\n  erase_location io_here__to__strip_word' io_here'\n\n(* CST.separator_op -> AST.command -> AST.command *)\n\nand separator_op__to__command (sep_op : separator_op) (command' : AST.command') : AST.command =\n  match sep_op with\n  | SeparatorOp_Uppersand -> AST.Async command'\n  | SeparatorOp_Semicolon -> command'.value\n\nand separator_op'__to__command (sep_op' : separator_op') (command' : AST.command') : AST.command =\n  erase_location separator_op__to__command sep_op' command'\n\nand separator_op'__to__command' (sep_op' : separator_op') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator_op'__to__command sep_op' command')\n\n(* CST.separator -> AST.command -> AST.command *)\n\nand separator__to__command (sep : separator) (command' : AST.command') : AST.command =\n  match sep with\n  | Separator_SeparatorOp_LineBreak (sep_op', _) ->\n     separator_op'__to__command sep_op' command'\n  | Separator_NewLineList _ ->\n     command'.value\n\nand separator'__to__command (sep' : separator') (command' : AST.command') : AST.command =\n  erase_location separator__to__command sep' command'\n\nand separator'__to__command' (sep' : separator') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator'__to__command sep' command')\n\n(* *)\n\nand sequential_sep__to__command _ (command : AST.command) : AST.command =\n  command\n\n(* CST.word -> AST.word *)\n\nand word__to__word : word -> AST.word = function\n  | Word (_, word_cst) ->\n     word_cst__to__word word_cst\n\nand word'__to__word (word' : word') : AST.word =\n  erase_location word__to__word word'\n\nand word'__to__word' (word' : word') : AST.word' =\n  convert_location word__to__word word'\n\nand word_double_quoted__to__word (Word (_, word_cst)) =\n  word_cst_double_quoted__to__word word_cst\n\n(* CST.word_cst -> AST.word *)\n\nand word_cst__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component__to__word word_cst\n  |> List.flatten\n\nand word_cst_double_quoted__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component_double_quoted__to__word word_cst\n  |> List.flatten\n\n(* CST.word_component -> AST.word_component *)\n\nand word_component__to__word = function\n  | WordEmpty ->\n    []\n  | WordName name ->\n    [AST.WLiteral name]\n  (* | WordTildePrefix prefix ->\n    [AST.WTildePrefix prefix] *)\n  | WordLiteral literal ->\n    [AST.WLiteral literal]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst__to__word word_cst\n  | WordSingleQuoted (Word (_, [WordLiteral literal])) ->\n    [AST.WLiteral literal]\n  | WordSingleQuoted (Word (_, [])) ->\n    [AST.WLiteral \"\"]\n  | WordSingleQuoted _ ->\n    assert false\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordDoubleQuoted word ->\n    [AST.WDoubleQuoted (word_double_quoted__to__word word)]\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordGlobAll ->\n    [AST.WGlobAll]\n  | WordGlobAny ->\n    [AST.WGlobAny]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n\nand word_component_double_quoted__to__word = function\n  | WordEmpty ->\n    []\n  | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n    [AST.WLiteral literal]\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst_double_quoted__to__word word_cst\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n  | WordDoubleQuoted _ | WordSingleQuoted _\n  | WordGlobAll | WordGlobAny ->\n    assert false\n\nand variable_attribute__to__attribute = function\n  | NoAttribute ->\n    AST.NoAttribute\n  | ParameterLength word ->\n    AST.ParameterLength (word__to__word word)\n  | UseDefaultValues (_, word) ->\n    AST.UseDefaultValues (word__to__word word)\n  | AssignDefaultValues (_, word) ->\n    AST.AssignDefaultValues (word__to__word word)\n  | IndicateErrorifNullorUnset (_, word) ->\n    AST.IndicateErrorifNullorUnset (word__to__word word)\n  | UseAlternativeValue (_, word) ->\n    AST.UseAlternativeValue (word__to__word word)\n  | RemoveSmallestSuffixPattern word ->\n    AST.RemoveSmallestSuffixPattern (word__to__word word)\n  | RemoveLargestSuffixPattern word ->\n    AST.RemoveLargestSuffixPattern (word__to__word word)\n  | RemoveSmallestPrefixPattern word ->\n    AST.RemoveSmallestPrefixPattern (word__to__word word)\n  | RemoveLargestPrefixPattern word ->\n    AST.RemoveLargestPrefixPattern (word__to__word word)\n\n(* CST.name -> AST.name *)\n\nand name__to__name : name -> AST.name = function\n  | Name name -> name\n\nand name'__to__name (name' : name') : AST.name =\n  erase_location name__to__name name'\n\n(* CST.assignment_word -> AST.assignment *)\n\nand assignment_word__to__assignment ((name, word) : assignment_word) : AST.assignment =\n  (name__to__name name,\n   word__to__word word)\n\nand assignment_word'__to__assignment' (assignment_word' : assignment_word') : AST.assignment' =\n  convert_location assignment_word__to__assignment assignment_word'\n\n(* CST.io_number -> AST.descr *)\n\nand io_number__to__int  = function\n  | IONumber io_number -> int_of_string io_number\n"}]}}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.cmt
Size 204306
Sending response {"id": 39, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "191 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name, pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordName, WordEmpty], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst, compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', complete_commands'}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0369548797607ms
Sending response {"id": 40, "jsonrpc": "2.0", "result": [{"name": "erase_location", "kind": 22, "location": {"range": {"start": {"line": 32, "character": 0}, "end": {"line": 33, "character": 22}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location_2", "kind": 22, "location": {"range": {"start": {"line": 28, "character": 0}, "end": {"line": 30, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location", "kind": 22, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 26, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast", line 800, characters 45-60:
800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->
                                                   ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml", "diagnostics": [{"range": {"start": {"line": 799, "character": 45}, "end": {"line": 799, "character": 60}}, "message": "800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n                                                   ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":1},"end":{"line":771,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Sending response {"id": 41, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":2},"contentChanges":[{"text":"(***************************************************************************)\n(*                                 Morsmall                                *)\n(*                      A concise AST for POSIX shell                      *)\n(*                                                                         *)\n(*  Copyright (C) 2017,2018,2019 Yann RÃ©gis-Gianas, Ralf Treinen,          *)\n(*  Nicolas Jeannerod                                                      *)\n(*                                                                         *)\n(*  This program is free software: you can redistribute it and/or modify   *)\n(*  it under the terms of the GNU General Public License as published by   *)\n(*  the Free Software Foundation, either version 3 of the License, or      *)\n(*  (at your option) any later version.                                    *)\n(*                                                                         *)\n(*  This program is distributed in the hope that it will be useful,        *)\n(*  but WITHOUT ANY WARRANTY; without even the implied warranty of         *)\n(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *)\n(*  GNU General Public License for more details.                           *)\n(*                                                                         *)\n(*  You should have received a copy of the GNU General Public License      *)\n(*  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *)\n(***************************************************************************)\n\nopen Morbig.CST\n\n(* Helpers about locations. *)\n\nlet convert_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b Location.located =\n  fun f loc -> { value = f loc.value ; position = loc.position }\n\nlet convert_location_2 : 'a 'b 'c. ('a -> 'b -> 'c) -> 'a located -> 'b -> 'c Location.located =\n  fun f loc x ->\n  { value = f loc.value x ; position = loc.position }\n\nlet erase_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b =\n  fun f x -> f x.value\n\n(* Convertion functions *)\n\n(* CST.program -> AST.program *)\n\nlet rec program__to__program = function\n  | Program_LineBreak_CompleteCommands_LineBreak (_, complete_commands', _) ->\n     complete_commands'__to__command'_list complete_commands'\n  | Program_LineBreak _ ->\n     []\n\nand program'__to__program (program' : program') : AST.program =\n  erase_location program__to__program program'\n\n(* CST.complete_commands -> AST.command list *)\n\nand complete_commands__to__command_list = function\n  | CompleteCommands_CompleteCommands_NewlineList_CompleteCommand (complete_commands', _, complete_command') ->\n     (complete_commands'__to__command'_list complete_commands')\n     @ [complete_command'__to__command' complete_command']\n  | CompleteCommands_CompleteCommand complete_command' ->\n     [complete_command'__to__command' complete_command']\n\nand complete_commands'__to__command'_list (complete_commands' : complete_commands') : AST.command' list =\n  erase_location complete_commands__to__command_list complete_commands'\n\n(* CST.complete_command -> AST.command option *)\n\nand complete_command__to__command = function\n  | CompleteCommand_CList_SeparatorOp (clist', sepop') ->\n     clist'__to__command' clist'\n     |> separator_op'__to__command sepop'\n  | CompleteCommand_CList clist' ->\n     clist'__to__command clist'\n\nand complete_command'__to__command' (complete_command' : complete_command') : AST.command' =\n  convert_location complete_command__to__command complete_command'\n\n(* CST.clist -> AST.command *)\n\nand clist__to__command : clist -> AST.command = function\n  | CList_CList_SeparatorOp_AndOr (clist', sep_op', and_or') ->\n     AST.Seq (\n         clist'__to__command' clist'\n         |> separator_op'__to__command' sep_op',\n         and_or'__to__command' and_or'\n       )\n  | CList_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand clist'__to__command (clist' : clist') : AST.command =\n  erase_location clist__to__command clist'\n\nand clist'__to__command' (clist' : clist') : AST.command' =\n  convert_location clist__to__command clist'\n\n(* CST.and_or -> AST.command *)\n\nand and_or__to__command : and_or -> AST.command = function\n  | AndOr_Pipeline pipeline' ->\n     pipeline'__to__command pipeline'\n  | AndOr_AndOr_AndIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.And (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n  | AndOr_AndOr_OrIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.Or (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n\nand and_or'__to__command (and_or' : and_or') : AST.command =\n  erase_location and_or__to__command and_or'\n\nand and_or'__to__command' (and_or' : and_or') : AST.command' =\n  convert_location and_or__to__command and_or'\n\n(* CST.pipeline -> AST.command *)\n\nand pipeline__to__command : pipeline -> AST.command = function\n  | Pipeline_PipeSequence pipe_sequence' ->\n     pipe_sequence'__to__command pipe_sequence'\n  | Pipeline_Bang_PipeSequence pipe_sequence' ->\n     AST.Not (pipe_sequence'__to__command' pipe_sequence')\n\nand pipeline'__to__command (pipeline' : pipeline') : AST.command =\n  erase_location pipeline__to__command pipeline'\n\nand pipeline'__to__command' (pipeline' : pipeline') : AST.command' =\n  convert_location pipeline__to__command pipeline'\n\n(* CST.pipe_sequence -> AST.command *)\n\nand pipe_sequence__to__command : pipe_sequence -> AST.command = function\n  | PipeSequence_Command command' ->\n     command'__to__command command'\n  | PipeSequence_PipeSequence_Pipe_LineBreak_Command (pipe_sequence', _, command') ->\n     AST.Pipe (\n         pipe_sequence'__to__command' pipe_sequence',\n         command'__to__command' command'\n       )\n\nand pipe_sequence'__to__command (pipe_sequence') : AST.command =\n  erase_location pipe_sequence__to__command pipe_sequence'\n\nand pipe_sequence'__to__command' (pipe_sequence') : AST.command' =\n  convert_location pipe_sequence__to__command pipe_sequence'\n\n(* CST.command -> AST.command *)\n\nand command__to__command : command -> AST.command = function\n  | Command_SimpleCommand simple_command' ->\n     simple_command'__to__command simple_command'\n  | Command_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | Command_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n  | Command_FunctionDefinition function_definition' ->\n     function_definition'__to__command function_definition'\n\nand command'__to__command (command' : command') : AST.command =\n  erase_location command__to__command command'\n\nand command'__to__command' (command' : command') : AST.command' =\n  convert_location command__to__command command'\n\n(* CST.compound_command -> AST.command *)\n\nand compound_command__to__command : compound_command -> AST.command = function\n  | CompoundCommand_BraceGroup brace_group' ->\n     brace_group'__to__command brace_group'\n  | CompoundCommand_Subshell subshell' ->\n     subshell'__to__command subshell'\n  | CompoundCommand_ForClause for_clause' ->\n     for_clause'__to__command for_clause'\n  | CompoundCommand_CaseClause case_clause' ->\n     case_clause'__to__command case_clause'\n  | CompoundCommand_IfClause if_clause' ->\n     if_clause'__to__command if_clause'\n  | CompoundCommand_WhileClause while_clause' ->\n     while_clause'__to__command while_clause'\n  | CompoundCommand_UntilClause until_clause' ->\n     until_clause'__to__command until_clause'\n\nand compound_command'__to__command (compound_command' : compound_command') : AST.command =\n  erase_location compound_command__to__command compound_command'\n\nand compound_command'__to__command' (compound_command' : compound_command') : AST.command' =\n  convert_location compound_command__to__command compound_command'\n\n(* CST.subshell -> AST.command *)\n\nand subshell__to__command : subshell -> AST.command  = function\n  | Subshell_Lparen_CompoundList_Rparen compound_list' ->\n     AST.Subshell (compound_list'__to__command' compound_list')\n\nand subshell'__to__command (subshell' : subshell') : AST.command =\n  erase_location subshell__to__command subshell'\n\n(* CST.compound_list -> AST.command *)\n\nand compound_list__to__command : compound_list -> AST.command = function\n  | CompoundList_LineBreak_Term (_, term') ->\n     term'__to__command term'\n  | CompoundList_LineBreak_Term_Separator (_, term', sep') ->\n     term'__to__command' term'\n     |> separator'__to__command sep'\n\nand compound_list'__to__command (compound_list' : compound_list') : AST.command =\n  erase_location compound_list__to__command compound_list'\n\nand compound_list'__to__command' (compound_list' : compound_list') : AST.command' =\n  convert_location compound_list__to__command compound_list'\n\n(* CST.term -> AST.command *)\n\nand term__to__command : term -> AST.command = function\n  | Term_Term_Separator_AndOr (term', sep', and_or') ->\n     AST.Seq (\n         term'__to__command' term'\n         |> separator'__to__command' sep',\n         and_or'__to__command' and_or'\n       )\n  | Term_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand term'__to__command (term' : term') : AST.command =\n  erase_location term__to__command term'\n\nand term'__to__command' (term' : term') : AST.command' =\n  convert_location term__to__command term'\n\n(* CST.for_clause -> AST.command *)\n\nand for_clause__to__command : for_clause -> AST.command = function\n  | ForClause_For_Name_DoGroup (name', do_group')\n  | ForClause_For_Name_SequentialSep_DoGroup (name', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         None ,\n         do_group'__to__command' do_group'\n       )\n  | ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup (name', _, _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some [] ,\n         do_group'__to__command' do_group'\n     )\n  | ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup (name', _, wordlist', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some (wordlist'__to__word'_list wordlist') ,\n         do_group'__to__command' do_group'\n       )\n\nand for_clause'__to__command (for_clause' : for_clause') : AST.command =\n  erase_location for_clause__to__command for_clause'\n\n(* CST.wordlist -> AST.word list *)\n\nand wordlist__to__word'_list : wordlist -> AST.word' list = function\n  | WordList_WordList_Word (wordlist', word') ->\n     (wordlist'__to__word'_list wordlist')\n     @ [word'__to__word' word']\n  | WordList_Word word' ->\n     [word'__to__word' word']\n\nand wordlist'__to__word'_list (wordlist' : wordlist') : AST.word' list =\n  erase_location wordlist__to__word'_list wordlist'\n\n(* CST.case_clause -> AST.command *)\n\nand case_clause__to__command : case_clause -> AST.command = function\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac (word', _, _, case_list') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list'__to__case_item'_list case_list'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac (word', _, _, case_list_ns') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list_ns'__to__case_item'_list case_list_ns'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_Esac (word', _, _) ->\n     AST.Case (\n         word'__to__word' word' ,\n         []\n       )\n\nand case_clause'__to__command (case_clause' : case_clause') : AST.command =\n  erase_location case_clause__to__command case_clause'\n\n(* CST.case_list_ns -> AST.case list *)\n\nand case_list_ns__to__case_item'_list : case_list_ns -> AST.case_item' list = function (*FIXME*)\n  | CaseListNS_CaseList_CaseItemNS (case_list', case_item_ns') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item_ns'__to__case_item' case_item_ns']\n  | CaseListNS_CaseItemNS case_item_ns' ->\n     [case_item_ns'__to__case_item' case_item_ns']\n\nand case_list_ns'__to__case_item'_list (case_list_ns' : case_list_ns') : AST.case_item' list =\n  erase_location case_list_ns__to__case_item'_list case_list_ns'\n\n(* CST.case_list -> AST.case list *)\n\nand case_list__to__case_item'_list : case_list -> AST.case_item' list = function (*FIXME*)\n  | CaseList_CaseList_CaseItem (case_list', case_item') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item'__to__case_item' case_item']\n  | CaseList_CaseItem case_item' ->\n     [case_item'__to__case_item' case_item']\n\nand case_list'__to__case_item'_list (case_list' : case_list') : AST.case_item' list =\n  erase_location case_list__to__case_item'_list case_list'\n\n(* CST.case_item_ns -> AST.case_item *)\n\nand case_item_ns__to__case_item : case_item_ns -> AST.case_item = function\n  | CaseItemNS_Pattern_Rparen_LineBreak (pattern', _)\n  | CaseItemNS_Lparen_Pattern_Rparen_LineBreak (pattern', _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItemNS_Pattern_Rparen_CompoundList (pattern', compound_list')\n  | CaseItemNS_Lparen_Pattern_Rparen_CompoundList (pattern', compound_list') ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item_ns'__to__case_item' (case_item_ns' : case_item_ns') : AST.case_item' =\n  convert_location case_item_ns__to__case_item case_item_ns'\n\n(* CST.case_item -> AST.case_item *)\n\nand case_item__to__case_item : case_item -> AST.case_item = function\n  | CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _)\n  | CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _)\n  | CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _) ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item'__to__case_item' (case_item' : case_item') : AST.case_item' =\n  convert_location case_item__to__case_item case_item'\n\n(* CST.pattern -> AST.pattern *)\n\nand pattern__to__pattern : pattern -> AST.pattern = function\n  | Pattern_Word word' ->\n     [word'__to__word word']\n  | Pattern_Pattern_Pipe_Word (pattern', word') ->\n     (pattern'__to__pattern pattern')\n     @ [word'__to__word word']\n\nand pattern'__to__pattern (pattern' : pattern') : AST.pattern =\n  erase_location pattern__to__pattern pattern'\n\nand pattern'__to__pattern' (pattern' : pattern') : AST.pattern' =\n  convert_location pattern__to__pattern pattern'\n\n(* CST.if_clause -> AST.command *)\n\nand if_clause__to__command : if_clause -> AST.command = function\n  | IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | IfClause_If_CompoundList_Then_CompoundList_Fi (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n\nand if_clause'__to__command (if_clause' : if_clause') : AST.command =\n  erase_location if_clause__to__command if_clause'\n\n(* CST.else_part -> AST.command *)\n\nand else_part__to__command : else_part -> AST.command = function\n  | ElsePart_Elif_CompoundList_Then_CompoundList (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n  | ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | ElsePart_Else_CompoundList compound_list' ->\n     compound_list'__to__command compound_list'\n\nand else_part'__to__command' (else_part' : else_part') : AST.command' =\n  convert_location else_part__to__command else_part'\n\n(* CST.while_clause -> AST.command *)\n\nand while_clause__to__command : while_clause -> AST.command = function\n  | WhileClause_While_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.While (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand while_clause'__to__command (while_clause' : while_clause') : AST.command =\n  erase_location while_clause__to__command while_clause'\n\n(* CST.until_clause -> AST.command *)\n\nand until_clause__to__command : until_clause -> AST.command = function\n  | UntilClause_Until_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.Until (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand until_clause'__to__command (until_clause' : until_clause') : AST.command =\n  erase_location until_clause__to__command until_clause'\n\n(* CST.function_definition -> AST.command *)\n\nand function_definition__to__command : function_definition -> AST.command = function\n  | FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody (fname', _, function_body') ->\n     AST.Function (\n         fname'__to__name fname' ,\n         function_body'__to__command' function_body'\n       )\n\nand function_definition'__to__command (function_definition' : function_definition') : AST.command =\n  erase_location function_definition__to__command function_definition'\n\n(* CST.function_body -> AST.command *)\n\nand function_body__to__command : function_body -> AST.command = function\n  | FunctionBody_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | FunctionBody_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n\nand function_body'__to__command' (function_body' : function_body') : AST.command' =\n  convert_location function_body__to__command function_body'\n\n(* CST.fname -> AST.name *)\n\nand fname__to__name : fname -> AST.name = function\n  | Fname_Name name -> name__to__name name\n\nand fname'__to__name (fname' : fname') : AST.name =\n  erase_location fname__to__name fname'\n\n(* CST.brace_group -> AST.command *)\n\nand brace_group__to__command : brace_group -> AST.command = function\n  | BraceGroup_LBrace_CompoundList_RBrace compound_list' ->\n     compound_list'__to__command compound_list'\n\nand brace_group'__to__command (brace_group' : brace_group') : AST.command =\n  erase_location brace_group__to__command brace_group'\n\n(* CST.do_group -> AST.command *)\n\nand do_group__to__command : do_group -> AST.command = function\n  | DoGroup_Do_CompoundList_Done compound_list' ->\n     compound_list'__to__command compound_list'\n\nand do_group'__to__command' (do_group' : do_group') : AST.command' =\n  convert_location do_group__to__command do_group'\n\n(* CST.simple_command -> AST.command *)\n\nand simple_command'__to__command (simple_command' : simple_command') : AST.command =\n  let ( assignment'_list , word'_list , io_redirect'_list ) =\n    match simple_command'.value with\n    | SimpleCommand_CmdPrefix_CmdWord_CmdSuffix (cmd_prefix', cmd_word', cmd_suffix') ->\n       (* Since we are sorting right-to-left, we need to sort the\n          suffix before the prefix. *)\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] io_redirect'_list cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix_CmdWord (cmd_prefix', cmd_word') ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: [] ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix cmd_prefix' ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       ( List.map assignment_word'__to__assignment' assignment_word'_list ,\n         [] ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName_CmdSuffix (cmd_name', cmd_suffix') ->\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName cmd_name' ->\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: [] ,\n         [] )\n  in\n  (* Because of the semantics of redirections, we need to handle that\n     redirection list from right to left. *)\n  List.fold_right\n    (\n      fun io_redirect' command ->\n      io_redirect'__to__command\n        io_redirect'\n        { value = command ;\n          position = simple_command'.position }\n    )\n    io_redirect'_list\n    (AST.Simple (assignment'_list, word'_list ))\n\n(* CST.cmd_prefix -> CST.assignment_word' list * CST.io_redirect' list\n\n   This function takes a prefix (which is basically a list of either\n   CST.assignment_word' or CST.io_redirect' and return two separate\n   lists for these two type of elements. It uses accumulators, but\n   since we are converting right-to-left lists to left-to-right lists,\n   we do not need a List.rev. *)\n\nand sort__cmd_prefix (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list) (*FIXME: check order*)\n    : cmd_prefix -> assignment_word' list * io_redirect' list = function\n  | CmdPrefix_IoRedirect io_redirect' ->\n     ( assignment_word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_IoRedirect (cmd_prefix', io_redirect') ->\n     sort__cmd_prefix'\n       assignment_word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_prefix'\n\n  | CmdPrefix_AssignmentWord assignment_word' ->\n     ( assignment_word' :: assignment_word'_acc ,\n       io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_AssignmentWord (cmd_prefix', assignment_word') ->\n     sort__cmd_prefix'\n       (assignment_word' :: assignment_word'_acc)\n       io_redirect'_acc\n       cmd_prefix'\n\nand sort__cmd_prefix' (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_prefix' : cmd_prefix') : assignment_word' list * io_redirect' list =\n  sort__cmd_prefix assignment_word'_acc io_redirect'_acc cmd_prefix'.value\n\n(* CST.cmd_suffix -> CST.word' list * CST.io_redirect' list\n\n   This function takes a suffix (which is basically a list of either\n   CST.word' or CST.io_redirect' and return two separate lists for\n   these two type of elements. It uses accumulators, but since we are\n   converting right-to-left lists to left-to-right lists, we do not\n   need a List.rev. *)\n\nand sort__cmd_suffix (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    : cmd_suffix -> word' list * io_redirect' list = function\n  | CmdSuffix_IoRedirect io_redirect' ->\n     ( word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_IoRedirect (cmd_suffix', io_redirect') ->\n     sort__cmd_suffix'\n       word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_suffix'\n\n  | CmdSuffix_Word word' ->\n     ( word' :: word'_acc ,\n       io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_Word (cmd_suffix', word') ->\n     sort__cmd_suffix'\n       (word' :: word'_acc)\n       io_redirect'_acc\n       cmd_suffix'\n\nand sort__cmd_suffix' (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_suffix' : cmd_suffix') : word' list * io_redirect' list =\n  sort__cmd_suffix word'_acc io_redirect'_acc cmd_suffix'.value\n\n(* CST.cmd_name -> AST.word *)\n\nand cmd_name__to__word : cmd_name -> AST.word = function\n  | CmdName_Word word' ->\n     word'__to__word word'\n\nand cmd_name'__to__word' (cmd_name' : cmd_name') : AST.word' =\n  convert_location cmd_name__to__word cmd_name'\n\n(* CST.cmd_word -> AST.word *)\n\nand cmd_word__to__word : cmd_word -> AST.word = function\n  | CmdWord_Word word' ->\n     word'__to__word word'\n\nand cmd_word'__to__word' (cmd_word' : cmd_word') : AST.word' =\n  convert_location cmd_word__to__word cmd_word'\n\n(* CST.redirect_list -> AST.command' -> AST.command *)\n\nand redirect_list__to__command redirect_list (command' : AST.command') : AST.command =\n  match redirect_list with\n  | RedirectList_IoRedirect io_redirect' ->\n     command'\n     |> io_redirect'__to__command io_redirect'\n  | RedirectList_RedirectList_IoRedirect (redirect_list', io_redirect') ->\n     command'\n     |> io_redirect'__to__command' io_redirect'\n     |> redirect_list'__to__command redirect_list' (*FIXME: check order of the redirections*)\n\nand redirect_list'__to__command (redirect_list' : redirect_list') (command' : AST.command') : AST.command =\n  erase_location redirect_list__to__command redirect_list' command'\n\n(* CST.io_redirect -> AST.command' -> AST.command *)\n\nand io_redirect__to__command (io_redirect : io_redirect) (command' : AST.command') : AST.command =\n  match io_redirect with\n  | IoRedirect_IoFile io_file' ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (AST.default_redirection_descriptor kind) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoNumber_IoFile (io_number, io_file') ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (io_number__to__int io_number) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoHere io_here' ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         0 ,\n         word' (* FIXME: strip that word if needed *)\n       )\n  | IoRedirect_IoNumber_IoHere (io_number, io_here') ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         (io_number__to__int io_number) ,\n         word' (* FIXME: strip that word if needed *)\n       )\n\nand io_redirect'__to__command (io_redirect' : io_redirect') (command' : AST.command') : AST.command =\n  erase_location io_redirect__to__command io_redirect' command'\n\nand io_redirect'__to__command' (io_redirect' : io_redirect') (command' : AST.command') : AST.command' =\n  convert_location_2 io_redirect__to__command io_redirect' command'\n\n(* CST.io_file -> AST.redirection_kind * AST.word *)\n\nand io_file__to__kind_word' io_file =\n  let kind, filename' =\n    match io_file with\n    | IoFile_Less_FileName filename' -> AST.Input, filename'\n    | IoFile_LessAnd_FileName filename' -> AST.InputDuplicate, filename'\n    | IoFile_Great_FileName filename' -> AST.Output, filename'\n    | IoFile_GreatAnd_FileName filename' -> AST.OutputDuplicate, filename'\n    | IoFile_DGreat_FileName filename' -> AST.OutputAppend, filename'\n    | IoFile_LessGreat_FileName filename' -> AST.InputOutput, filename'\n    | IoFile_Clobber_FileName filename' -> AST.OutputClobber, filename'\n  in\n  ( kind , filename'__to__word' filename' )\n\nand io_file'__to__kind_word' (io_file' : io_file') : AST.kind * AST.word' =\n  erase_location io_file__to__kind_word' io_file'\n\n(* CST.filename -> AST.word *)\n\nand filename__to__word' : filename -> AST.word' = function\n  | Filename_Word word' ->\n     word'__to__word' word'\n\nand filename'__to__word' (filename' : filename') : AST.word' =\n  erase_location filename__to__word' filename'\n\n(* CST.io_here -> bool * AST.word *)\n\nand io_here__to__strip_word' : io_here -> bool * AST.word' = function\n  | IoHere_DLess_HereEnd (_, word'_ref) ->\n     (false, word'__to__word' !word'_ref)\n  | IoHere_DLessDash_HereEnd (_, word'_ref) ->\n     (true, word'__to__word' !word'_ref)\n\nand io_here'__to__strip_word' (io_here' : io_here') : bool * AST.word' =\n  erase_location io_here__to__strip_word' io_here'\n\n(* CST.separator_op -> AST.command -> AST.command *)\n\nand separator_op__to__command (sep_op : separator_op) (command' : AST.command') : AST.command =\n  match sep_op with\n  | SeparatorOp_Uppersand -> AST.Async command'\n  | SeparatorOp_Semicolon -> command'.value\n\nand separator_op'__to__command (sep_op' : separator_op') (command' : AST.command') : AST.command =\n  erase_location separator_op__to__command sep_op' command'\n\nand separator_op'__to__command' (sep_op' : separator_op') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator_op'__to__command sep_op' command')\n\n(* CST.separator -> AST.command -> AST.command *)\n\nand separator__to__command (sep : separator) (command' : AST.command') : AST.command =\n  match sep with\n  | Separator_SeparatorOp_LineBreak (sep_op', _) ->\n     separator_op'__to__command sep_op' command'\n  | Separator_NewLineList _ ->\n     command'.value\n\nand separator'__to__command (sep' : separator') (command' : AST.command') : AST.command =\n  erase_location separator__to__command sep' command'\n\nand separator'__to__command' (sep' : separator') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator'__to__command sep' command')\n\n(* *)\n\nand sequential_sep__to__command _ (command : AST.command) : AST.command =\n  command\n\n(* CST.word -> AST.word *)\n\nand word__to__word : word -> AST.word = function\n  | Word (_, word_cst) ->\n     word_cst__to__word word_cst\n\nand word'__to__word (word' : word') : AST.word =\n  erase_location word__to__word word'\n\nand word'__to__word' (word' : word') : AST.word' =\n  convert_location word__to__word word'\n\nand word_double_quoted__to__word (Word (_, word_cst)) =\n  word_cst_double_quoted__to__word word_cst\n\n(* CST.word_cst -> AST.word *)\n\nand word_cst__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component__to__word word_cst\n  |> List.flatten\n\nand word_cst_double_quoted__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component_double_quoted__to__word word_cst\n  |> List.flatten\n\n(* CST.word_component -> AST.word_component *)\n\nand word_component__to__word = function\n  | WordEmpty ->\n    []\n  | WordName name ->\n    [AST.WLiteral name]\n  (* | WordTildePrefix prefix ->\n    [AST.WTildePrefix prefix] *)\n  | WordLiteral literal ->\n    [AST.WLiteral literal]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst__to__word word_cst\n  | WordSingleQuoted (Word (_, [WordLiteral literal])) ->\n    [AST.WLiteral literal]\n  | WordSingleQuoted (Word (_, [])) ->\n    [AST.WLiteral \"\"]\n  | WordSingleQuoted _ ->\n    assert false\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordDoubleQuoted word ->\n    [AST.WDoubleQuoted (word_double_quoted__to__word word)]\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordGlobAll ->\n    [AST.WGlobAll]\n  | WordGlobAny ->\n    [AST.WGlobAny]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n\nand word_component_double_quoted__to__word = function\n  | WordEmpty ->\n    []\n  | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n    [AST.WLiteral literal]\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst_double_quoted__to__word word_cst\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n  | WordDoubleQuoted _ | WordSingleQuoted _\n  | WordGlobAll | WordGlobAny ->\n    assert false\n\nand variable_attribute__to__attribute = function\n  | NoAttribute ->\n    AST.NoAttribute\n  | ParameterLength word ->\n    AST.ParameterLength (word__to__word word)\n  | UseDefaultValues (_, word) ->\n    AST.UseDefaultValues (word__to__word word)\n  | AssignDefaultValues (_, word) ->\n    AST.AssignDefaultValues (word__to__word word)\n  | IndicateErrorifNullorUnset (_, word) ->\n    AST.IndicateErrorifNullorUnset (word__to__word word)\n  | UseAlternativeValue (_, word) ->\n    AST.UseAlternativeValue (word__to__word word)\n  | RemoveSmallestSuffixPattern word ->\n    AST.RemoveSmallestSuffixPattern (word__to__word word)\n  | RemoveLargestSuffixPattern word ->\n    AST.RemoveLargestSuffixPattern (word__to__word word)\n  | RemoveSmallestPrefixPattern word ->\n    AST.RemoveSmallestPrefixPattern (word__to__word word)\n  | RemoveLargestPrefixPattern word ->\n    AST.RemoveLargestPrefixPattern (word__to__word word)\n\n(* CST.name -> AST.name *)\n\nand name__to__name : name -> AST.name = function\n  | Name name -> name\n\nand name'__to__name (name' : name') : AST.name =\n  erase_location name__to__name name'\n\n(* CST.assignment_word -> AST.assignment *)\n\nand assignment_word__to__assignment ((name, word) : assignment_word) : AST.assignment =\n  (name__to__name name,\n   word__to__word word)\n\nand assignment_word'__to__assignment' (assignment_word' : assignment_word') : AST.assignment' =\n  convert_location assignment_word__to__assignment assignment_word'\n\n(* CST.io_number -> AST.descr *)\n\nand io_number__to__int  = function\n  | IONumber io_number -> int_of_string io_number\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":2}}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.cmt
Size 204306
Sending response {"id": 42, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "191 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name, pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordName, WordEmpty], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst, compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', complete_commands'}", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr
File "src/CST_to_AST.ml", line 800, characters 45-60:
800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->
                                                   ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Affected files: file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/AST.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__AST.ast with pwd /Users/mandalarian/Github/morsmall/src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/AST.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/AST.ml", "diagnostics": []}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/src/utilities
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/src/utilities
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Get ocaml stdlib dirs
New dune process
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr
File "src/CST_to_AST.ml", line 800, characters 45-60:
800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->
                                                   ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Affected files: file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/utilities/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/utilities/testParser.mli
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall_utilities -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -intf /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall_utilities__TestParser.asti with pwd /Users/mandalarian/Github/morsmall/src/utilities
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/utilities/testParser.mli
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/utilities/testParser.mli", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/safePrinter.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__SafePrinter.ast with pwd /Users/mandalarian/Github/morsmall/src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/safePrinter.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/safePrinter.ml", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/location.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__Location.ast with pwd /Users/mandalarian/Github/morsmall/src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/location.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/location.ml", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.cmt
Size 204306
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast", line 800, characters 45-60:
800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->
                                                   ^^^^^^^^^^^^^^^
Error: This variant pattern is expected to have type word_component
       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml", "diagnostics": [{"range": {"start": {"line": 799, "character": 45}, "end": {"line": 799, "character": 60}}, "message": "800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n                                                   ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":770,"character":1},"end":{"line":771,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 43, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":69}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 44, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":69}}}
[server] Got a method textDocument/hover
[server] processing took 0.0250339508057ms
Sending response {"id": 45, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":69}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
Sending response {"id": 46, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":68}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 47, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":68}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0238418579102ms
Sending response {"id": 48, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":799,"character":42},"end":{"line":799,"character":68}},"context":{"diagnostics":[{"range":{"start":{"line":799,"character":45},"end":{"line":799,"character":60}},"message":"800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n                                                   ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 49, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":799,"character":43},"end":{"line":799,"character":68}},"context":{"diagnostics":[{"range":{"start":{"line":799,"character":45},"end":{"line":799,"character":60}},"message":"800 |   | WordName literal | WordLiteral literal | WordTildePrefix literal ->\n                                                   ^^^^^^^^^^^^^^^\nError: This variant pattern is expected to have type word_component\n       The constructor WordTildePrefix does not belong to type Morbig.CST.word_component","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 50, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 51, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":3},"contentChanges":[{"text":"(***************************************************************************)\n(*                                 Morsmall                                *)\n(*                      A concise AST for POSIX shell                      *)\n(*                                                                         *)\n(*  Copyright (C) 2017,2018,2019 Yann RÃ©gis-Gianas, Ralf Treinen,          *)\n(*  Nicolas Jeannerod                                                      *)\n(*                                                                         *)\n(*  This program is free software: you can redistribute it and/or modify   *)\n(*  it under the terms of the GNU General Public License as published by   *)\n(*  the Free Software Foundation, either version 3 of the License, or      *)\n(*  (at your option) any later version.                                    *)\n(*                                                                         *)\n(*  This program is distributed in the hope that it will be useful,        *)\n(*  but WITHOUT ANY WARRANTY; without even the implied warranty of         *)\n(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *)\n(*  GNU General Public License for more details.                           *)\n(*                                                                         *)\n(*  You should have received a copy of the GNU General Public License      *)\n(*  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *)\n(***************************************************************************)\n\nopen Morbig.CST\n\n(* Helpers about locations. *)\n\nlet convert_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b Location.located =\n  fun f loc -> { value = f loc.value ; position = loc.position }\n\nlet convert_location_2 : 'a 'b 'c. ('a -> 'b -> 'c) -> 'a located -> 'b -> 'c Location.located =\n  fun f loc x ->\n  { value = f loc.value x ; position = loc.position }\n\nlet erase_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b =\n  fun f x -> f x.value\n\n(* Convertion functions *)\n\n(* CST.program -> AST.program *)\n\nlet rec program__to__program = function\n  | Program_LineBreak_CompleteCommands_LineBreak (_, complete_commands', _) ->\n     complete_commands'__to__command'_list complete_commands'\n  | Program_LineBreak _ ->\n     []\n\nand program'__to__program (program' : program') : AST.program =\n  erase_location program__to__program program'\n\n(* CST.complete_commands -> AST.command list *)\n\nand complete_commands__to__command_list = function\n  | CompleteCommands_CompleteCommands_NewlineList_CompleteCommand (complete_commands', _, complete_command') ->\n     (complete_commands'__to__command'_list complete_commands')\n     @ [complete_command'__to__command' complete_command']\n  | CompleteCommands_CompleteCommand complete_command' ->\n     [complete_command'__to__command' complete_command']\n\nand complete_commands'__to__command'_list (complete_commands' : complete_commands') : AST.command' list =\n  erase_location complete_commands__to__command_list complete_commands'\n\n(* CST.complete_command -> AST.command option *)\n\nand complete_command__to__command = function\n  | CompleteCommand_CList_SeparatorOp (clist', sepop') ->\n     clist'__to__command' clist'\n     |> separator_op'__to__command sepop'\n  | CompleteCommand_CList clist' ->\n     clist'__to__command clist'\n\nand complete_command'__to__command' (complete_command' : complete_command') : AST.command' =\n  convert_location complete_command__to__command complete_command'\n\n(* CST.clist -> AST.command *)\n\nand clist__to__command : clist -> AST.command = function\n  | CList_CList_SeparatorOp_AndOr (clist', sep_op', and_or') ->\n     AST.Seq (\n         clist'__to__command' clist'\n         |> separator_op'__to__command' sep_op',\n         and_or'__to__command' and_or'\n       )\n  | CList_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand clist'__to__command (clist' : clist') : AST.command =\n  erase_location clist__to__command clist'\n\nand clist'__to__command' (clist' : clist') : AST.command' =\n  convert_location clist__to__command clist'\n\n(* CST.and_or -> AST.command *)\n\nand and_or__to__command : and_or -> AST.command = function\n  | AndOr_Pipeline pipeline' ->\n     pipeline'__to__command pipeline'\n  | AndOr_AndOr_AndIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.And (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n  | AndOr_AndOr_OrIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.Or (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n\nand and_or'__to__command (and_or' : and_or') : AST.command =\n  erase_location and_or__to__command and_or'\n\nand and_or'__to__command' (and_or' : and_or') : AST.command' =\n  convert_location and_or__to__command and_or'\n\n(* CST.pipeline -> AST.command *)\n\nand pipeline__to__command : pipeline -> AST.command = function\n  | Pipeline_PipeSequence pipe_sequence' ->\n     pipe_sequence'__to__command pipe_sequence'\n  | Pipeline_Bang_PipeSequence pipe_sequence' ->\n     AST.Not (pipe_sequence'__to__command' pipe_sequence')\n\nand pipeline'__to__command (pipeline' : pipeline') : AST.command =\n  erase_location pipeline__to__command pipeline'\n\nand pipeline'__to__command' (pipeline' : pipeline') : AST.command' =\n  convert_location pipeline__to__command pipeline'\n\n(* CST.pipe_sequence -> AST.command *)\n\nand pipe_sequence__to__command : pipe_sequence -> AST.command = function\n  | PipeSequence_Command command' ->\n     command'__to__command command'\n  | PipeSequence_PipeSequence_Pipe_LineBreak_Command (pipe_sequence', _, command') ->\n     AST.Pipe (\n         pipe_sequence'__to__command' pipe_sequence',\n         command'__to__command' command'\n       )\n\nand pipe_sequence'__to__command (pipe_sequence') : AST.command =\n  erase_location pipe_sequence__to__command pipe_sequence'\n\nand pipe_sequence'__to__command' (pipe_sequence') : AST.command' =\n  convert_location pipe_sequence__to__command pipe_sequence'\n\n(* CST.command -> AST.command *)\n\nand command__to__command : command -> AST.command = function\n  | Command_SimpleCommand simple_command' ->\n     simple_command'__to__command simple_command'\n  | Command_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | Command_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n  | Command_FunctionDefinition function_definition' ->\n     function_definition'__to__command function_definition'\n\nand command'__to__command (command' : command') : AST.command =\n  erase_location command__to__command command'\n\nand command'__to__command' (command' : command') : AST.command' =\n  convert_location command__to__command command'\n\n(* CST.compound_command -> AST.command *)\n\nand compound_command__to__command : compound_command -> AST.command = function\n  | CompoundCommand_BraceGroup brace_group' ->\n     brace_group'__to__command brace_group'\n  | CompoundCommand_Subshell subshell' ->\n     subshell'__to__command subshell'\n  | CompoundCommand_ForClause for_clause' ->\n     for_clause'__to__command for_clause'\n  | CompoundCommand_CaseClause case_clause' ->\n     case_clause'__to__command case_clause'\n  | CompoundCommand_IfClause if_clause' ->\n     if_clause'__to__command if_clause'\n  | CompoundCommand_WhileClause while_clause' ->\n     while_clause'__to__command while_clause'\n  | CompoundCommand_UntilClause until_clause' ->\n     until_clause'__to__command until_clause'\n\nand compound_command'__to__command (compound_command' : compound_command') : AST.command =\n  erase_location compound_command__to__command compound_command'\n\nand compound_command'__to__command' (compound_command' : compound_command') : AST.command' =\n  convert_location compound_command__to__command compound_command'\n\n(* CST.subshell -> AST.command *)\n\nand subshell__to__command : subshell -> AST.command  = function\n  | Subshell_Lparen_CompoundList_Rparen compound_list' ->\n     AST.Subshell (compound_list'__to__command' compound_list')\n\nand subshell'__to__command (subshell' : subshell') : AST.command =\n  erase_location subshell__to__command subshell'\n\n(* CST.compound_list -> AST.command *)\n\nand compound_list__to__command : compound_list -> AST.command = function\n  | CompoundList_LineBreak_Term (_, term') ->\n     term'__to__command term'\n  | CompoundList_LineBreak_Term_Separator (_, term', sep') ->\n     term'__to__command' term'\n     |> separator'__to__command sep'\n\nand compound_list'__to__command (compound_list' : compound_list') : AST.command =\n  erase_location compound_list__to__command compound_list'\n\nand compound_list'__to__command' (compound_list' : compound_list') : AST.command' =\n  convert_location compound_list__to__command compound_list'\n\n(* CST.term -> AST.command *)\n\nand term__to__command : term -> AST.command = function\n  | Term_Term_Separator_AndOr (term', sep', and_or') ->\n     AST.Seq (\n         term'__to__command' term'\n         |> separator'__to__command' sep',\n         and_or'__to__command' and_or'\n       )\n  | Term_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand term'__to__command (term' : term') : AST.command =\n  erase_location term__to__command term'\n\nand term'__to__command' (term' : term') : AST.command' =\n  convert_location term__to__command term'\n\n(* CST.for_clause -> AST.command *)\n\nand for_clause__to__command : for_clause -> AST.command = function\n  | ForClause_For_Name_DoGroup (name', do_group')\n  | ForClause_For_Name_SequentialSep_DoGroup (name', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         None ,\n         do_group'__to__command' do_group'\n       )\n  | ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup (name', _, _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some [] ,\n         do_group'__to__command' do_group'\n     )\n  | ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup (name', _, wordlist', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some (wordlist'__to__word'_list wordlist') ,\n         do_group'__to__command' do_group'\n       )\n\nand for_clause'__to__command (for_clause' : for_clause') : AST.command =\n  erase_location for_clause__to__command for_clause'\n\n(* CST.wordlist -> AST.word list *)\n\nand wordlist__to__word'_list : wordlist -> AST.word' list = function\n  | WordList_WordList_Word (wordlist', word') ->\n     (wordlist'__to__word'_list wordlist')\n     @ [word'__to__word' word']\n  | WordList_Word word' ->\n     [word'__to__word' word']\n\nand wordlist'__to__word'_list (wordlist' : wordlist') : AST.word' list =\n  erase_location wordlist__to__word'_list wordlist'\n\n(* CST.case_clause -> AST.command *)\n\nand case_clause__to__command : case_clause -> AST.command = function\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac (word', _, _, case_list') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list'__to__case_item'_list case_list'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac (word', _, _, case_list_ns') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list_ns'__to__case_item'_list case_list_ns'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_Esac (word', _, _) ->\n     AST.Case (\n         word'__to__word' word' ,\n         []\n       )\n\nand case_clause'__to__command (case_clause' : case_clause') : AST.command =\n  erase_location case_clause__to__command case_clause'\n\n(* CST.case_list_ns -> AST.case list *)\n\nand case_list_ns__to__case_item'_list : case_list_ns -> AST.case_item' list = function (*FIXME*)\n  | CaseListNS_CaseList_CaseItemNS (case_list', case_item_ns') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item_ns'__to__case_item' case_item_ns']\n  | CaseListNS_CaseItemNS case_item_ns' ->\n     [case_item_ns'__to__case_item' case_item_ns']\n\nand case_list_ns'__to__case_item'_list (case_list_ns' : case_list_ns') : AST.case_item' list =\n  erase_location case_list_ns__to__case_item'_list case_list_ns'\n\n(* CST.case_list -> AST.case list *)\n\nand case_list__to__case_item'_list : case_list -> AST.case_item' list = function (*FIXME*)\n  | CaseList_CaseList_CaseItem (case_list', case_item') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item'__to__case_item' case_item']\n  | CaseList_CaseItem case_item' ->\n     [case_item'__to__case_item' case_item']\n\nand case_list'__to__case_item'_list (case_list' : case_list') : AST.case_item' list =\n  erase_location case_list__to__case_item'_list case_list'\n\n(* CST.case_item_ns -> AST.case_item *)\n\nand case_item_ns__to__case_item : case_item_ns -> AST.case_item = function\n  | CaseItemNS_Pattern_Rparen_LineBreak (pattern', _)\n  | CaseItemNS_Lparen_Pattern_Rparen_LineBreak (pattern', _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItemNS_Pattern_Rparen_CompoundList (pattern', compound_list')\n  | CaseItemNS_Lparen_Pattern_Rparen_CompoundList (pattern', compound_list') ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item_ns'__to__case_item' (case_item_ns' : case_item_ns') : AST.case_item' =\n  convert_location case_item_ns__to__case_item case_item_ns'\n\n(* CST.case_item -> AST.case_item *)\n\nand case_item__to__case_item : case_item -> AST.case_item = function\n  | CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _)\n  | CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _)\n  | CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _) ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item'__to__case_item' (case_item' : case_item') : AST.case_item' =\n  convert_location case_item__to__case_item case_item'\n\n(* CST.pattern -> AST.pattern *)\n\nand pattern__to__pattern : pattern -> AST.pattern = function\n  | Pattern_Word word' ->\n     [word'__to__word word']\n  | Pattern_Pattern_Pipe_Word (pattern', word') ->\n     (pattern'__to__pattern pattern')\n     @ [word'__to__word word']\n\nand pattern'__to__pattern (pattern' : pattern') : AST.pattern =\n  erase_location pattern__to__pattern pattern'\n\nand pattern'__to__pattern' (pattern' : pattern') : AST.pattern' =\n  convert_location pattern__to__pattern pattern'\n\n(* CST.if_clause -> AST.command *)\n\nand if_clause__to__command : if_clause -> AST.command = function\n  | IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | IfClause_If_CompoundList_Then_CompoundList_Fi (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n\nand if_clause'__to__command (if_clause' : if_clause') : AST.command =\n  erase_location if_clause__to__command if_clause'\n\n(* CST.else_part -> AST.command *)\n\nand else_part__to__command : else_part -> AST.command = function\n  | ElsePart_Elif_CompoundList_Then_CompoundList (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n  | ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | ElsePart_Else_CompoundList compound_list' ->\n     compound_list'__to__command compound_list'\n\nand else_part'__to__command' (else_part' : else_part') : AST.command' =\n  convert_location else_part__to__command else_part'\n\n(* CST.while_clause -> AST.command *)\n\nand while_clause__to__command : while_clause -> AST.command = function\n  | WhileClause_While_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.While (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand while_clause'__to__command (while_clause' : while_clause') : AST.command =\n  erase_location while_clause__to__command while_clause'\n\n(* CST.until_clause -> AST.command *)\n\nand until_clause__to__command : until_clause -> AST.command = function\n  | UntilClause_Until_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.Until (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand until_clause'__to__command (until_clause' : until_clause') : AST.command =\n  erase_location until_clause__to__command until_clause'\n\n(* CST.function_definition -> AST.command *)\n\nand function_definition__to__command : function_definition -> AST.command = function\n  | FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody (fname', _, function_body') ->\n     AST.Function (\n         fname'__to__name fname' ,\n         function_body'__to__command' function_body'\n       )\n\nand function_definition'__to__command (function_definition' : function_definition') : AST.command =\n  erase_location function_definition__to__command function_definition'\n\n(* CST.function_body -> AST.command *)\n\nand function_body__to__command : function_body -> AST.command = function\n  | FunctionBody_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | FunctionBody_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n\nand function_body'__to__command' (function_body' : function_body') : AST.command' =\n  convert_location function_body__to__command function_body'\n\n(* CST.fname -> AST.name *)\n\nand fname__to__name : fname -> AST.name = function\n  | Fname_Name name -> name__to__name name\n\nand fname'__to__name (fname' : fname') : AST.name =\n  erase_location fname__to__name fname'\n\n(* CST.brace_group -> AST.command *)\n\nand brace_group__to__command : brace_group -> AST.command = function\n  | BraceGroup_LBrace_CompoundList_RBrace compound_list' ->\n     compound_list'__to__command compound_list'\n\nand brace_group'__to__command (brace_group' : brace_group') : AST.command =\n  erase_location brace_group__to__command brace_group'\n\n(* CST.do_group -> AST.command *)\n\nand do_group__to__command : do_group -> AST.command = function\n  | DoGroup_Do_CompoundList_Done compound_list' ->\n     compound_list'__to__command compound_list'\n\nand do_group'__to__command' (do_group' : do_group') : AST.command' =\n  convert_location do_group__to__command do_group'\n\n(* CST.simple_command -> AST.command *)\n\nand simple_command'__to__command (simple_command' : simple_command') : AST.command =\n  let ( assignment'_list , word'_list , io_redirect'_list ) =\n    match simple_command'.value with\n    | SimpleCommand_CmdPrefix_CmdWord_CmdSuffix (cmd_prefix', cmd_word', cmd_suffix') ->\n       (* Since we are sorting right-to-left, we need to sort the\n          suffix before the prefix. *)\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] io_redirect'_list cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix_CmdWord (cmd_prefix', cmd_word') ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: [] ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix cmd_prefix' ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       ( List.map assignment_word'__to__assignment' assignment_word'_list ,\n         [] ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName_CmdSuffix (cmd_name', cmd_suffix') ->\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName cmd_name' ->\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: [] ,\n         [] )\n  in\n  (* Because of the semantics of redirections, we need to handle that\n     redirection list from right to left. *)\n  List.fold_right\n    (\n      fun io_redirect' command ->\n      io_redirect'__to__command\n        io_redirect'\n        { value = command ;\n          position = simple_command'.position }\n    )\n    io_redirect'_list\n    (AST.Simple (assignment'_list, word'_list ))\n\n(* CST.cmd_prefix -> CST.assignment_word' list * CST.io_redirect' list\n\n   This function takes a prefix (which is basically a list of either\n   CST.assignment_word' or CST.io_redirect' and return two separate\n   lists for these two type of elements. It uses accumulators, but\n   since we are converting right-to-left lists to left-to-right lists,\n   we do not need a List.rev. *)\n\nand sort__cmd_prefix (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list) (*FIXME: check order*)\n    : cmd_prefix -> assignment_word' list * io_redirect' list = function\n  | CmdPrefix_IoRedirect io_redirect' ->\n     ( assignment_word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_IoRedirect (cmd_prefix', io_redirect') ->\n     sort__cmd_prefix'\n       assignment_word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_prefix'\n\n  | CmdPrefix_AssignmentWord assignment_word' ->\n     ( assignment_word' :: assignment_word'_acc ,\n       io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_AssignmentWord (cmd_prefix', assignment_word') ->\n     sort__cmd_prefix'\n       (assignment_word' :: assignment_word'_acc)\n       io_redirect'_acc\n       cmd_prefix'\n\nand sort__cmd_prefix' (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_prefix' : cmd_prefix') : assignment_word' list * io_redirect' list =\n  sort__cmd_prefix assignment_word'_acc io_redirect'_acc cmd_prefix'.value\n\n(* CST.cmd_suffix -> CST.word' list * CST.io_redirect' list\n\n   This function takes a suffix (which is basically a list of either\n   CST.word' or CST.io_redirect' and return two separate lists for\n   these two type of elements. It uses accumulators, but since we are\n   converting right-to-left lists to left-to-right lists, we do not\n   need a List.rev. *)\n\nand sort__cmd_suffix (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    : cmd_suffix -> word' list * io_redirect' list = function\n  | CmdSuffix_IoRedirect io_redirect' ->\n     ( word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_IoRedirect (cmd_suffix', io_redirect') ->\n     sort__cmd_suffix'\n       word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_suffix'\n\n  | CmdSuffix_Word word' ->\n     ( word' :: word'_acc ,\n       io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_Word (cmd_suffix', word') ->\n     sort__cmd_suffix'\n       (word' :: word'_acc)\n       io_redirect'_acc\n       cmd_suffix'\n\nand sort__cmd_suffix' (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_suffix' : cmd_suffix') : word' list * io_redirect' list =\n  sort__cmd_suffix word'_acc io_redirect'_acc cmd_suffix'.value\n\n(* CST.cmd_name -> AST.word *)\n\nand cmd_name__to__word : cmd_name -> AST.word = function\n  | CmdName_Word word' ->\n     word'__to__word word'\n\nand cmd_name'__to__word' (cmd_name' : cmd_name') : AST.word' =\n  convert_location cmd_name__to__word cmd_name'\n\n(* CST.cmd_word -> AST.word *)\n\nand cmd_word__to__word : cmd_word -> AST.word = function\n  | CmdWord_Word word' ->\n     word'__to__word word'\n\nand cmd_word'__to__word' (cmd_word' : cmd_word') : AST.word' =\n  convert_location cmd_word__to__word cmd_word'\n\n(* CST.redirect_list -> AST.command' -> AST.command *)\n\nand redirect_list__to__command redirect_list (command' : AST.command') : AST.command =\n  match redirect_list with\n  | RedirectList_IoRedirect io_redirect' ->\n     command'\n     |> io_redirect'__to__command io_redirect'\n  | RedirectList_RedirectList_IoRedirect (redirect_list', io_redirect') ->\n     command'\n     |> io_redirect'__to__command' io_redirect'\n     |> redirect_list'__to__command redirect_list' (*FIXME: check order of the redirections*)\n\nand redirect_list'__to__command (redirect_list' : redirect_list') (command' : AST.command') : AST.command =\n  erase_location redirect_list__to__command redirect_list' command'\n\n(* CST.io_redirect -> AST.command' -> AST.command *)\n\nand io_redirect__to__command (io_redirect : io_redirect) (command' : AST.command') : AST.command =\n  match io_redirect with\n  | IoRedirect_IoFile io_file' ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (AST.default_redirection_descriptor kind) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoNumber_IoFile (io_number, io_file') ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (io_number__to__int io_number) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoHere io_here' ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         0 ,\n         word' (* FIXME: strip that word if needed *)\n       )\n  | IoRedirect_IoNumber_IoHere (io_number, io_here') ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         (io_number__to__int io_number) ,\n         word' (* FIXME: strip that word if needed *)\n       )\n\nand io_redirect'__to__command (io_redirect' : io_redirect') (command' : AST.command') : AST.command =\n  erase_location io_redirect__to__command io_redirect' command'\n\nand io_redirect'__to__command' (io_redirect' : io_redirect') (command' : AST.command') : AST.command' =\n  convert_location_2 io_redirect__to__command io_redirect' command'\n\n(* CST.io_file -> AST.redirection_kind * AST.word *)\n\nand io_file__to__kind_word' io_file =\n  let kind, filename' =\n    match io_file with\n    | IoFile_Less_FileName filename' -> AST.Input, filename'\n    | IoFile_LessAnd_FileName filename' -> AST.InputDuplicate, filename'\n    | IoFile_Great_FileName filename' -> AST.Output, filename'\n    | IoFile_GreatAnd_FileName filename' -> AST.OutputDuplicate, filename'\n    | IoFile_DGreat_FileName filename' -> AST.OutputAppend, filename'\n    | IoFile_LessGreat_FileName filename' -> AST.InputOutput, filename'\n    | IoFile_Clobber_FileName filename' -> AST.OutputClobber, filename'\n  in\n  ( kind , filename'__to__word' filename' )\n\nand io_file'__to__kind_word' (io_file' : io_file') : AST.kind * AST.word' =\n  erase_location io_file__to__kind_word' io_file'\n\n(* CST.filename -> AST.word *)\n\nand filename__to__word' : filename -> AST.word' = function\n  | Filename_Word word' ->\n     word'__to__word' word'\n\nand filename'__to__word' (filename' : filename') : AST.word' =\n  erase_location filename__to__word' filename'\n\n(* CST.io_here -> bool * AST.word *)\n\nand io_here__to__strip_word' : io_here -> bool * AST.word' = function\n  | IoHere_DLess_HereEnd (_, word'_ref) ->\n     (false, word'__to__word' !word'_ref)\n  | IoHere_DLessDash_HereEnd (_, word'_ref) ->\n     (true, word'__to__word' !word'_ref)\n\nand io_here'__to__strip_word' (io_here' : io_here') : bool * AST.word' =\n  erase_location io_here__to__strip_word' io_here'\n\n(* CST.separator_op -> AST.command -> AST.command *)\n\nand separator_op__to__command (sep_op : separator_op) (command' : AST.command') : AST.command =\n  match sep_op with\n  | SeparatorOp_Uppersand -> AST.Async command'\n  | SeparatorOp_Semicolon -> command'.value\n\nand separator_op'__to__command (sep_op' : separator_op') (command' : AST.command') : AST.command =\n  erase_location separator_op__to__command sep_op' command'\n\nand separator_op'__to__command' (sep_op' : separator_op') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator_op'__to__command sep_op' command')\n\n(* CST.separator -> AST.command -> AST.command *)\n\nand separator__to__command (sep : separator) (command' : AST.command') : AST.command =\n  match sep with\n  | Separator_SeparatorOp_LineBreak (sep_op', _) ->\n     separator_op'__to__command sep_op' command'\n  | Separator_NewLineList _ ->\n     command'.value\n\nand separator'__to__command (sep' : separator') (command' : AST.command') : AST.command =\n  erase_location separator__to__command sep' command'\n\nand separator'__to__command' (sep' : separator') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator'__to__command sep' command')\n\n(* *)\n\nand sequential_sep__to__command _ (command : AST.command) : AST.command =\n  command\n\n(* CST.word -> AST.word *)\n\nand word__to__word : word -> AST.word = function\n  | Word (_, word_cst) ->\n     word_cst__to__word word_cst\n\nand word'__to__word (word' : word') : AST.word =\n  erase_location word__to__word word'\n\nand word'__to__word' (word' : word') : AST.word' =\n  convert_location word__to__word word'\n\nand word_double_quoted__to__word (Word (_, word_cst)) =\n  word_cst_double_quoted__to__word word_cst\n\n(* CST.word_cst -> AST.word *)\n\nand word_cst__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component__to__word word_cst\n  |> List.flatten\n\nand word_cst_double_quoted__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component_double_quoted__to__word word_cst\n  |> List.flatten\n\n(* CST.word_component -> AST.word_component *)\n\nand word_component__to__word = function\n  | WordEmpty ->\n    []\n  | WordName name ->\n    [AST.WLiteral name]\n  (* | WordTildePrefix prefix ->\n    [AST.WTildePrefix prefix] *)\n  | WordLiteral literal ->\n    [AST.WLiteral literal]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst__to__word word_cst\n  | WordSingleQuoted (Word (_, [WordLiteral literal])) ->\n    [AST.WLiteral literal]\n  | WordSingleQuoted (Word (_, [])) ->\n    [AST.WLiteral \"\"]\n  | WordSingleQuoted _ ->\n    assert false\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordDoubleQuoted word ->\n    [AST.WDoubleQuoted (word_double_quoted__to__word word)]\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordGlobAll ->\n    [AST.WGlobAll]\n  | WordGlobAny ->\n    [AST.WGlobAny]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n\nand word_component_double_quoted__to__word = function\n  | WordEmpty ->\n    []\n  | WordName literal | WordLiteral literal  ->\n    [AST.WLiteral literal]\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst_double_quoted__to__word word_cst\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n  | WordDoubleQuoted _ | WordSingleQuoted _\n  | WordGlobAll | WordGlobAny ->\n    assert false\n\nand variable_attribute__to__attribute = function\n  | NoAttribute ->\n    AST.NoAttribute\n  | ParameterLength word ->\n    AST.ParameterLength (word__to__word word)\n  | UseDefaultValues (_, word) ->\n    AST.UseDefaultValues (word__to__word word)\n  | AssignDefaultValues (_, word) ->\n    AST.AssignDefaultValues (word__to__word word)\n  | IndicateErrorifNullorUnset (_, word) ->\n    AST.IndicateErrorifNullorUnset (word__to__word word)\n  | UseAlternativeValue (_, word) ->\n    AST.UseAlternativeValue (word__to__word word)\n  | RemoveSmallestSuffixPattern word ->\n    AST.RemoveSmallestSuffixPattern (word__to__word word)\n  | RemoveLargestSuffixPattern word ->\n    AST.RemoveLargestSuffixPattern (word__to__word word)\n  | RemoveSmallestPrefixPattern word ->\n    AST.RemoveSmallestPrefixPattern (word__to__word word)\n  | RemoveLargestPrefixPattern word ->\n    AST.RemoveLargestPrefixPattern (word__to__word word)\n\n(* CST.name -> AST.name *)\n\nand name__to__name : name -> AST.name = function\n  | Name name -> name\n\nand name'__to__name (name' : name') : AST.name =\n  erase_location name__to__name name'\n\n(* CST.assignment_word -> AST.assignment *)\n\nand assignment_word__to__assignment ((name, word) : assignment_word) : AST.assignment =\n  (name__to__name name,\n   word__to__word word)\n\nand assignment_word'__to__assignment' (assignment_word' : assignment_word') : AST.assignment' =\n  convert_location assignment_word__to__assignment assignment_word'\n\n(* CST.io_number -> AST.descr *)\n\nand io_number__to__int  = function\n  | IONumber io_number -> int_of_string io_number\n"}]}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0169277191162ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Sending response {"id": 52, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 855, "character": 4}, "end": {"line": 855, "character": 22}}, "command": {"title": "Morbig.CST.io_number => Morsmall__.AST.descr", "command": ""}}, {"range": {"start": {"line": 850, "character": 4}, "end": {"line": 850, "character": 37}}, "command": {"title": "Morbig.CST.assignment_word' => Morsmall__.AST.assignment'", "command": ""}}, {"range": {"start": {"line": 846, "character": 4}, "end": {"line": 846, "character": 35}}, "command": {"title": "Morbig.CST.assignment_word => Morsmall__.AST.assignment", "command": ""}}, {"range": {"start": {"line": 841, "character": 4}, "end": {"line": 841, "character": 19}}, "command": {"title": "Morbig.CST.name' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 838, "character": 4}, "end": {"line": 838, "character": 18}}, "command": {"title": "Morbig.CST.name -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 814, "character": 4}, "end": {"line": 814, "character": 37}}, "command": {"title": "Morbig.CST.variable_attribute => Morsmall__.AST.attribute", "command": ""}}, {"range": {"start": {"line": 796, "character": 4}, "end": {"line": 796, "character": 42}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 765, "character": 4}, "end": {"line": 765, "character": 28}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 759, "character": 4}, "end": {"line": 759, "character": 36}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 755, "character": 4}, "end": {"line": 755, "character": 22}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 750, "character": 4}, "end": {"line": 750, "character": 32}}, "command": {"title": "Morbig.CST.word => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 747, "character": 4}, "end": {"line": 747, "character": 20}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 744, "character": 4}, "end": {"line": 744, "character": 19}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 740, "character": 4}, "end": {"line": 740, "character": 18}}, "command": {"title": "Morbig.CST.word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 735, "character": 4}, "end": {"line": 735, "character": 31}}, "command": {"title": "(\n  'a,\n  Morsmall__.AST.command\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 728, "character": 4}, "end": {"line": 728, "character": 28}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 27}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 718, "character": 4}, "end": {"line": 718, "character": 26}}, "command": {"title": "(\n  Morbig.CST.separator,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 711, "character": 4}, "end": {"line": 711, "character": 31}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 708, "character": 4}, "end": {"line": 708, "character": 30}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 703, "character": 4}, "end": {"line": 703, "character": 29}}, "command": {"title": "(\n  Morbig.CST.separator_op,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 698, "character": 4}, "end": {"line": 698, "character": 29}}, "command": {"title": "Morbig.CST.io_here' => (\n  bool,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 28}}, "command": {"title": "Morbig.CST.io_here -> bool * Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 687, "character": 4}, "end": {"line": 687, "character": 24}}, "command": {"title": "Morbig.CST.filename' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 683, "character": 4}, "end": {"line": 683, "character": 23}}, "command": {"title": "Morbig.CST.filename -> Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 678, "character": 4}, "end": {"line": 678, "character": 28}}, "command": {"title": "Morbig.CST.io_file' => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 665, "character": 4}, "end": {"line": 665, "character": 27}}, "command": {"title": "Morbig.CST.io_file => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 660, "character": 4}, "end": {"line": 660, "character": 30}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 657, "character": 4}, "end": {"line": 657, "character": 29}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 624, "character": 4}, "end": {"line": 624, "character": 28}}, "command": {"title": "(\n  Morbig.CST.io_redirect,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 619, "character": 4}, "end": {"line": 619, "character": 31}}, "command": {"title": "(\n  Morbig.CST.redirect_list',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 609, "character": 4}, "end": {"line": 609, "character": 30}}, "command": {"title": "(\n  Morbig.CST.redirect_list,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 604, "character": 4}, "end": {"line": 604, "character": 24}}, "command": {"title": "Morbig.CST.cmd_word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 600, "character": 4}, "end": {"line": 600, "character": 22}}, "command": {"title": "Morbig.CST.cmd_word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 595, "character": 4}, "end": {"line": 595, "character": 24}}, "command": {"title": "Morbig.CST.cmd_name' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 591, "character": 4}, "end": {"line": 591, "character": 22}}, "command": {"title": "Morbig.CST.cmd_name -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 585, "character": 4}, "end": {"line": 585, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix'\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 563, "character": 4}, "end": {"line": 563, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 551, "character": 4}, "end": {"line": 551, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix'\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 529, "character": 4}, "end": {"line": 529, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 469, "character": 4}, "end": {"line": 469, "character": 32}}, "command": {"title": "Morbig.CST.simple_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 464, "character": 4}, "end": {"line": 464, "character": 27}}, "command": {"title": "Morbig.CST.do_group' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 460, "character": 4}, "end": {"line": 460, "character": 25}}, "command": {"title": "Morbig.CST.do_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 455, "character": 4}, "end": {"line": 455, "character": 29}}, "command": {"title": "Morbig.CST.brace_group' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 451, "character": 4}, "end": {"line": 451, "character": 28}}, "command": {"title": "Morbig.CST.brace_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 446, "character": 4}, "end": {"line": 446, "character": 20}}, "command": {"title": "Morbig.CST.fname' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 443, "character": 4}, "end": {"line": 443, "character": 19}}, "command": {"title": "Morbig.CST.fname -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 438, "character": 4}, "end": {"line": 438, "character": 32}}, "command": {"title": "Morbig.CST.function_body' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 431, "character": 4}, "end": {"line": 431, "character": 30}}, "command": {"title": "Morbig.CST.function_body -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 426, "character": 4}, "end": {"line": 426, "character": 37}}, "command": {"title": "Morbig.CST.function_definition' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 419, "character": 4}, "end": {"line": 419, "character": 36}}, "command": {"title": "Morbig.CST.function_definition -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 414, "character": 4}, "end": {"line": 414, "character": 30}}, "command": {"title": "Morbig.CST.until_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 407, "character": 4}, "end": {"line": 407, "character": 29}}, "command": {"title": "Morbig.CST.until_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 402, "character": 4}, "end": {"line": 402, "character": 30}}, "command": {"title": "Morbig.CST.while_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 395, "character": 4}, "end": {"line": 395, "character": 29}}, "command": {"title": "Morbig.CST.while_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 390, "character": 4}, "end": {"line": 390, "character": 28}}, "command": {"title": "Morbig.CST.else_part' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 374, "character": 4}, "end": {"line": 374, "character": 26}}, "command": {"title": "Morbig.CST.else_part -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 27}}, "command": {"title": "Morbig.CST.if_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 355, "character": 4}, "end": {"line": 355, "character": 26}}, "command": {"title": "Morbig.CST.if_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 350, "character": 4}, "end": {"line": 350, "character": 26}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern'", "command": ""}}, {"range": {"start": {"line": 347, "character": 4}, "end": {"line": 347, "character": 25}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 340, "character": 4}, "end": {"line": 340, "character": 24}}, "command": {"title": "Morbig.CST.pattern -> Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 335, "character": 4}, "end": {"line": 335, "character": 30}}, "command": {"title": "Morbig.CST.case_item' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 327, "character": 4}, "end": {"line": 327, "character": 28}}, "command": {"title": "Morbig.CST.case_item -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 322, "character": 4}, "end": {"line": 322, "character": 33}}, "command": {"title": "Morbig.CST.case_item_ns' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 314, "character": 4}, "end": {"line": 314, "character": 31}}, "command": {"title": "Morbig.CST.case_item_ns -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 309, "character": 4}, "end": {"line": 309, "character": 35}}, "command": {"title": "Morbig.CST.case_list' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 302, "character": 4}, "end": {"line": 302, "character": 34}}, "command": {"title": "Morbig.CST.case_list -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 297, "character": 4}, "end": {"line": 297, "character": 38}}, "command": {"title": "Morbig.CST.case_list_ns' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 37}}, "command": {"title": "Morbig.CST.case_list_ns -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 285, "character": 4}, "end": {"line": 285, "character": 29}}, "command": {"title": "Morbig.CST.case_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 268, "character": 4}, "end": {"line": 268, "character": 28}}, "command": {"title": "Morbig.CST.case_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 29}}, "command": {"title": "Morbig.CST.wordlist' => list(\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 256, "character": 4}, "end": {"line": 256, "character": 28}}, "command": {"title": "Morbig.CST.wordlist -> Morsmall__.AST.word' list", "command": ""}}, {"range": {"start": {"line": 251, "character": 4}, "end": {"line": 251, "character": 28}}, "command": {"title": "Morbig.CST.for_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 27}}, "command": {"title": "Morbig.CST.for_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 225, "character": 4}, "end": {"line": 225, "character": 23}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 222, "character": 4}, "end": {"line": 222, "character": 22}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 212, "character": 4}, "end": {"line": 212, "character": 21}}, "command": {"title": "Morbig.CST.term -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 207, "character": 4}, "end": {"line": 207, "character": 32}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 204, "character": 4}, "end": {"line": 204, "character": 31}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 197, "character": 4}, "end": {"line": 197, "character": 30}}, "command": {"title": "Morbig.CST.compound_list -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 192, "character": 4}, "end": {"line": 192, "character": 26}}, "command": {"title": "Morbig.CST.subshell' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 188, "character": 4}, "end": {"line": 188, "character": 25}}, "command": {"title": "Morbig.CST.subshell -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 35}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 180, "character": 4}, "end": {"line": 180, "character": 34}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 164, "character": 4}, "end": {"line": 164, "character": 33}}, "command": {"title": "Morbig.CST.compound_command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 159, "character": 4}, "end": {"line": 159, "character": 26}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 156, "character": 4}, "end": {"line": 156, "character": 25}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 145, "character": 4}, "end": {"line": 145, "character": 24}}, "command": {"title": "Morbig.CST.command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 140, "character": 4}, "end": {"line": 140, "character": 32}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 137, "character": 4}, "end": {"line": 137, "character": 31}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 128, "character": 4}, "end": {"line": 128, "character": 30}}, "command": {"title": "Morbig.CST.pipe_sequence -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 123, "character": 4}, "end": {"line": 123, "character": 27}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 120, "character": 4}, "end": {"line": 120, "character": 26}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 114, "character": 4}, "end": {"line": 114, "character": 25}}, "command": {"title": "Morbig.CST.pipeline -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 25}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 24}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 92, "character": 4}, "end": {"line": 92, "character": 23}}, "command": {"title": "Morbig.CST.and_or -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 87, "character": 4}, "end": {"line": 87, "character": 24}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 23}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 74, "character": 4}, "end": {"line": 74, "character": 22}}, "command": {"title": "Morbig.CST.clist -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 35}}, "command": {"title": "Morbig.CST.complete_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 33}}, "command": {"title": "Morbig.CST.complete_command => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 41}}, "command": {"title": "Morbig.CST.complete_commands' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 39}}, "command": {"title": "Morbig.CST.complete_commands => list(\n  Morsmall__.AST.command'\n)", "command": ""}}, {"range": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 25}}, "command": {"title": "Morbig.CST.program' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 39, "character": 28}}, "command": {"title": "Morbig.CST.program => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "218 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], variable [VariableAtom], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name [Name], pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordVariable, WordSubshell, WordSingleQuoted and 8 more], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', variable_attribute [UseDefaultValues, UseAlternativeValue, RemoveSmallestSuffixPattern and 7 more], cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], name', pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst [[], ::], compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', io_number [IONumber], complete_commands', assignment_word}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"name": "convert_location", "kind": 22, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 26, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location_2", "kind": 22, "location": {"range": {"start": {"line": 28, "character": 0}, "end": {"line": 30, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "erase_location", "kind": 22, "location": {"range": {"start": {"line": 32, "character": 0}, "end": {"line": 33, "character": 22}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_number__to__int", "kind": 12, "location": {"range": {"start": {"line": 855, "character": 0}, "end": {"line": 856, "character": 49}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "assignment_word'__to__assignment'", "kind": 12, "location": {"range": {"start": {"line": 850, "character": 0}, "end": {"line": 851, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "assignment_word__to__assignment", "kind": 12, "location": {"range": {"start": {"line": 846, "character": 0}, "end": {"line": 848, "character": 23}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "name'__to__name", "kind": 12, "location": {"range": {"start": {"line": 841, "character": 0}, "end": {"line": 842, "character": 37}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "name__to__name", "kind": 22, "location": {"range": {"start": {"line": 838, "character": 0}, "end": {"line": 839, "character": 21}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "variable_attribute__to__attribute", "kind": 12, "location": {"range": {"start": {"line": 814, "character": 0}, "end": {"line": 834, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_component_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 796, "character": 0}, "end": {"line": 812, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_component__to__word", "kind": 12, "location": {"range": {"start": {"line": 765, "character": 0}, "end": {"line": 794, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_cst_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 759, "character": 0}, "end": {"line": 761, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_cst__to__word", "kind": 12, "location": {"range": {"start": {"line": 755, "character": 0}, "end": {"line": 757, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 750, "character": 0}, "end": {"line": 751, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 747, "character": 0}, "end": {"line": 748, "character": 39}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word'__to__word", "kind": 12, "location": {"range": {"start": {"line": 744, "character": 0}, "end": {"line": 745, "character": 37}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word__to__word", "kind": 22, "location": {"range": {"start": {"line": 740, "character": 0}, "end": {"line": 742, "character": 32}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sequential_sep__to__command", "kind": 12, "location": {"range": {"start": {"line": 735, "character": 0}, "end": {"line": 736, "character": 9}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 728, "character": 0}, "end": {"line": 731, "character": 73}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator'__to__command", "kind": 12, "location": {"range": {"start": {"line": 725, "character": 0}, "end": {"line": 726, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator__to__command", "kind": 12, "location": {"range": {"start": {"line": 718, "character": 0}, "end": {"line": 723, "character": 19}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 711, "character": 0}, "end": {"line": 714, "character": 79}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op'__to__command", "kind": 12, "location": {"range": {"start": {"line": 708, "character": 0}, "end": {"line": 709, "character": 59}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op__to__command", "kind": 12, "location": {"range": {"start": {"line": 703, "character": 0}, "end": {"line": 706, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_here'__to__strip_word'", "kind": 12, "location": {"range": {"start": {"line": 698, "character": 0}, "end": {"line": 699, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_here__to__strip_word'", "kind": 22, "location": {"range": {"start": {"line": 692, "character": 0}, "end": {"line": 696, "character": 40}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "filename'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 687, "character": 0}, "end": {"line": 688, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "filename__to__word'", "kind": 22, "location": {"range": {"start": {"line": 683, "character": 0}, "end": {"line": 685, "character": 27}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_file'__to__kind_word'", "kind": 12, "location": {"range": {"start": {"line": 678, "character": 0}, "end": {"line": 679, "character": 49}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_file__to__kind_word'", "kind": 12, "location": {"range": {"start": {"line": 665, "character": 0}, "end": {"line": 676, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 660, "character": 0}, "end": {"line": 661, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect'__to__command", "kind": 12, "location": {"range": {"start": {"line": 657, "character": 0}, "end": {"line": 658, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect__to__command", "kind": 12, "location": {"range": {"start": {"line": 624, "character": 0}, "end": {"line": 655, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "redirect_list'__to__command", "kind": 12, "location": {"range": {"start": {"line": 619, "character": 0}, "end": {"line": 620, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "redirect_list__to__command", "kind": 12, "location": {"range": {"start": {"line": 609, "character": 0}, "end": {"line": 617, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_word'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 604, "character": 0}, "end": {"line": 605, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_word__to__word", "kind": 22, "location": {"range": {"start": {"line": 600, "character": 0}, "end": {"line": 602, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_name'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 595, "character": 0}, "end": {"line": 596, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_name__to__word", "kind": 22, "location": {"range": {"start": {"line": 591, "character": 0}, "end": {"line": 593, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_suffix'", "kind": 12, "location": {"range": {"start": {"line": 585, "character": 0}, "end": {"line": 587, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_suffix", "kind": 12, "location": {"range": {"start": {"line": 563, "character": 0}, "end": {"line": 583, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_prefix'", "kind": 12, "location": {"range": {"start": {"line": 551, "character": 0}, "end": {"line": 553, "character": 74}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_prefix", "kind": 12, "location": {"range": {"start": {"line": 529, "character": 0}, "end": {"line": 549, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "simple_command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 469, "character": 0}, "end": {"line": 519, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "do_group'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 464, "character": 0}, "end": {"line": 465, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "do_group__to__command", "kind": 22, "location": {"range": {"start": {"line": 460, "character": 0}, "end": {"line": 462, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "brace_group'__to__command", "kind": 12, "location": {"range": {"start": {"line": 455, "character": 0}, "end": {"line": 456, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "brace_group__to__command", "kind": 22, "location": {"range": {"start": {"line": 451, "character": 0}, "end": {"line": 453, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "fname'__to__name", "kind": 12, "location": {"range": {"start": {"line": 446, "character": 0}, "end": {"line": 447, "character": 39}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "fname__to__name", "kind": 22, "location": {"range": {"start": {"line": 443, "character": 0}, "end": {"line": 444, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_body'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 438, "character": 0}, "end": {"line": 439, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_body__to__command", "kind": 22, "location": {"range": {"start": {"line": 431, "character": 0}, "end": {"line": 436, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_definition'__to__command", "kind": 12, "location": {"range": {"start": {"line": 426, "character": 0}, "end": {"line": 427, "character": 70}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_definition__to__command", "kind": 22, "location": {"range": {"start": {"line": 419, "character": 0}, "end": {"line": 424, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "until_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 414, "character": 0}, "end": {"line": 415, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "until_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 407, "character": 0}, "end": {"line": 412, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "while_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 402, "character": 0}, "end": {"line": 403, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "while_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 395, "character": 0}, "end": {"line": 400, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "else_part'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 390, "character": 0}, "end": {"line": 391, "character": 52}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "else_part__to__command", "kind": 22, "location": {"range": {"start": {"line": 374, "character": 0}, "end": {"line": 388, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "if_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 369, "character": 0}, "end": {"line": 370, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "if_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 355, "character": 0}, "end": {"line": 367, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern'__to__pattern'", "kind": 12, "location": {"range": {"start": {"line": 350, "character": 0}, "end": {"line": 351, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern'__to__pattern", "kind": 12, "location": {"range": {"start": {"line": 347, "character": 0}, "end": {"line": 348, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern__to__pattern", "kind": 22, "location": {"range": {"start": {"line": 340, "character": 0}, "end": {"line": 345, "character": 30}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item'__to__case_item'", "kind": 12, "location": {"range": {"start": {"line": 335, "character": 0}, "end": {"line": 336, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item__to__case_item", "kind": 22, "location": {"range": {"start": {"line": 327, "character": 0}, "end": {"line": 333, "character": 90}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item_ns'__to__case_item'", "kind": 12, "location": {"range": {"start": {"line": 322, "character": 0}, "end": {"line": 323, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item_ns__to__case_item", "kind": 22, "location": {"range": {"start": {"line": 314, "character": 0}, "end": {"line": 320, "character": 90}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list'__to__case_item'_list", "kind": 12, "location": {"range": {"start": {"line": 309, "character": 0}, "end": {"line": 310, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list__to__case_item'_list", "kind": 22, "location": {"range": {"start": {"line": 302, "character": 0}, "end": {"line": 307, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list_ns'__to__case_item'_list", "kind": 12, "location": {"range": {"start": {"line": 297, "character": 0}, "end": {"line": 298, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list_ns__to__case_item'_list", "kind": 22, "location": {"range": {"start": {"line": 290, "character": 0}, "end": {"line": 295, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 285, "character": 0}, "end": {"line": 286, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 268, "character": 0}, "end": {"line": 283, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "wordlist'__to__word'_list", "kind": 12, "location": {"range": {"start": {"line": 263, "character": 0}, "end": {"line": 264, "character": 51}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "wordlist__to__word'_list", "kind": 22, "location": {"range": {"start": {"line": 256, "character": 0}, "end": {"line": 261, "character": 29}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "for_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 251, "character": 0}, "end": {"line": 252, "character": 52}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "for_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 230, "character": 0}, "end": {"line": 249, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 225, "character": 0}, "end": {"line": 226, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term'__to__command", "kind": 12, "location": {"range": {"start": {"line": 222, "character": 0}, "end": {"line": 223, "character": 40}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term__to__command", "kind": 22, "location": {"range": {"start": {"line": 212, "character": 0}, "end": {"line": 220, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 207, "character": 0}, "end": {"line": 208, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list'__to__command", "kind": 12, "location": {"range": {"start": {"line": 204, "character": 0}, "end": {"line": 205, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list__to__command", "kind": 22, "location": {"range": {"start": {"line": 197, "character": 0}, "end": {"line": 202, "character": 36}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "subshell'__to__command", "kind": 12, "location": {"range": {"start": {"line": 192, "character": 0}, "end": {"line": 193, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "subshell__to__command", "kind": 22, "location": {"range": {"start": {"line": 188, "character": 0}, "end": {"line": 190, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 183, "character": 0}, "end": {"line": 184, "character": 66}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 180, "character": 0}, "end": {"line": 181, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command__to__command", "kind": 22, "location": {"range": {"start": {"line": 164, "character": 0}, "end": {"line": 178, "character": 45}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 159, "character": 0}, "end": {"line": 160, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 156, "character": 0}, "end": {"line": 157, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command__to__command", "kind": 22, "location": {"range": {"start": {"line": 145, "character": 0}, "end": {"line": 154, "character": 59}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 140, "character": 0}, "end": {"line": 141, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence'__to__command", "kind": 12, "location": {"range": {"start": {"line": 137, "character": 0}, "end": {"line": 138, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence__to__command", "kind": 22, "location": {"range": {"start": {"line": 128, "character": 0}, "end": {"line": 135, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 123, "character": 0}, "end": {"line": 124, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline'__to__command", "kind": 12, "location": {"range": {"start": {"line": 120, "character": 0}, "end": {"line": 121, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline__to__command", "kind": 22, "location": {"range": {"start": {"line": 114, "character": 0}, "end": {"line": 118, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 109, "character": 0}, "end": {"line": 110, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or'__to__command", "kind": 12, "location": {"range": {"start": {"line": 106, "character": 0}, "end": {"line": 107, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or__to__command", "kind": 22, "location": {"range": {"start": {"line": 92, "character": 0}, "end": {"line": 104, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 87, "character": 0}, "end": {"line": 88, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist'__to__command", "kind": 12, "location": {"range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist__to__command", "kind": 22, "location": {"range": {"start": {"line": 74, "character": 0}, "end": {"line": 82, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 69, "character": 0}, "end": {"line": 70, "character": 66}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_command__to__command", "kind": 12, "location": {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 67, "character": 31}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_commands'__to__command'_list", "kind": 12, "location": {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 58, "character": 71}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_commands__to__command_list", "kind": 12, "location": {"range": {"start": {"line": 50, "character": 0}, "end": {"line": 55, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "program'__to__program", "kind": 12, "location": {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "program__to__program", "kind": 12, "location": {"range": {"start": {"line": 39, "character": 0}, "end": {"line": 43, "character": 7}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":3},"contentChanges":[{"text":"(***************************************************************************)\n(*                                 Morsmall                                *)\n(*                      A concise AST for POSIX shell                      *)\n(*                                                                         *)\n(*  Copyright (C) 2017,2018,2019 Yann RÃ©gis-Gianas, Ralf Treinen,          *)\n(*  Nicolas Jeannerod                                                      *)\n(*                                                                         *)\n(*  This program is free software: you can redistribute it and/or modify   *)\n(*  it under the terms of the GNU General Public License as published by   *)\n(*  the Free Software Foundation, either version 3 of the License, or      *)\n(*  (at your option) any later version.                                    *)\n(*                                                                         *)\n(*  This program is distributed in the hope that it will be useful,        *)\n(*  but WITHOUT ANY WARRANTY; without even the implied warranty of         *)\n(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *)\n(*  GNU General Public License for more details.                           *)\n(*                                                                         *)\n(*  You should have received a copy of the GNU General Public License      *)\n(*  along with this program.  If not, see <http://www.gnu.org/licenses/>.  *)\n(***************************************************************************)\n\nopen Morbig.CST\n\n(* Helpers about locations. *)\n\nlet convert_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b Location.located =\n  fun f loc -> { value = f loc.value ; position = loc.position }\n\nlet convert_location_2 : 'a 'b 'c. ('a -> 'b -> 'c) -> 'a located -> 'b -> 'c Location.located =\n  fun f loc x ->\n  { value = f loc.value x ; position = loc.position }\n\nlet erase_location : 'a 'b. ('a -> 'b) -> 'a located -> 'b =\n  fun f x -> f x.value\n\n(* Convertion functions *)\n\n(* CST.program -> AST.program *)\n\nlet rec program__to__program = function\n  | Program_LineBreak_CompleteCommands_LineBreak (_, complete_commands', _) ->\n     complete_commands'__to__command'_list complete_commands'\n  | Program_LineBreak _ ->\n     []\n\nand program'__to__program (program' : program') : AST.program =\n  erase_location program__to__program program'\n\n(* CST.complete_commands -> AST.command list *)\n\nand complete_commands__to__command_list = function\n  | CompleteCommands_CompleteCommands_NewlineList_CompleteCommand (complete_commands', _, complete_command') ->\n     (complete_commands'__to__command'_list complete_commands')\n     @ [complete_command'__to__command' complete_command']\n  | CompleteCommands_CompleteCommand complete_command' ->\n     [complete_command'__to__command' complete_command']\n\nand complete_commands'__to__command'_list (complete_commands' : complete_commands') : AST.command' list =\n  erase_location complete_commands__to__command_list complete_commands'\n\n(* CST.complete_command -> AST.command option *)\n\nand complete_command__to__command = function\n  | CompleteCommand_CList_SeparatorOp (clist', sepop') ->\n     clist'__to__command' clist'\n     |> separator_op'__to__command sepop'\n  | CompleteCommand_CList clist' ->\n     clist'__to__command clist'\n\nand complete_command'__to__command' (complete_command' : complete_command') : AST.command' =\n  convert_location complete_command__to__command complete_command'\n\n(* CST.clist -> AST.command *)\n\nand clist__to__command : clist -> AST.command = function\n  | CList_CList_SeparatorOp_AndOr (clist', sep_op', and_or') ->\n     AST.Seq (\n         clist'__to__command' clist'\n         |> separator_op'__to__command' sep_op',\n         and_or'__to__command' and_or'\n       )\n  | CList_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand clist'__to__command (clist' : clist') : AST.command =\n  erase_location clist__to__command clist'\n\nand clist'__to__command' (clist' : clist') : AST.command' =\n  convert_location clist__to__command clist'\n\n(* CST.and_or -> AST.command *)\n\nand and_or__to__command : and_or -> AST.command = function\n  | AndOr_Pipeline pipeline' ->\n     pipeline'__to__command pipeline'\n  | AndOr_AndOr_AndIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.And (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n  | AndOr_AndOr_OrIf_LineBreak_Pipeline (and_or', _, pipeline') ->\n     AST.Or (\n         and_or'__to__command' and_or',\n         pipeline'__to__command' pipeline'\n       )\n\nand and_or'__to__command (and_or' : and_or') : AST.command =\n  erase_location and_or__to__command and_or'\n\nand and_or'__to__command' (and_or' : and_or') : AST.command' =\n  convert_location and_or__to__command and_or'\n\n(* CST.pipeline -> AST.command *)\n\nand pipeline__to__command : pipeline -> AST.command = function\n  | Pipeline_PipeSequence pipe_sequence' ->\n     pipe_sequence'__to__command pipe_sequence'\n  | Pipeline_Bang_PipeSequence pipe_sequence' ->\n     AST.Not (pipe_sequence'__to__command' pipe_sequence')\n\nand pipeline'__to__command (pipeline' : pipeline') : AST.command =\n  erase_location pipeline__to__command pipeline'\n\nand pipeline'__to__command' (pipeline' : pipeline') : AST.command' =\n  convert_location pipeline__to__command pipeline'\n\n(* CST.pipe_sequence -> AST.command *)\n\nand pipe_sequence__to__command : pipe_sequence -> AST.command = function\n  | PipeSequence_Command command' ->\n     command'__to__command command'\n  | PipeSequence_PipeSequence_Pipe_LineBreak_Command (pipe_sequence', _, command') ->\n     AST.Pipe (\n         pipe_sequence'__to__command' pipe_sequence',\n         command'__to__command' command'\n       )\n\nand pipe_sequence'__to__command (pipe_sequence') : AST.command =\n  erase_location pipe_sequence__to__command pipe_sequence'\n\nand pipe_sequence'__to__command' (pipe_sequence') : AST.command' =\n  convert_location pipe_sequence__to__command pipe_sequence'\n\n(* CST.command -> AST.command *)\n\nand command__to__command : command -> AST.command = function\n  | Command_SimpleCommand simple_command' ->\n     simple_command'__to__command simple_command'\n  | Command_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | Command_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n  | Command_FunctionDefinition function_definition' ->\n     function_definition'__to__command function_definition'\n\nand command'__to__command (command' : command') : AST.command =\n  erase_location command__to__command command'\n\nand command'__to__command' (command' : command') : AST.command' =\n  convert_location command__to__command command'\n\n(* CST.compound_command -> AST.command *)\n\nand compound_command__to__command : compound_command -> AST.command = function\n  | CompoundCommand_BraceGroup brace_group' ->\n     brace_group'__to__command brace_group'\n  | CompoundCommand_Subshell subshell' ->\n     subshell'__to__command subshell'\n  | CompoundCommand_ForClause for_clause' ->\n     for_clause'__to__command for_clause'\n  | CompoundCommand_CaseClause case_clause' ->\n     case_clause'__to__command case_clause'\n  | CompoundCommand_IfClause if_clause' ->\n     if_clause'__to__command if_clause'\n  | CompoundCommand_WhileClause while_clause' ->\n     while_clause'__to__command while_clause'\n  | CompoundCommand_UntilClause until_clause' ->\n     until_clause'__to__command until_clause'\n\nand compound_command'__to__command (compound_command' : compound_command') : AST.command =\n  erase_location compound_command__to__command compound_command'\n\nand compound_command'__to__command' (compound_command' : compound_command') : AST.command' =\n  convert_location compound_command__to__command compound_command'\n\n(* CST.subshell -> AST.command *)\n\nand subshell__to__command : subshell -> AST.command  = function\n  | Subshell_Lparen_CompoundList_Rparen compound_list' ->\n     AST.Subshell (compound_list'__to__command' compound_list')\n\nand subshell'__to__command (subshell' : subshell') : AST.command =\n  erase_location subshell__to__command subshell'\n\n(* CST.compound_list -> AST.command *)\n\nand compound_list__to__command : compound_list -> AST.command = function\n  | CompoundList_LineBreak_Term (_, term') ->\n     term'__to__command term'\n  | CompoundList_LineBreak_Term_Separator (_, term', sep') ->\n     term'__to__command' term'\n     |> separator'__to__command sep'\n\nand compound_list'__to__command (compound_list' : compound_list') : AST.command =\n  erase_location compound_list__to__command compound_list'\n\nand compound_list'__to__command' (compound_list' : compound_list') : AST.command' =\n  convert_location compound_list__to__command compound_list'\n\n(* CST.term -> AST.command *)\n\nand term__to__command : term -> AST.command = function\n  | Term_Term_Separator_AndOr (term', sep', and_or') ->\n     AST.Seq (\n         term'__to__command' term'\n         |> separator'__to__command' sep',\n         and_or'__to__command' and_or'\n       )\n  | Term_AndOr and_or' ->\n     and_or'__to__command and_or'\n\nand term'__to__command (term' : term') : AST.command =\n  erase_location term__to__command term'\n\nand term'__to__command' (term' : term') : AST.command' =\n  convert_location term__to__command term'\n\n(* CST.for_clause -> AST.command *)\n\nand for_clause__to__command : for_clause -> AST.command = function\n  | ForClause_For_Name_DoGroup (name', do_group')\n  | ForClause_For_Name_SequentialSep_DoGroup (name', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         None ,\n         do_group'__to__command' do_group'\n       )\n  | ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup (name', _, _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some [] ,\n         do_group'__to__command' do_group'\n     )\n  | ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup (name', _, wordlist', _, do_group') ->\n     AST.For (\n         name'__to__name name' ,\n         Some (wordlist'__to__word'_list wordlist') ,\n         do_group'__to__command' do_group'\n       )\n\nand for_clause'__to__command (for_clause' : for_clause') : AST.command =\n  erase_location for_clause__to__command for_clause'\n\n(* CST.wordlist -> AST.word list *)\n\nand wordlist__to__word'_list : wordlist -> AST.word' list = function\n  | WordList_WordList_Word (wordlist', word') ->\n     (wordlist'__to__word'_list wordlist')\n     @ [word'__to__word' word']\n  | WordList_Word word' ->\n     [word'__to__word' word']\n\nand wordlist'__to__word'_list (wordlist' : wordlist') : AST.word' list =\n  erase_location wordlist__to__word'_list wordlist'\n\n(* CST.case_clause -> AST.command *)\n\nand case_clause__to__command : case_clause -> AST.command = function\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac (word', _, _, case_list') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list'__to__case_item'_list case_list'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac (word', _, _, case_list_ns') ->\n     AST.Case (\n         word'__to__word' word' ,\n         case_list_ns'__to__case_item'_list case_list_ns'\n       )\n  | CaseClause_Case_Word_LineBreak_In_LineBreak_Esac (word', _, _) ->\n     AST.Case (\n         word'__to__word' word' ,\n         []\n       )\n\nand case_clause'__to__command (case_clause' : case_clause') : AST.command =\n  erase_location case_clause__to__command case_clause'\n\n(* CST.case_list_ns -> AST.case list *)\n\nand case_list_ns__to__case_item'_list : case_list_ns -> AST.case_item' list = function (*FIXME*)\n  | CaseListNS_CaseList_CaseItemNS (case_list', case_item_ns') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item_ns'__to__case_item' case_item_ns']\n  | CaseListNS_CaseItemNS case_item_ns' ->\n     [case_item_ns'__to__case_item' case_item_ns']\n\nand case_list_ns'__to__case_item'_list (case_list_ns' : case_list_ns') : AST.case_item' list =\n  erase_location case_list_ns__to__case_item'_list case_list_ns'\n\n(* CST.case_list -> AST.case list *)\n\nand case_list__to__case_item'_list : case_list -> AST.case_item' list = function (*FIXME*)\n  | CaseList_CaseList_CaseItem (case_list', case_item') ->\n     (case_list'__to__case_item'_list case_list')\n     @ [case_item'__to__case_item' case_item']\n  | CaseList_CaseItem case_item' ->\n     [case_item'__to__case_item' case_item']\n\nand case_list'__to__case_item'_list (case_list' : case_list') : AST.case_item' list =\n  erase_location case_list__to__case_item'_list case_list'\n\n(* CST.case_item_ns -> AST.case_item *)\n\nand case_item_ns__to__case_item : case_item_ns -> AST.case_item = function\n  | CaseItemNS_Pattern_Rparen_LineBreak (pattern', _)\n  | CaseItemNS_Lparen_Pattern_Rparen_LineBreak (pattern', _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItemNS_Pattern_Rparen_CompoundList (pattern', compound_list')\n  | CaseItemNS_Lparen_Pattern_Rparen_CompoundList (pattern', compound_list') ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item_ns'__to__case_item' (case_item_ns' : case_item_ns') : AST.case_item' =\n  convert_location case_item_ns__to__case_item case_item_ns'\n\n(* CST.case_item -> AST.case_item *)\n\nand case_item__to__case_item : case_item -> AST.case_item = function\n  | CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _)\n  | CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak (pattern', _, _) ->\n     (pattern'__to__pattern' pattern', None)\n  | CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _)\n  | CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak (pattern', compound_list', _) ->\n     (pattern'__to__pattern' pattern', Some (compound_list'__to__command' compound_list'))\n\nand case_item'__to__case_item' (case_item' : case_item') : AST.case_item' =\n  convert_location case_item__to__case_item case_item'\n\n(* CST.pattern -> AST.pattern *)\n\nand pattern__to__pattern : pattern -> AST.pattern = function\n  | Pattern_Word word' ->\n     [word'__to__word word']\n  | Pattern_Pattern_Pipe_Word (pattern', word') ->\n     (pattern'__to__pattern pattern')\n     @ [word'__to__word word']\n\nand pattern'__to__pattern (pattern' : pattern') : AST.pattern =\n  erase_location pattern__to__pattern pattern'\n\nand pattern'__to__pattern' (pattern' : pattern') : AST.pattern' =\n  convert_location pattern__to__pattern pattern'\n\n(* CST.if_clause -> AST.command *)\n\nand if_clause__to__command : if_clause -> AST.command = function\n  | IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | IfClause_If_CompoundList_Then_CompoundList_Fi (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n\nand if_clause'__to__command (if_clause' : if_clause') : AST.command =\n  erase_location if_clause__to__command if_clause'\n\n(* CST.else_part -> AST.command *)\n\nand else_part__to__command : else_part -> AST.command = function\n  | ElsePart_Elif_CompoundList_Then_CompoundList (compound_list', compound_list2') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         None\n       )\n  | ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart (compound_list', compound_list2', else_part') ->\n     AST.If (\n         compound_list'__to__command' compound_list' ,\n         compound_list'__to__command' compound_list2' ,\n         Some (else_part'__to__command' else_part')\n       )\n  | ElsePart_Else_CompoundList compound_list' ->\n     compound_list'__to__command compound_list'\n\nand else_part'__to__command' (else_part' : else_part') : AST.command' =\n  convert_location else_part__to__command else_part'\n\n(* CST.while_clause -> AST.command *)\n\nand while_clause__to__command : while_clause -> AST.command = function\n  | WhileClause_While_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.While (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand while_clause'__to__command (while_clause' : while_clause') : AST.command =\n  erase_location while_clause__to__command while_clause'\n\n(* CST.until_clause -> AST.command *)\n\nand until_clause__to__command : until_clause -> AST.command = function\n  | UntilClause_Until_CompoundList_DoGroup (compound_list', do_group') ->\n     AST.Until (\n         compound_list'__to__command' compound_list' ,\n         do_group'__to__command' do_group'\n       )\n\nand until_clause'__to__command (until_clause' : until_clause') : AST.command =\n  erase_location until_clause__to__command until_clause'\n\n(* CST.function_definition -> AST.command *)\n\nand function_definition__to__command : function_definition -> AST.command = function\n  | FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody (fname', _, function_body') ->\n     AST.Function (\n         fname'__to__name fname' ,\n         function_body'__to__command' function_body'\n       )\n\nand function_definition'__to__command (function_definition' : function_definition') : AST.command =\n  erase_location function_definition__to__command function_definition'\n\n(* CST.function_body -> AST.command *)\n\nand function_body__to__command : function_body -> AST.command = function\n  | FunctionBody_CompoundCommand compound_command' ->\n     compound_command'__to__command compound_command'\n  | FunctionBody_CompoundCommand_RedirectList (compound_command', redirect_list') ->\n     compound_command'__to__command' compound_command'\n     |> redirect_list'__to__command redirect_list'\n\nand function_body'__to__command' (function_body' : function_body') : AST.command' =\n  convert_location function_body__to__command function_body'\n\n(* CST.fname -> AST.name *)\n\nand fname__to__name : fname -> AST.name = function\n  | Fname_Name name -> name__to__name name\n\nand fname'__to__name (fname' : fname') : AST.name =\n  erase_location fname__to__name fname'\n\n(* CST.brace_group -> AST.command *)\n\nand brace_group__to__command : brace_group -> AST.command = function\n  | BraceGroup_LBrace_CompoundList_RBrace compound_list' ->\n     compound_list'__to__command compound_list'\n\nand brace_group'__to__command (brace_group' : brace_group') : AST.command =\n  erase_location brace_group__to__command brace_group'\n\n(* CST.do_group -> AST.command *)\n\nand do_group__to__command : do_group -> AST.command = function\n  | DoGroup_Do_CompoundList_Done compound_list' ->\n     compound_list'__to__command compound_list'\n\nand do_group'__to__command' (do_group' : do_group') : AST.command' =\n  convert_location do_group__to__command do_group'\n\n(* CST.simple_command -> AST.command *)\n\nand simple_command'__to__command (simple_command' : simple_command') : AST.command =\n  let ( assignment'_list , word'_list , io_redirect'_list ) =\n    match simple_command'.value with\n    | SimpleCommand_CmdPrefix_CmdWord_CmdSuffix (cmd_prefix', cmd_word', cmd_suffix') ->\n       (* Since we are sorting right-to-left, we need to sort the\n          suffix before the prefix. *)\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] io_redirect'_list cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix_CmdWord (cmd_prefix', cmd_word') ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       (\n         List.map assignment_word'__to__assignment' assignment_word'_list ,\n         cmd_word'__to__word' cmd_word' :: [] ,\n         io_redirect'_list\n       )\n\n    | SimpleCommand_CmdPrefix cmd_prefix' ->\n       let ( assignment_word'_list , io_redirect'_list ) = sort__cmd_prefix' [] [] cmd_prefix' in\n       ( List.map assignment_word'__to__assignment' assignment_word'_list ,\n         [] ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName_CmdSuffix (cmd_name', cmd_suffix') ->\n       let ( word'_list , io_redirect'_list ) = sort__cmd_suffix' [] [] cmd_suffix' in\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: List.map word'__to__word' word'_list ,\n         io_redirect'_list )\n\n    | SimpleCommand_CmdName cmd_name' ->\n       ( [] ,\n         cmd_name'__to__word' cmd_name' :: [] ,\n         [] )\n  in\n  (* Because of the semantics of redirections, we need to handle that\n     redirection list from right to left. *)\n  List.fold_right\n    (\n      fun io_redirect' command ->\n      io_redirect'__to__command\n        io_redirect'\n        { value = command ;\n          position = simple_command'.position }\n    )\n    io_redirect'_list\n    (AST.Simple (assignment'_list, word'_list ))\n\n(* CST.cmd_prefix -> CST.assignment_word' list * CST.io_redirect' list\n\n   This function takes a prefix (which is basically a list of either\n   CST.assignment_word' or CST.io_redirect' and return two separate\n   lists for these two type of elements. It uses accumulators, but\n   since we are converting right-to-left lists to left-to-right lists,\n   we do not need a List.rev. *)\n\nand sort__cmd_prefix (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list) (*FIXME: check order*)\n    : cmd_prefix -> assignment_word' list * io_redirect' list = function\n  | CmdPrefix_IoRedirect io_redirect' ->\n     ( assignment_word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_IoRedirect (cmd_prefix', io_redirect') ->\n     sort__cmd_prefix'\n       assignment_word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_prefix'\n\n  | CmdPrefix_AssignmentWord assignment_word' ->\n     ( assignment_word' :: assignment_word'_acc ,\n       io_redirect'_acc )\n\n  | CmdPrefix_CmdPrefix_AssignmentWord (cmd_prefix', assignment_word') ->\n     sort__cmd_prefix'\n       (assignment_word' :: assignment_word'_acc)\n       io_redirect'_acc\n       cmd_prefix'\n\nand sort__cmd_prefix' (assignment_word'_acc : assignment_word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_prefix' : cmd_prefix') : assignment_word' list * io_redirect' list =\n  sort__cmd_prefix assignment_word'_acc io_redirect'_acc cmd_prefix'.value\n\n(* CST.cmd_suffix -> CST.word' list * CST.io_redirect' list\n\n   This function takes a suffix (which is basically a list of either\n   CST.word' or CST.io_redirect' and return two separate lists for\n   these two type of elements. It uses accumulators, but since we are\n   converting right-to-left lists to left-to-right lists, we do not\n   need a List.rev. *)\n\nand sort__cmd_suffix (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    : cmd_suffix -> word' list * io_redirect' list = function\n  | CmdSuffix_IoRedirect io_redirect' ->\n     ( word'_acc ,\n       io_redirect' :: io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_IoRedirect (cmd_suffix', io_redirect') ->\n     sort__cmd_suffix'\n       word'_acc\n       (io_redirect' :: io_redirect'_acc)\n       cmd_suffix'\n\n  | CmdSuffix_Word word' ->\n     ( word' :: word'_acc ,\n       io_redirect'_acc )\n\n  | CmdSuffix_CmdSuffix_Word (cmd_suffix', word') ->\n     sort__cmd_suffix'\n       (word' :: word'_acc)\n       io_redirect'_acc\n       cmd_suffix'\n\nand sort__cmd_suffix' (word'_acc : word' list) (io_redirect'_acc : io_redirect' list)\n    (cmd_suffix' : cmd_suffix') : word' list * io_redirect' list =\n  sort__cmd_suffix word'_acc io_redirect'_acc cmd_suffix'.value\n\n(* CST.cmd_name -> AST.word *)\n\nand cmd_name__to__word : cmd_name -> AST.word = function\n  | CmdName_Word word' ->\n     word'__to__word word'\n\nand cmd_name'__to__word' (cmd_name' : cmd_name') : AST.word' =\n  convert_location cmd_name__to__word cmd_name'\n\n(* CST.cmd_word -> AST.word *)\n\nand cmd_word__to__word : cmd_word -> AST.word = function\n  | CmdWord_Word word' ->\n     word'__to__word word'\n\nand cmd_word'__to__word' (cmd_word' : cmd_word') : AST.word' =\n  convert_location cmd_word__to__word cmd_word'\n\n(* CST.redirect_list -> AST.command' -> AST.command *)\n\nand redirect_list__to__command redirect_list (command' : AST.command') : AST.command =\n  match redirect_list with\n  | RedirectList_IoRedirect io_redirect' ->\n     command'\n     |> io_redirect'__to__command io_redirect'\n  | RedirectList_RedirectList_IoRedirect (redirect_list', io_redirect') ->\n     command'\n     |> io_redirect'__to__command' io_redirect'\n     |> redirect_list'__to__command redirect_list' (*FIXME: check order of the redirections*)\n\nand redirect_list'__to__command (redirect_list' : redirect_list') (command' : AST.command') : AST.command =\n  erase_location redirect_list__to__command redirect_list' command'\n\n(* CST.io_redirect -> AST.command' -> AST.command *)\n\nand io_redirect__to__command (io_redirect : io_redirect) (command' : AST.command') : AST.command =\n  match io_redirect with\n  | IoRedirect_IoFile io_file' ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (AST.default_redirection_descriptor kind) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoNumber_IoFile (io_number, io_file') ->\n     let kind, word' = io_file'__to__kind_word' io_file' in\n     AST.Redirection (\n         command' ,\n         (io_number__to__int io_number) ,\n         kind ,\n         word'\n       )\n  | IoRedirect_IoHere io_here' ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         0 ,\n         word' (* FIXME: strip that word if needed *)\n       )\n  | IoRedirect_IoNumber_IoHere (io_number, io_here') ->\n     let _strip, word' = io_here'__to__strip_word' io_here' in\n     AST.HereDocument (\n         command' ,\n         (io_number__to__int io_number) ,\n         word' (* FIXME: strip that word if needed *)\n       )\n\nand io_redirect'__to__command (io_redirect' : io_redirect') (command' : AST.command') : AST.command =\n  erase_location io_redirect__to__command io_redirect' command'\n\nand io_redirect'__to__command' (io_redirect' : io_redirect') (command' : AST.command') : AST.command' =\n  convert_location_2 io_redirect__to__command io_redirect' command'\n\n(* CST.io_file -> AST.redirection_kind * AST.word *)\n\nand io_file__to__kind_word' io_file =\n  let kind, filename' =\n    match io_file with\n    | IoFile_Less_FileName filename' -> AST.Input, filename'\n    | IoFile_LessAnd_FileName filename' -> AST.InputDuplicate, filename'\n    | IoFile_Great_FileName filename' -> AST.Output, filename'\n    | IoFile_GreatAnd_FileName filename' -> AST.OutputDuplicate, filename'\n    | IoFile_DGreat_FileName filename' -> AST.OutputAppend, filename'\n    | IoFile_LessGreat_FileName filename' -> AST.InputOutput, filename'\n    | IoFile_Clobber_FileName filename' -> AST.OutputClobber, filename'\n  in\n  ( kind , filename'__to__word' filename' )\n\nand io_file'__to__kind_word' (io_file' : io_file') : AST.kind * AST.word' =\n  erase_location io_file__to__kind_word' io_file'\n\n(* CST.filename -> AST.word *)\n\nand filename__to__word' : filename -> AST.word' = function\n  | Filename_Word word' ->\n     word'__to__word' word'\n\nand filename'__to__word' (filename' : filename') : AST.word' =\n  erase_location filename__to__word' filename'\n\n(* CST.io_here -> bool * AST.word *)\n\nand io_here__to__strip_word' : io_here -> bool * AST.word' = function\n  | IoHere_DLess_HereEnd (_, word'_ref) ->\n     (false, word'__to__word' !word'_ref)\n  | IoHere_DLessDash_HereEnd (_, word'_ref) ->\n     (true, word'__to__word' !word'_ref)\n\nand io_here'__to__strip_word' (io_here' : io_here') : bool * AST.word' =\n  erase_location io_here__to__strip_word' io_here'\n\n(* CST.separator_op -> AST.command -> AST.command *)\n\nand separator_op__to__command (sep_op : separator_op) (command' : AST.command') : AST.command =\n  match sep_op with\n  | SeparatorOp_Uppersand -> AST.Async command'\n  | SeparatorOp_Semicolon -> command'.value\n\nand separator_op'__to__command (sep_op' : separator_op') (command' : AST.command') : AST.command =\n  erase_location separator_op__to__command sep_op' command'\n\nand separator_op'__to__command' (sep_op' : separator_op') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator_op'__to__command sep_op' command')\n\n(* CST.separator -> AST.command -> AST.command *)\n\nand separator__to__command (sep : separator) (command' : AST.command') : AST.command =\n  match sep with\n  | Separator_SeparatorOp_LineBreak (sep_op', _) ->\n     separator_op'__to__command sep_op' command'\n  | Separator_NewLineList _ ->\n     command'.value\n\nand separator'__to__command (sep' : separator') (command' : AST.command') : AST.command =\n  erase_location separator__to__command sep' command'\n\nand separator'__to__command' (sep' : separator') (command' : AST.command') : AST.command' =\n  (* We do not want to convert the separator's location here but\n     rather use the command's location! *)\n  Location.copy_location command' (separator'__to__command sep' command')\n\n(* *)\n\nand sequential_sep__to__command _ (command : AST.command) : AST.command =\n  command\n\n(* CST.word -> AST.word *)\n\nand word__to__word : word -> AST.word = function\n  | Word (_, word_cst) ->\n     word_cst__to__word word_cst\n\nand word'__to__word (word' : word') : AST.word =\n  erase_location word__to__word word'\n\nand word'__to__word' (word' : word') : AST.word' =\n  convert_location word__to__word word'\n\nand word_double_quoted__to__word (Word (_, word_cst)) =\n  word_cst_double_quoted__to__word word_cst\n\n(* CST.word_cst -> AST.word *)\n\nand word_cst__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component__to__word word_cst\n  |> List.flatten\n\nand word_cst_double_quoted__to__word (word_cst : word_cst) : AST.word =\n  List.map word_component_double_quoted__to__word word_cst\n  |> List.flatten\n\n(* CST.word_component -> AST.word_component *)\n\nand word_component__to__word = function\n  | WordEmpty ->\n    []\n  | WordName name ->\n    [AST.WLiteral name]\n  (* | WordTildePrefix prefix ->\n    [AST.WTildePrefix prefix] *)\n  | WordLiteral literal ->\n    [AST.WLiteral literal]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst__to__word word_cst\n  | WordSingleQuoted (Word (_, [WordLiteral literal])) ->\n    [AST.WLiteral literal]\n  | WordSingleQuoted (Word (_, [])) ->\n    [AST.WLiteral \"\"]\n  | WordSingleQuoted _ ->\n    assert false\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordDoubleQuoted word ->\n    [AST.WDoubleQuoted (word_double_quoted__to__word word)]\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordGlobAll ->\n    [AST.WGlobAll]\n  | WordGlobAny ->\n    [AST.WGlobAny]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n\nand word_component_double_quoted__to__word = function\n  | WordEmpty ->\n    []\n  | WordName literal | WordLiteral literal  ->\n    [AST.WLiteral literal]\n  | WordSubshell (_, program') ->\n    [AST.WSubshell (program'__to__program program')]\n  | WordAssignmentWord (Name name, Word (_, word_cst)) ->\n    [AST.WLiteral name; AST.WLiteral \"=\"]\n    @ word_cst_double_quoted__to__word word_cst\n  | WordVariable (VariableAtom (name, variable_attribute)) ->\n    [AST.WVariable (name, variable_attribute__to__attribute variable_attribute)]\n  | WordReBracketExpression bracket_expression ->\n    [AST.WBracketExpression bracket_expression]\n  | WordDoubleQuoted _ | WordSingleQuoted _\n  | WordGlobAll | WordGlobAny ->\n    assert false\n\nand variable_attribute__to__attribute = function\n  | NoAttribute ->\n    AST.NoAttribute\n  | ParameterLength word ->\n    AST.ParameterLength (word__to__word word)\n  | UseDefaultValues (_, word) ->\n    AST.UseDefaultValues (word__to__word word)\n  | AssignDefaultValues (_, word) ->\n    AST.AssignDefaultValues (word__to__word word)\n  | IndicateErrorifNullorUnset (_, word) ->\n    AST.IndicateErrorifNullorUnset (word__to__word word)\n  | UseAlternativeValue (_, word) ->\n    AST.UseAlternativeValue (word__to__word word)\n  | RemoveSmallestSuffixPattern word ->\n    AST.RemoveSmallestSuffixPattern (word__to__word word)\n  | RemoveLargestSuffixPattern word ->\n    AST.RemoveLargestSuffixPattern (word__to__word word)\n  | RemoveSmallestPrefixPattern word ->\n    AST.RemoveSmallestPrefixPattern (word__to__word word)\n  | RemoveLargestPrefixPattern word ->\n    AST.RemoveLargestPrefixPattern (word__to__word word)\n\n(* CST.name -> AST.name *)\n\nand name__to__name : name -> AST.name = function\n  | Name name -> name\n\nand name'__to__name (name' : name') : AST.name =\n  erase_location name__to__name name'\n\n(* CST.assignment_word -> AST.assignment *)\n\nand assignment_word__to__assignment ((name, word) : assignment_word) : AST.assignment =\n  (name__to__name name,\n   word__to__word word)\n\nand assignment_word'__to__assignment' (assignment_word' : assignment_word') : AST.assignment' =\n  convert_location assignment_word__to__assignment assignment_word'\n\n(* CST.io_number -> AST.descr *)\n\nand io_number__to__int  = function\n  | IONumber io_number -> int_of_string io_number\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml","version":3}}}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Sending response {"id": 54, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 855, "character": 4}, "end": {"line": 855, "character": 22}}, "command": {"title": "Morbig.CST.io_number => Morsmall__.AST.descr", "command": ""}}, {"range": {"start": {"line": 850, "character": 4}, "end": {"line": 850, "character": 37}}, "command": {"title": "Morbig.CST.assignment_word' => Morsmall__.AST.assignment'", "command": ""}}, {"range": {"start": {"line": 846, "character": 4}, "end": {"line": 846, "character": 35}}, "command": {"title": "Morbig.CST.assignment_word => Morsmall__.AST.assignment", "command": ""}}, {"range": {"start": {"line": 841, "character": 4}, "end": {"line": 841, "character": 19}}, "command": {"title": "Morbig.CST.name' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 838, "character": 4}, "end": {"line": 838, "character": 18}}, "command": {"title": "Morbig.CST.name -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 814, "character": 4}, "end": {"line": 814, "character": 37}}, "command": {"title": "Morbig.CST.variable_attribute => Morsmall__.AST.attribute", "command": ""}}, {"range": {"start": {"line": 796, "character": 4}, "end": {"line": 796, "character": 42}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 765, "character": 4}, "end": {"line": 765, "character": 28}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 759, "character": 4}, "end": {"line": 759, "character": 36}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 755, "character": 4}, "end": {"line": 755, "character": 22}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 750, "character": 4}, "end": {"line": 750, "character": 32}}, "command": {"title": "Morbig.CST.word => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 747, "character": 4}, "end": {"line": 747, "character": 20}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 744, "character": 4}, "end": {"line": 744, "character": 19}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 740, "character": 4}, "end": {"line": 740, "character": 18}}, "command": {"title": "Morbig.CST.word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 735, "character": 4}, "end": {"line": 735, "character": 31}}, "command": {"title": "(\n  'a,\n  Morsmall__.AST.command\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 728, "character": 4}, "end": {"line": 728, "character": 28}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 27}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 718, "character": 4}, "end": {"line": 718, "character": 26}}, "command": {"title": "(\n  Morbig.CST.separator,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 711, "character": 4}, "end": {"line": 711, "character": 31}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 708, "character": 4}, "end": {"line": 708, "character": 30}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 703, "character": 4}, "end": {"line": 703, "character": 29}}, "command": {"title": "(\n  Morbig.CST.separator_op,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 698, "character": 4}, "end": {"line": 698, "character": 29}}, "command": {"title": "Morbig.CST.io_here' => (\n  bool,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 28}}, "command": {"title": "Morbig.CST.io_here -> bool * Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 687, "character": 4}, "end": {"line": 687, "character": 24}}, "command": {"title": "Morbig.CST.filename' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 683, "character": 4}, "end": {"line": 683, "character": 23}}, "command": {"title": "Morbig.CST.filename -> Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 678, "character": 4}, "end": {"line": 678, "character": 28}}, "command": {"title": "Morbig.CST.io_file' => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 665, "character": 4}, "end": {"line": 665, "character": 27}}, "command": {"title": "Morbig.CST.io_file => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 660, "character": 4}, "end": {"line": 660, "character": 30}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 657, "character": 4}, "end": {"line": 657, "character": 29}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 624, "character": 4}, "end": {"line": 624, "character": 28}}, "command": {"title": "(\n  Morbig.CST.io_redirect,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 619, "character": 4}, "end": {"line": 619, "character": 31}}, "command": {"title": "(\n  Morbig.CST.redirect_list',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 609, "character": 4}, "end": {"line": 609, "character": 30}}, "command": {"title": "(\n  Morbig.CST.redirect_list,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 604, "character": 4}, "end": {"line": 604, "character": 24}}, "command": {"title": "Morbig.CST.cmd_word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 600, "character": 4}, "end": {"line": 600, "character": 22}}, "command": {"title": "Morbig.CST.cmd_word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 595, "character": 4}, "end": {"line": 595, "character": 24}}, "command": {"title": "Morbig.CST.cmd_name' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 591, "character": 4}, "end": {"line": 591, "character": 22}}, "command": {"title": "Morbig.CST.cmd_name -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 585, "character": 4}, "end": {"line": 585, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix'\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 563, "character": 4}, "end": {"line": 563, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 551, "character": 4}, "end": {"line": 551, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix'\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 529, "character": 4}, "end": {"line": 529, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 469, "character": 4}, "end": {"line": 469, "character": 32}}, "command": {"title": "Morbig.CST.simple_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 464, "character": 4}, "end": {"line": 464, "character": 27}}, "command": {"title": "Morbig.CST.do_group' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 460, "character": 4}, "end": {"line": 460, "character": 25}}, "command": {"title": "Morbig.CST.do_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 455, "character": 4}, "end": {"line": 455, "character": 29}}, "command": {"title": "Morbig.CST.brace_group' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 451, "character": 4}, "end": {"line": 451, "character": 28}}, "command": {"title": "Morbig.CST.brace_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 446, "character": 4}, "end": {"line": 446, "character": 20}}, "command": {"title": "Morbig.CST.fname' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 443, "character": 4}, "end": {"line": 443, "character": 19}}, "command": {"title": "Morbig.CST.fname -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 438, "character": 4}, "end": {"line": 438, "character": 32}}, "command": {"title": "Morbig.CST.function_body' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 431, "character": 4}, "end": {"line": 431, "character": 30}}, "command": {"title": "Morbig.CST.function_body -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 426, "character": 4}, "end": {"line": 426, "character": 37}}, "command": {"title": "Morbig.CST.function_definition' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 419, "character": 4}, "end": {"line": 419, "character": 36}}, "command": {"title": "Morbig.CST.function_definition -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 414, "character": 4}, "end": {"line": 414, "character": 30}}, "command": {"title": "Morbig.CST.until_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 407, "character": 4}, "end": {"line": 407, "character": 29}}, "command": {"title": "Morbig.CST.until_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 402, "character": 4}, "end": {"line": 402, "character": 30}}, "command": {"title": "Morbig.CST.while_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 395, "character": 4}, "end": {"line": 395, "character": 29}}, "command": {"title": "Morbig.CST.while_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 390, "character": 4}, "end": {"line": 390, "character": 28}}, "command": {"title": "Morbig.CST.else_part' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 374, "character": 4}, "end": {"line": 374, "character": 26}}, "command": {"title": "Morbig.CST.else_part -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 27}}, "command": {"title": "Morbig.CST.if_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 355, "character": 4}, "end": {"line": 355, "character": 26}}, "command": {"title": "Morbig.CST.if_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 350, "character": 4}, "end": {"line": 350, "character": 26}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern'", "command": ""}}, {"range": {"start": {"line": 347, "character": 4}, "end": {"line": 347, "character": 25}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 340, "character": 4}, "end": {"line": 340, "character": 24}}, "command": {"title": "Morbig.CST.pattern -> Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 335, "character": 4}, "end": {"line": 335, "character": 30}}, "command": {"title": "Morbig.CST.case_item' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 327, "character": 4}, "end": {"line": 327, "character": 28}}, "command": {"title": "Morbig.CST.case_item -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 322, "character": 4}, "end": {"line": 322, "character": 33}}, "command": {"title": "Morbig.CST.case_item_ns' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 314, "character": 4}, "end": {"line": 314, "character": 31}}, "command": {"title": "Morbig.CST.case_item_ns -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 309, "character": 4}, "end": {"line": 309, "character": 35}}, "command": {"title": "Morbig.CST.case_list' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 302, "character": 4}, "end": {"line": 302, "character": 34}}, "command": {"title": "Morbig.CST.case_list -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 297, "character": 4}, "end": {"line": 297, "character": 38}}, "command": {"title": "Morbig.CST.case_list_ns' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 37}}, "command": {"title": "Morbig.CST.case_list_ns -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 285, "character": 4}, "end": {"line": 285, "character": 29}}, "command": {"title": "Morbig.CST.case_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 268, "character": 4}, "end": {"line": 268, "character": 28}}, "command": {"title": "Morbig.CST.case_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 29}}, "command": {"title": "Morbig.CST.wordlist' => list(\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 256, "character": 4}, "end": {"line": 256, "character": 28}}, "command": {"title": "Morbig.CST.wordlist -> Morsmall__.AST.word' list", "command": ""}}, {"range": {"start": {"line": 251, "character": 4}, "end": {"line": 251, "character": 28}}, "command": {"title": "Morbig.CST.for_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 27}}, "command": {"title": "Morbig.CST.for_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 225, "character": 4}, "end": {"line": 225, "character": 23}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 222, "character": 4}, "end": {"line": 222, "character": 22}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 212, "character": 4}, "end": {"line": 212, "character": 21}}, "command": {"title": "Morbig.CST.term -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 207, "character": 4}, "end": {"line": 207, "character": 32}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 204, "character": 4}, "end": {"line": 204, "character": 31}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 197, "character": 4}, "end": {"line": 197, "character": 30}}, "command": {"title": "Morbig.CST.compound_list -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 192, "character": 4}, "end": {"line": 192, "character": 26}}, "command": {"title": "Morbig.CST.subshell' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 188, "character": 4}, "end": {"line": 188, "character": 25}}, "command": {"title": "Morbig.CST.subshell -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 35}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 180, "character": 4}, "end": {"line": 180, "character": 34}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 164, "character": 4}, "end": {"line": 164, "character": 33}}, "command": {"title": "Morbig.CST.compound_command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 159, "character": 4}, "end": {"line": 159, "character": 26}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 156, "character": 4}, "end": {"line": 156, "character": 25}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 145, "character": 4}, "end": {"line": 145, "character": 24}}, "command": {"title": "Morbig.CST.command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 140, "character": 4}, "end": {"line": 140, "character": 32}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 137, "character": 4}, "end": {"line": 137, "character": 31}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 128, "character": 4}, "end": {"line": 128, "character": 30}}, "command": {"title": "Morbig.CST.pipe_sequence -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 123, "character": 4}, "end": {"line": 123, "character": 27}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 120, "character": 4}, "end": {"line": 120, "character": 26}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 114, "character": 4}, "end": {"line": 114, "character": 25}}, "command": {"title": "Morbig.CST.pipeline -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 25}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 24}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 92, "character": 4}, "end": {"line": 92, "character": 23}}, "command": {"title": "Morbig.CST.and_or -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 87, "character": 4}, "end": {"line": 87, "character": 24}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 23}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 74, "character": 4}, "end": {"line": 74, "character": 22}}, "command": {"title": "Morbig.CST.clist -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 35}}, "command": {"title": "Morbig.CST.complete_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 33}}, "command": {"title": "Morbig.CST.complete_command => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 41}}, "command": {"title": "Morbig.CST.complete_commands' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 39}}, "command": {"title": "Morbig.CST.complete_commands => list(\n  Morsmall__.AST.command'\n)", "command": ""}}, {"range": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 25}}, "command": {"title": "Morbig.CST.program' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 39, "character": 28}}, "command": {"title": "Morbig.CST.program => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "218 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], variable [VariableAtom], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name [Name], pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordVariable, WordSubshell, WordSingleQuoted and 8 more], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', variable_attribute [UseDefaultValues, UseAlternativeValue, RemoveSmallestSuffixPattern and 7 more], cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], name', pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst [[], ::], compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', io_number [IONumber], complete_commands', assignment_word}", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr
File "_none_", line 1:
Error: Cannot find file src/.morsmall.objs/byte/morsmall__CST_to_AST.cmo
Affected files: file:///Users/mandalarian/Github/morsmall/_none_
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":799,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.0197887420654ms
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting global Morbig
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting for 897 in word_component
[ref] Yes!! got it
Sending response {"id": 55, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 799, "character": 23}, "end": {"line": 799, "character": 34}}, "contents": {"kind": "markdown", "value": "```\nMorbig.CST.word_component\n```\n\n```\ntype word_component = \n  | WordSubshell(subshell_kind, located(program))\n  | WordName(string)\n  | WordAssignmentWord(assignment_word)\n  | WordDoubleQuoted(word)\n  | WordSingleQuoted(word)\n  | WordLiteral(string)\n  | WordVariable(variable)\n  | WordGlobAll\n  | WordGlobAny\n  | WordReBracketExpression(bracket_expression)\n  | WordEmpty\n\n```\n\n```\nWordLiteral(string)\n```\n\nfile:///Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///Users/mandalarian/Github/morsmall/_build/default/tests/.merlin","type":1},{"uri":"file:///Users/mandalarian/Github/morsmall/tests/.merlin","type":1}]}}
Got a watched file change
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","languageId":"ocaml","version":1,"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> Literal \"foo\") ;\n       1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests
=== Project root: /Users/mandalarian/Github/morsmall
Detected `opam` dependency manager for local use
Get ocaml stdlib dirs
New dune process
[MerlinFile]: Error: Insufficient build files found for module Run - src: /Users/mandalarian/Github/morsmall/tests/run.ml, srci: (), cmi: (), cmt: (), cmti: ()
[MerlinFile]: Error: Insufficient build files found for module Generator - src: /Users/mandalarian/Github/morsmall/tests/generator.ml, srci: /Users/mandalarian/Github/morsmall/tests/generator.mli, cmi: (), cmt: (), cmti: ()
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/topdirs.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unix.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/pervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/raw_spacetime_lib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/extPervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/name.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/debug.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.ml
 > /Users/mandalarian/.opam/4.08.1/lib/visitors/runtime/VisitorsRuntime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unixLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/std_exit.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/assignment.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.ml
 > /Users/mandalarian/Github/morsmall/tests/../src/safePrinter.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexerState.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/engine.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/version.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionLexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/keyword.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/token.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_dump.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/result/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/quoteRemoval.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/patternMatchingRecognizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/ExtMenhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.mli
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretoken.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/dynlink.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.ml
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/CST_to_AST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/recursiveParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretokenizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
 > /Users/mandalarian/Github/morsmall/tests/../src/location.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/str.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.mli
Reloading because you created a new file: /Users/mandalarian/Github/morsmall/tests/generator.ml
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 30800
<< Making lastDefinitions with type error for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 83, characters 20-27:
83 |     [| 1, (fun _ -> Literal "foo") ;
                         ^^^^^^^
Error: Unbound constructor Literal
Hint: Did you mean WLiteral?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 82, "character": 20}, "end": {"line": 82, "character": 27}}, "message": "83 |     [| 1, (fun _ -> Literal \"foo\") ;\n                         ^^^^^^^\nError: Unbound constructor Literal\nHint: Did you mean WLiteral?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0240802764893ms
Sending response {"id": 56, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0119209289551ms
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 58, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 59, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":82,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0269412994385ms
Sending response {"id": 60, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0228881835938ms
Sending response {"id": 61, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
Sending response {"id": 62, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0431537628174ms
Sending response {"id": 63, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 64, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":82,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Sending response {"id": 65, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":82,"character":20},"end":{"line":82,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":82,"character":20},"end":{"line":82,"character":27}},"message":"83 |     [| 1, (fun _ -> Literal \"foo\") ;\n                         ^^^^^^^\nError: Unbound constructor Literal\nHint: Did you mean WLiteral?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 66, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":82,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0250339508057ms
Sending response {"id": 67, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":82,"character":20},"end":{"line":82,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":82,"character":20},"end":{"line":82,"character":27}},"message":"83 |     [| 1, (fun _ -> Literal \"foo\") ;\n                         ^^^^^^^\nError: Unbound constructor Literal\nHint: Did you mean WLiteral?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.028133392334ms
Sending response {"id": 68, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":2},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0181198120117ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 31258
Sending response {"id": 69, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":82,"character":21},"end":{"line":82,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":82,"character":20},"end":{"line":82,"character":27}},"message":"83 |     [| 1, (fun _ -> Literal \"foo\") ;\n                         ^^^^^^^\nError: Unbound constructor Literal\nHint: Did you mean WLiteral?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0300407409668ms
Sending response {"id": 70, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0131130218506ms
Sending response {"id": 71, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 84, characters 20-28:
84 |        1, (fun _ -> Variable ("x", NoAttribute)) ;
                         ^^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Variable does not belong to type Morsmall.AST.word_component
Hint: Did you mean WVariable?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 28}}, "message": "84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":82,"character":21},"end":{"line":82,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0240802764893ms
Sending response {"id": 72, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":2},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":2}}}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0138282775879ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 31258
Sending response {"id": 73, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests/../src
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests/../src
=== Project root: /Users/mandalarian/Github/morsmall/tests/..
Detected `opam` dependency manager for local use
Get ocaml stdlib dirs
New dune process
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -intf /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall__Morsmall.asti with pwd /Users/mandalarian/Github/morsmall/tests/../src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 84, characters 20-28:
84 |        1, (fun _ -> Variable ("x", NoAttribute)) ;
                         ^^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Variable does not belong to type Morsmall.AST.word_component
Hint: Did you mean WVariable?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 28}}, "message": "84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?", "severity": 1}]}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/safePrinter.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall__SafePrinter.ast with pwd /Users/mandalarian/Github/morsmall/tests/../src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/safePrinter.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/safePrinter.ml", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/AST.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall__AST.ast with pwd /Users/mandalarian/Github/morsmall/tests/../src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/AST.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/AST.ml", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/location.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall__Location.ast with pwd /Users/mandalarian/Github/morsmall/tests/../src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/location.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/location.ml", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/CST_to_AST.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall__ -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-4-30-42 -ppx '/Users/mandalarian/Github/morsmall/_build/default/.ppx/6275b1ab6a7c2471cccae8471136173f/ppx.exe --as-ppx --cookie '\''library-name="morsmall"'\''' -impl /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall__CST_to_AST.ast with pwd /Users/mandalarian/Github/morsmall/tests/../src
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/CST_to_AST.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/CST_to_AST.ml", "diagnostics": []}}
Found a `dune` file at /Users/mandalarian/Github/morsmall/tests/../src/utilities
]] Making a new jbuilder package at /Users/mandalarian/Github/morsmall/tests/../src/utilities
=== Project root: /Users/mandalarian/Github/morsmall/tests/..
Detected `opam` dependency manager for local use
Get ocaml stdlib dirs
New dune process
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/utilities/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.mli
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Morsmall_utilities -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -intf /Users/mandalarian/Github/morsmall/tests/../_build/.lsp/morsmall_utilities__TestParser.asti with pwd /Users/mandalarian/Github/morsmall/tests/../src/utilities
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.mli
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.mli", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":85,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Sending response {"id": 74, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Sending response {"id": 75, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 76, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":75}}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Sending response {"id": 77, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 78, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":77}}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Sending response {"id": 79, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":82,"character":21},"end":{"line":82,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 80, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 81, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Sending response {"id": 82, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":85,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.00405311584473ms
Sending response {"id": 83, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 84, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 85, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 86, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Sending response {"id": 87, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0269412994385ms
Sending response {"id": 88, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.018835067749ms
Sending response {"id": 89, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":3},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 31258
Sending response {"id": 90, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":21},"end":{"line":83,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":28}},"message":"84 |        1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Variable does not belong to type Morsmall.AST.word_component\nHint: Did you mean WVariable?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 91, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Sending response {"id": 92, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 84, characters 20-29:
84 |        1, (fun _ -> wVariable ("x", NoAttribute)) ;
                         ^^^^^^^^^
Error: Unbound value wVariable
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 29}}, "message": "84 |        1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^^\nError: Unbound value wVariable", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":21},"end":{"line":83,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":29}},"message":"84 |        1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^^\nError: Unbound value wVariable","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Sending response {"id": 93, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":3},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":3}}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 31258
Sending response {"id": 94, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 84, characters 20-29:
84 |        1, (fun _ -> wVariable ("x", NoAttribute)) ;
                         ^^^^^^^^^
Error: Unbound value wVariable
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 29}}, "message": "84 |        1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^^\nError: Unbound value wVariable", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":4},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> Variable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 31258
Sending response {"id": 95, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":29}},"message":"84 |        1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^^\nError: Unbound value wVariable","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 96, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00381469726562ms
Sending response {"id": 97, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":5},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 32270
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 86, characters 17-25:
86 |        (fun p -> Subshell (g_program p)) ;
                      ^^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Subshell does not belong to type Morsmall.AST.word_component
Hint: Did you mean WSubshell?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 85, "character": 17}, "end": {"line": 85, "character": 25}}, "message": "86 |        (fun p -> Subshell (g_program p)) ;\n                      ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Subshell does not belong to type Morsmall.AST.word_component\nHint: Did you mean WSubshell?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Sending response {"id": 98, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 99, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":21},"end":{"line":83,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":83,"character":20},"end":{"line":83,"character":29}},"message":"84 |        1, (fun _ -> wVariable (\"x\", NoAttribute)) ;\n                         ^^^^^^^^^\nError: Unbound value wVariable","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 100, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":84,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 101, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":5},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> Subshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":5}}}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 32270
Sending response {"id": 102, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 86, characters 17-25:
86 |        (fun p -> Subshell (g_program p)) ;
                      ^^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Subshell does not belong to type Morsmall.AST.word_component
Hint: Did you mean WSubshell?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 85, "character": 17}, "end": {"line": 85, "character": 25}}, "message": "86 |        (fun p -> Subshell (g_program p)) ;\n                      ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Subshell does not belong to type Morsmall.AST.word_component\nHint: Did you mean WSubshell?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting global Morsmall
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting for 87 in word_component
[ref] Yes!! got it
Sending response {"id": 103, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 29}}, "contents": {"kind": "markdown", "value": "```\nMorsmall.AST.word_component\n```\n\n```\ntype word_component = \n  | WTildePrefix(string)\n  | WLiteral(string)\n  | WDoubleQuoted(word)\n  | WVariable(name, attribute)\n  | WSubshell(program)\n  | WGlobAll\n  | WGlobAny\n  | WBracketExpression(Morbig.CST.bracket_expression)\n\n```\n\n```\nWVariable(name, attribute)\n```\n\n<root>/tests/../src/AST.ml"}}}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":21},"end":{"line":83,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Sending response {"id": 104, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":83,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.00715255737305ms
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting global Morsmall
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting for 87 in word_component
[ref] Yes!! got it
Sending response {"id": 105, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 83, "character": 20}, "end": {"line": 83, "character": 29}}, "contents": {"kind": "markdown", "value": "```\nMorsmall.AST.word_component\n```\n\n```\ntype word_component = \n  | WTildePrefix(string)\n  | WLiteral(string)\n  | WDoubleQuoted(word)\n  | WVariable(name, attribute)\n  | WSubshell(program)\n  | WGlobAll\n  | WGlobAny\n  | WBracketExpression(Morbig.CST.bracket_expression)\n\n```\n\n```\nWVariable(name, attribute)\n```\n\n<root>/tests/../src/AST.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":85,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Sending response {"id": 106, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":25}},"message":"86 |        (fun p -> Subshell (g_program p)) ;\n                      ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Subshell does not belong to type Morsmall.AST.word_component\nHint: Did you mean WSubshell?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 107, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":83,"character":21},"end":{"line":83,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0178813934326ms
Sending response {"id": 108, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":85,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0238418579102ms
Sending response {"id": 109, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":25}},"message":"86 |        (fun p -> Subshell (g_program p)) ;\n                      ^^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Subshell does not belong to type Morsmall.AST.word_component\nHint: Did you mean WSubshell?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.032901763916ms
Sending response {"id": 110, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":6},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 32759
Sending response {"id": 111, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":85,"character":26},"end":{"line":85,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Sending response {"id": 112, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 113, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 87, characters 20-27:
87 |        1, (fun _ -> GlobAll) ;
                         ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor GlobAll does not belong to type Morsmall.AST.word_component
Hint: Did you mean WGlobAll?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 86, "character": 20}, "end": {"line": 86, "character": 27}}, "message": "87 |        1, (fun _ -> GlobAll) ;\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAll does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAll?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":85,"character":26},"end":{"line":85,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0200271606445ms
Sending response {"id": 114, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":6},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> GlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":6}}}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":86,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0169277191162ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 32759
Sending response {"id": 115, "jsonrpc": "2.0", "result": null}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 87, characters 20-27:
87 |        1, (fun _ -> GlobAll) ;
                         ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor GlobAll does not belong to type Morsmall.AST.word_component
Hint: Did you mean WGlobAll?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 86, "character": 20}, "end": {"line": 86, "character": 27}}, "message": "87 |        1, (fun _ -> GlobAll) ;\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAll does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAll?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.06103515625ms
Sending response {"id": 116, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":87,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00810623168945ms
Sending response {"id": 117, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":86,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Sending response {"id": 118, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"message":"87 |        1, (fun _ -> GlobAll) ;\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAll does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAll?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 119, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":86,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0190734863281ms
Sending response {"id": 120, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":85,"character":26},"end":{"line":85,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0600814819336ms
Sending response {"id": 121, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"message":"87 |        1, (fun _ -> GlobAll) ;\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAll does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAll?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0360012054443ms
Sending response {"id": 122, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":86,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0689029693604ms
Sending response {"id": 123, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":27}},"message":"87 |        1, (fun _ -> GlobAll) ;\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAll does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAll?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0269412994385ms
Sending response {"id": 124, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":7},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 33059
Sending response {"id": 125, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":28},"end":{"line":86,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 126, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Sending response {"id": 127, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 88, characters 20-27:
88 |        1, (fun _ -> GlobAny) |]
                         ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor GlobAny does not belong to type Morsmall.AST.word_component
Hint: Did you mean WGlobAny?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 87, "character": 20}, "end": {"line": 87, "character": 27}}, "message": "88 |        1, (fun _ -> GlobAny) |]\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAny does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAny?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":28},"end":{"line":86,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 128, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":7},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> GlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":7}}}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0300407409668ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 33059
Sending response {"id": 129, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 88, characters 20-27:
88 |        1, (fun _ -> GlobAny) |]
                         ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor GlobAny does not belong to type Morsmall.AST.word_component
Hint: Did you mean WGlobAny?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 87, "character": 20}, "end": {"line": 87, "character": 27}}, "message": "88 |        1, (fun _ -> GlobAny) |]\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAny does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAny?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":86,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting global Morsmall
FINDING docs for module IntfAndImpl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli, /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmt, /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall.cmti src /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt, nil)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__.cmt src 
FINDING docs for module Impl(/Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt, /Users/mandalarian/Github/morsmall/tests/../src/AST.ml)
FINDING /Users/mandalarian/Github/morsmall/tests/../_build/default/src/.morsmall.objs/byte/morsmall__AST.cmt src /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
[ref] Getting for 87 in word_component
[ref] Yes!! got it
Sending response {"id": 130, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 86, "character": 20}, "end": {"line": 86, "character": 28}}, "contents": {"kind": "markdown", "value": "```\nMorsmall.AST.word_component\n```\n\n```\ntype word_component = \n  | WTildePrefix(string)\n  | WLiteral(string)\n  | WDoubleQuoted(word)\n  | WVariable(name, attribute)\n  | WSubshell(program)\n  | WGlobAll\n  | WGlobAny\n  | WBracketExpression(Morbig.CST.bracket_expression)\n\n```\n\n```\nWGlobAll()\n```\n\n<root>/tests/../src/AST.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":87,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.00476837158203ms
Sending response {"id": 131, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"message":"88 |        1, (fun _ -> GlobAny) |]\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAny does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAny?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0181198120117ms
Sending response {"id": 132, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":87,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.0121593475342ms
Sending response {"id": 133, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":86,"character":28},"end":{"line":86,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0240802764893ms
Sending response {"id": 134, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"message":"88 |        1, (fun _ -> GlobAny) |]\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAny does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAny?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 135, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":87,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0250339508057ms
Sending response {"id": 136, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":87,"character":20},"end":{"line":87,"character":27}},"message":"88 |        1, (fun _ -> GlobAny) |]\n                         ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor GlobAny does not belong to type Morsmall.AST.word_component\nHint: Did you mean WGlobAny?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0200271606445ms
Sending response {"id": 137, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":8},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 43481
Sending response {"id": 138, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":28},"end":{"line":87,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Sending response {"id": 139, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Sending response {"id": 140, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 137, characters 28-45:
137 |          1, (fun p -> Async (g_command (d p))) ;
                                  ^^^^^^^^^^^^^^^^^
Error: This expression has type command
       but an expression was expected of type command' = command located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 136, "character": 28}, "end": {"line": 136, "character": 45}}, "message": "137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":28},"end":{"line":87,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 141, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":8},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":8}}}
Read message 
{"jsonrpc":"2.0","id":142,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 43481
Sending response {"id": 142, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 137, characters 28-45:
137 |          1, (fun p -> Async (g_command (d p))) ;
                                  ^^^^^^^^^^^^^^^^^
Error: This expression has type command
       but an expression was expected of type command' = command located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 136, "character": 28}, "end": {"line": 136, "character": 45}}, "message": "137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":87,"character":28},"end":{"line":87,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 143, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":144,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
[ref] Trying for declared Value 1309 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 144, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 136, "character": 40}, "end": {"line": 136, "character": 41}}, "contents": {"kind": "markdown", "value": "```\nparameters => parameters\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 145, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Sending response {"id": 146, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Sending response {"id": 147, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":148,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.0121593475342ms
[ref] Trying for declared Value 1329 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 148, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.command\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 149, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
[ref] Trying for declared Value 1329 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 150, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.command\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":151,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
[ref] Trying for declared Value 1329 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 151, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.command\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0250339508057ms
Sending response {"id": 152, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0250339508057ms
Sending response {"id": 153, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":154,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.0340938568115ms
[ref] Trying for declared Value 1329 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 154, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.command\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 155, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":156,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":136,"character":38}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
[ref] Got a loc for pos
Sending response {"id": 156, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 130, "character": 4}, "end": {"line": 130, "character": 13}}, "kind": 2}, {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "kind": 2}, {"range": {"start": {"line": 136, "character": 29}, "end": {"line": 136, "character": 38}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":38},"end":{"line":136,"character":38}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0920295715332ms
Sending response {"id": 157, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":9},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":158,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 55525
Sending response {"id": 158, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":39},"end":{"line":136,"character":39}},"context":{"diagnostics":[{"range":{"start":{"line":136,"character":28},"end":{"line":136,"character":45}},"message":"137 |          1, (fun p -> Async (g_command (d p))) ;\n                                  ^^^^^^^^^^^^^^^^^\nError: This expression has type command\n       but an expression was expected of type command' = command located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 159, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 174, characters 6-88:
174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error: This expression has type word list option
       but an expression was expected of type word' list option
       Type word = word_component list is not compatible with type
         word' = word located 
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 173, "character": 6}, "end": {"line": 173, "character": 88}}, "message": "174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":160,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0109672546387ms
Sending response {"id": 160, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":161,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":39},"end":{"line":136,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 161, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":9},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":9}}}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 55525
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 174, characters 6-88:
174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error: This expression has type word list option
       but an expression was expected of type word' list option
       Type word = word_component list is not compatible with type
         word' = word located 
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 173, "character": 6}, "end": {"line": 173, "character": 88}}, "message": "174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":162,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 162, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":163,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":137,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Sending response {"id": 163, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":163}}
Read message 
{"jsonrpc":"2.0","id":164,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":138,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
[ref] Trying for declared Value 1330 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 164, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 138, "character": 27}, "end": {"line": 138, "character": 37}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.command'\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":136,"character":39},"end":{"line":136,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 165, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":166,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
[ref] Trying for declared Value 1314 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 166, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 173, "character": 36}, "end": {"line": 173, "character": 42}}, "contents": {"kind": "markdown", "value": "```\n(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Sending response {"id": 167, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":168,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Sending response {"id": 168, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":169,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
[ref] Trying for declared Value 1311 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 169, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 173, "character": 6}, "end": {"line": 173, "character": 14}}, "contents": {"kind": "markdown", "value": "```\n(~prob: float, unit => 'a) => option('a)\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 170, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0219345092773ms
Sending response {"id": 171, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0309944152832ms
Sending response {"id": 172, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":173,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":79}}}
[server] Got a method textDocument/hover
[server] processing took 0.0178813934326ms
[ref] Trying for declared Value 1319 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 173, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 173, "character": 74}, "end": {"line": 173, "character": 80}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.word\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":174,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":80}}}
[server] Got a method textDocument/hover
[server] processing took 0.0209808349609ms
[ref] Trying for declared Value 1319 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 174, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 173, "character": 74}, "end": {"line": 173, "character": 80}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.word\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":175,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":173,"character":80}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0309944152832ms
[ref] Got a loc for pos
Sending response {"id": 175, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 10}}, "kind": 2}, {"range": {"start": {"line": 95, "character": 15}, "end": {"line": 95, "character": 21}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 55}, "end": {"line": 101, "character": 61}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 2}, "end": {"line": 101, "character": 8}}, "kind": 2}, {"range": {"start": {"line": 108, "character": 3}, "end": {"line": 108, "character": 9}}, "kind": 2}, {"range": {"start": {"line": 173, "character": 74}, "end": {"line": 173, "character": 80}}, "kind": 2}, {"range": {"start": {"line": 173, "character": 74}, "end": {"line": 173, "character": 80}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":80},"end":{"line":173,"character":80}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0221729278564ms
Sending response {"id": 176, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":10},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":177,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0190734863281ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 56250
Sending response {"id": 177, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":81},"end":{"line":173,"character":81}},"context":{"diagnostics":[{"range":{"start":{"line":173,"character":6},"end":{"line":173,"character":88}},"message":"174 |       g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word (d p))),\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nError: This expression has type word list option\n       but an expression was expected of type word' list option\n       Type word = word_component list is not compatible with type\n         word' = word located ","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 178, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 180, characters 6-18:
180 |       g_word (d p),
            ^^^^^^^^^^^^
Error: This expression has type word = word_component list
       but an expression was expected of type word' = word located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 179, "character": 6}, "end": {"line": 179, "character": 18}}, "message": "180 |       g_word (d p),\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0181198120117ms
Sending response {"id": 179, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":81},"end":{"line":173,"character":81}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 180, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":10},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":10}}}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 56250
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 180, characters 6-18:
180 |       g_word (d p),
            ^^^^^^^^^^^^
Error: This expression has type word = word_component list
       but an expression was expected of type word' = word located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 179, "character": 6}, "end": {"line": 179, "character": 18}}, "message": "180 |       g_word (d p),\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":181,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0128746032715ms
Sending response {"id": 181, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":173,"character":81},"end":{"line":173,"character":81}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0679492950439ms
Sending response {"id": 182, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":183,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":179,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
[ref] Got a loc for pos
Sending response {"id": 183, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 10}}, "kind": 2}, {"range": {"start": {"line": 95, "character": 15}, "end": {"line": 95, "character": 21}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 55}, "end": {"line": 101, "character": 61}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 2}, "end": {"line": 101, "character": 8}}, "kind": 2}, {"range": {"start": {"line": 108, "character": 3}, "end": {"line": 108, "character": 9}}, "kind": 2}, {"range": {"start": {"line": 179, "character": 6}, "end": {"line": 179, "character": 12}}, "kind": 2}, {"range": {"start": {"line": 179, "character": 6}, "end": {"line": 179, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":179,"character":12},"end":{"line":179,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":179,"character":6},"end":{"line":179,"character":18}},"message":"180 |       g_word (d p),\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Sending response {"id": 184, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":11},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":185,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 64169
Sending response {"id": 185, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":179,"character":13},"end":{"line":179,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":179,"character":6},"end":{"line":179,"character":18}},"message":"180 |       g_word (d p),\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Sending response {"id": 186, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":187,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.032901763916ms
Sending response {"id": 187, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 223, characters 6-18:
223 |       g_word (d p)
            ^^^^^^^^^^^^
Error: This expression has type word = word_component list
       but an expression was expected of type word' = word located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 18}}, "message": "223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":179,"character":13},"end":{"line":179,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Sending response {"id": 188, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":11},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":11}}}
Read message 
{"jsonrpc":"2.0","id":189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":183,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.0171661376953ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 64169
[ref] Trying for declared Value 1334 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 189, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 15}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.case_item\n```\n\n<root>/tests/generator.ml"}}}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 223, characters 6-18:
223 |       g_word (d p)
            ^^^^^^^^^^^^
Error: This expression has type word = word_component list
       but an expression was expected of type word' = word located
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 18}}, "message": "223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":189}}
Read message 
{"jsonrpc":"2.0","id":190,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0150203704834ms
Sending response {"id": 190, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":179,"character":13},"end":{"line":179,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Sending response {"id": 191, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":222,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.00691413879395ms
[ref] Trying for declared Value 1319 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 192, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.word\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"message":"223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Sending response {"id": 193, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"message":"223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0269412994385ms
Sending response {"id": 194, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":195,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":222,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.0221729278564ms
[ref] Trying for declared Value 1319 in file file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 195, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 12}}, "contents": {"kind": "markdown", "value": "```\nparameters => Morsmall.AST.word\n```\n\n<root>/tests/generator.ml"}}}
Read message 
{"jsonrpc":"2.0","id":196,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":222,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0112056732178ms
[ref] Got a loc for pos
Sending response {"id": 196, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 10}}, "kind": 2}, {"range": {"start": {"line": 95, "character": 15}, "end": {"line": 95, "character": 21}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 55}, "end": {"line": 101, "character": 61}}, "kind": 2}, {"range": {"start": {"line": 101, "character": 2}, "end": {"line": 101, "character": 8}}, "kind": 2}, {"range": {"start": {"line": 108, "character": 3}, "end": {"line": 108, "character": 9}}, "kind": 2}, {"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 12}}, "kind": 2}, {"range": {"start": {"line": 222, "character": 6}, "end": {"line": 222, "character": 12}}, "kind": 2}]}
Read message 
{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":12},"end":{"line":222,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"message":"223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 197, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":12},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word' (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":198,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 66012
Sending response {"id": 198, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":13},"end":{"line":222,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":222,"character":6},"end":{"line":222,"character":18}},"message":"223 |       g_word (d p)\n            ^^^^^^^^^^^^\nError: This expression has type word = word_component list\n       but an expression was expected of type word' = word located","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 199, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 230, characters 39-46:
230 |       dummily_located (g_word (d p) @ [Literal "\n"])
                                             ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Literal does not belong to type Morsmall.AST.word_component
Hint: Did you mean WLiteral?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 229, "character": 39}, "end": {"line": 229, "character": 46}}, "message": "230 |       dummily_located (g_word (d p) @ [Literal \"\\n\"])\n                                             ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Literal does not belong to type Morsmall.AST.word_component\nHint: Did you mean WLiteral?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0128746032715ms
Sending response {"id": 200, "jsonrpc": "2.0", "result": [{"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":13},"end":{"line":222,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Sending response {"id": 201, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":12},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word' (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [Literal \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":12}}}
Read message 
{"jsonrpc":"2.0","id":202,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00882148742676ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
Now loading /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.cmt
Size 66012
Sending response {"id": 202, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "Unused open", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "Unused open", "command": ""}}]}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
type error here File "/Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast", line 230, characters 39-46:
230 |       dummily_located (g_word (d p) @ [Literal "\n"])
                                             ^^^^^^^
Error: This variant expression is expected to have type word_component
       The constructor Literal does not belong to type Morsmall.AST.word_component
Hint: Did you mean WLiteral?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": [{"range": {"start": {"line": 229, "character": 39}, "end": {"line": 229, "character": 46}}, "message": "230 |       dummily_located (g_word (d p) @ [Literal \"\\n\"])\n                                             ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Literal does not belong to type Morsmall.AST.word_component\nHint: Did you mean WLiteral?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":222,"character":13},"end":{"line":222,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Sending response {"id": 203, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":204,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":229,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Sending response {"id": 204, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":229,"character":39},"end":{"line":229,"character":46}},"context":{"diagnostics":[{"range":{"start":{"line":229,"character":39},"end":{"line":229,"character":46}},"message":"230 |       dummily_located (g_word (d p) @ [Literal \"\\n\"])\n                                             ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Literal does not belong to type Morsmall.AST.word_component\nHint: Did you mean WLiteral?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Sending response {"id": 205, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":206,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"position":{"line":229,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0159740447998ms
Sending response {"id": 206, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":229,"character":39},"end":{"line":229,"character":46}},"context":{"diagnostics":[{"range":{"start":{"line":229,"character":39},"end":{"line":229,"character":46}},"message":"230 |       dummily_located (g_word (d p) @ [Literal \"\\n\"])\n                                             ^^^^^^^\nError: This variant expression is expected to have type word_component\n       The constructor Literal does not belong to type Morsmall.AST.word_component\nHint: Did you mean WLiteral?","severity":1}]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0190734863281ms
Sending response {"id": 207, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":13},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word' (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [WLiteral \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","id":208,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 208, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 225, "character": 4}, "end": {"line": 225, "character": 19}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 217, "character": 4}, "end": {"line": 217, "character": 17}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 211, "character": 4}, "end": {"line": 211, "character": 25}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 205, "character": 4}, "end": {"line": 205, "character": 18}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 199, "character": 4}, "end": {"line": 199, "character": 18}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 192, "character": 4}, "end": {"line": 192, "character": 15}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 189, "character": 4}, "end": {"line": 189, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 15}}, "command": {"title": "parameters => Morsmall.AST.case_item", "command": ""}}, {"range": {"start": {"line": 177, "character": 4}, "end": {"line": 177, "character": 17}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 170, "character": 4}, "end": {"line": 170, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 156, "character": 4}, "end": {"line": 156, "character": 20}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 153, "character": 4}, "end": {"line": 153, "character": 14}}, "command": {"title": "parameters => Morsmall.AST.command'", "command": ""}}, {"range": {"start": {"line": 130, "character": 4}, "end": {"line": 130, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 126, "character": 4}, "end": {"line": 126, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.program", "command": ""}}, {"range": {"start": {"line": 116, "character": 4}, "end": {"line": 116, "character": 22}}, "command": {"title": "parameters => Morsmall.AST.kind", "command": ""}}, {"range": {"start": {"line": 113, "character": 4}, "end": {"line": 113, "character": 11}}, "command": {"title": "parameters => Morsmall.AST.descr", "command": ""}}, {"range": {"start": {"line": 110, "character": 4}, "end": {"line": 110, "character": 17}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.assignment\n)", "command": ""}}, {"range": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.assignment", "command": ""}}, {"range": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 14}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.pattern\n)", "command": ""}}, {"range": {"start": {"line": 100, "character": 4}, "end": {"line": 100, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.pattern", "command": ""}}, {"range": {"start": {"line": 97, "character": 4}, "end": {"line": 97, "character": 10}}, "command": {"title": "parameters => Morsmall.AST.name", "command": ""}}, {"range": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 11}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.word\n)", "command": ""}}, {"range": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 10}}, "command": {"title": "parameters => Morsmall.AST.word", "command": ""}}, {"range": {"start": {"line": 80, "character": 8}, "end": {"line": 80, "character": 24}}, "command": {"title": "parameters => Morsmall.AST.word_component", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "9 uses. values: {dummily_located} types: {lexing_position [pos_lnum, pos_fname, pos_cnum, pos_bol], position [start_p, end_p], located [value, position]}", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "32 uses. types: {word_component [WVariable, WSubshell, WLiteral and 2 more], pattern [::], kind [OutputDuplicate, OutputClobber, OutputAppend and 4 more], command [While, Until, Subshell and 13 more], attribute [NoAttribute], word [::]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":209,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":229,"character":47},"end":{"line":229,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 209, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00810623168945ms
Sending response {"id": 210, "jsonrpc": "2.0", "result": [{"name": "dummy_lexing_position", "kind": 13, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 29, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "dummy_locate", "kind": 12, "location": {"range": {"start": {"line": 31, "character": 0}, "end": {"line": 34, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "p_array", "kind": 26, "location": {"range": {"start": {"line": 36, "character": 0}, "end": {"line": 36, "character": 34}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "choose", "kind": 12, "location": {"range": {"start": {"line": 38, "character": 0}, "end": {"line": 49, "character": 10}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "parameters", "kind": 11, "location": {"range": {"start": {"line": 53, "character": 0}, "end": {"line": 54, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "default_parameters", "kind": 13, "location": {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 57, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "d", "kind": 12, "location": {"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_option", "kind": 12, "location": {"range": {"start": {"line": 66, "character": 0}, "end": {"line": 70, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_list", "kind": 12, "location": {"range": {"start": {"line": 72, "character": 0}, "end": {"line": 76, "character": 6}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_here_document", "kind": 12, "location": {"range": {"start": {"line": 225, "character": 0}, "end": {"line": 230, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_redirection", "kind": 12, "location": {"range": {"start": {"line": 217, "character": 0}, "end": {"line": 223, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_function_definition", "kind": 12, "location": {"range": {"start": {"line": 211, "character": 0}, "end": {"line": 215, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_until_clause", "kind": 12, "location": {"range": {"start": {"line": 205, "character": 0}, "end": {"line": 209, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_while_clause", "kind": 12, "location": {"range": {"start": {"line": 199, "character": 0}, "end": {"line": 203, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_if_clause", "kind": 12, "location": {"range": {"start": {"line": 192, "character": 0}, "end": {"line": 197, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_case_item'", "kind": 12, "location": {"range": {"start": {"line": 189, "character": 0}, "end": {"line": 190, "character": 28}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_case_item", "kind": 12, "location": {"range": {"start": {"line": 183, "character": 0}, "end": {"line": 187, "character": 3}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_case_clause", "kind": 12, "location": {"range": {"start": {"line": 177, "character": 0}, "end": {"line": 181, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_for_clause", "kind": 12, "location": {"range": {"start": {"line": 170, "character": 0}, "end": {"line": 175, "character": 5}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_simple_command", "kind": 12, "location": {"range": {"start": {"line": 156, "character": 0}, "end": {"line": 168, "character": 31}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_command'", "kind": 12, "location": {"range": {"start": {"line": 153, "character": 0}, "end": {"line": 154, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_command", "kind": 12, "location": {"range": {"start": {"line": 130, "character": 0}, "end": {"line": 151, "character": 11}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_program", "kind": 12, "location": {"range": {"start": {"line": 126, "character": 0}, "end": {"line": 128, "character": 32}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_redirection_kind", "kind": 12, "location": {"range": {"start": {"line": 116, "character": 0}, "end": {"line": 124, "character": 24}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_descr", "kind": 12, "location": {"range": {"start": {"line": 113, "character": 0}, "end": {"line": 114, "character": 15}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_assignment'", "kind": 12, "location": {"range": {"start": {"line": 110, "character": 0}, "end": {"line": 111, "character": 29}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_assignment", "kind": 12, "location": {"range": {"start": {"line": 106, "character": 0}, "end": {"line": 108, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_pattern'", "kind": 12, "location": {"range": {"start": {"line": 103, "character": 0}, "end": {"line": 104, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_pattern", "kind": 12, "location": {"range": {"start": {"line": 100, "character": 0}, "end": {"line": 101, "character": 68}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_name", "kind": 12, "location": {"range": {"start": {"line": 97, "character": 0}, "end": {"line": 98, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_word'", "kind": 12, "location": {"range": {"start": {"line": 94, "character": 0}, "end": {"line": 95, "character": 23}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_word", "kind": 12, "location": {"range": {"start": {"line": 90, "character": 0}, "end": {"line": 92, "character": 65}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}, {"name": "g_word_component", "kind": 12, "location": {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 88, "character": 9}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast"}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":13},"contentChanges":[{"text":"(******************************************************************************)\n(*                                                                            *)\n(*                                  Morsmall                                  *)\n(*                       A concise AST for POSIX shell                        *)\n(*                                                                            *)\n(*   Copyright (C) 2017  Yann RÃ©gis-Gianas, Ralf Treinen, Nicolas Jeannerod   *)\n(*                                                                            *)\n(*   This program is free software: you can redistribute it and/or modify     *)\n(*   it under the terms of the GNU General Public License as published by     *)\n(*   the Free Software Foundation, either version 3 of the License, or        *)\n(*   (at your option) any later version.                                      *)\n(*                                                                            *)\n(*   This program is distributed in the hope that it will be useful,          *)\n(*   but WITHOUT ANY WARRANTY; without even the implied warranty of           *)\n(*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            *)\n(*   GNU General Public License for more details.                             *)\n(*                                                                            *)\n(*   You should have received a copy of the GNU General Public License        *)\n(*   along with this program.  If not, see <http://www.gnu.org/licenses/>.    *)\n(*                                                                            *)\n(******************************************************************************)\n\nopen Morsmall.AST\nopen Morsmall.Location\n\nlet dummy_lexing_position =\n  { pos_fname = \"dummy\" ;\n    pos_lnum = 0 ;\n    pos_bol = 0 ;\n    pos_cnum = 0 }\n\nlet dummy_locate f x =\n  { value = f x ;\n    position = { start_p = dummy_lexing_position ;\n                 end_p = dummy_lexing_position } }\n\ntype 'a p_array = (int * 'a) array\n\nlet choose (a : 'a p_array) : 'a =\n  let p_max = Array.fold_left (fun p_tot (p,_) -> p_tot+p) 0 a in\n  let n = Random.int p_max in\n  let p_tot = ref 0 in\n  let v_found = ref (snd (a.(0))) in\n  for i = 0 to Array.length a - 1 do\n    let (p, v) = a.(i) in\n    if !p_tot <= n && n < !p_tot + p then\n      v_found := v;\n    p_tot := !p_tot + p\n  done;\n  !v_found\n\n(* Parameters *)\n\ntype parameters =\n  { depth : int }\n\nlet default_parameters =\n  { depth = 10 }\n\nlet d p = { depth = p.depth - 1 } (* { p with depth = p.depth - 1 } *)\n\n(* Generator helper functions *)\n\n(* let g_bool ~prob =\n *   Random.float 1. < prob *)\n\nlet g_option ~prob inhabitant =\n  if Random.float 1. < prob then\n    Some (inhabitant ())\n  else\n    None\n\nlet rec g_list ~prob ~limit inhabitant =\n  if limit > 0 && Random.float 1. < prob then\n    (inhabitant ()) :: g_list ~prob ~limit:(limit - 1) inhabitant\n  else\n    []\n\n(* Our generators *)\n\nlet rec g_word_component p : word_component =\n  choose\n    [| 1, (fun _ -> WLiteral \"foo\") ;\n       1, (fun _ -> WVariable (\"x\", NoAttribute)) ;\n       (if p.depth <= 0 then 0 else 1),\n       (fun p -> WSubshell (g_program p)) ;\n       1, (fun _ -> WGlobAll) ;\n       1, (fun _ -> WGlobAny) |]\n    (d p)\n\nand g_word p =\n  g_word_component (d p)\n  :: g_list ~prob:0.9 ~limit:4 (fun () -> g_word_component (d p))\n\nand g_word' p =\n  dummy_locate g_word p\n\nand g_name _p =\n  \"blah\" (*FIXME*)\n\nand g_pattern p =\n  g_word (d p) :: g_list ~prob:0.8 ~limit:4 (fun () -> g_word (d p))\n\nand g_pattern' p =\n  dummy_locate g_pattern p\n\nand g_assignment p =\n  (choose [|1,\"x\";2,\"y\";3,\"z\";4,\"choucroute\"|],\n   g_word (d p))\n\nand g_assignment' p =\n  dummy_locate g_assignment p\n\nand g_descr _p =\n  Random.int 10\n\nand g_redirection_kind _p =\n  choose\n    [| 1, Output ;\n       1, OutputDuplicate ;\n       1, OutputAppend ;\n       1, OutputClobber ;\n       1, Input ;\n       1, InputDuplicate ;\n       1, InputOutput |]\n\nand g_program p =\n  g_list ~prob:0.5 ~limit:3\n    (fun () -> g_command' (d p))\n\nand g_command p =\n  if p.depth <= 0 then\n    g_simple_command (d p)\n  else\n    choose\n      [| 1, g_simple_command ;\n         1, (fun p -> Async (g_command' (d p))) ;\n         1, (fun p -> Seq (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> And (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Or (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Not (g_command' (d p))) ;\n         1, (fun p -> Pipe (g_command' (d p), g_command' (d p))) ;\n         1, (fun p -> Subshell (g_command' (d p))) ;\n         1, g_for_clause ;\n         1, g_case_clause ;\n         1, g_if_clause ;\n         1, g_while_clause ;\n         1, g_until_clause ;\n         1, g_function_definition ;\n         1, g_redirection ;\n         1, g_here_document |]\n      (d p)\n\nand g_command' p =\n  dummy_locate g_command p\n\nand g_simple_command p =\n  let assignments =\n    g_list ~prob:0.5 ~limit:5\n      (fun () -> g_assignment' (d p))\n  in\n  let words =\n    g_list ~prob:0.7 ~limit:10\n      (fun () -> g_word' (d p))\n  in\n  if assignments = [] && words = [] then\n    g_simple_command p\n  else\n    Simple (assignments, words)\n\nand g_for_clause p =\n  For (\n      \"x\",\n      g_option ~prob:0.8 (fun () -> g_list ~prob:0.8 ~limit:10 (fun () -> g_word' (d p))),\n      g_command' (d p)\n    )\n\nand g_case_clause p =\n  Case (\n      g_word' (d p),\n      g_list ~prob:0.7 ~limit:5 (fun () -> g_case_item' (d p) )\n    )\n\nand g_case_item p =\n  (\n    g_pattern' (d p),\n    g_option ~prob:0.9 (fun () -> g_command' (d p))\n  )\n\nand g_case_item' p =\n  dummy_locate g_case_item p\n\nand g_if_clause p =\n  If (\n      g_command' (d p),\n      g_command' (d p),\n      g_option ~prob:0.6 (fun () -> g_command' (d p))\n    )\n\nand g_while_clause p =\n  While (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_until_clause p =\n  Until (\n      g_command' (d p),\n      g_command' (d p)\n    )\n\nand g_function_definition p =\n  Function (\n      g_name (d p),\n      g_command' (d p)\n    )\n\nand g_redirection p =\n  Redirection (\n      g_command' (d p),\n      g_descr (d p),\n      g_redirection_kind (d p),\n      g_word' (d p)\n    )\n\nand g_here_document p =\n  HereDocument (\n      g_command' (d p),\n      g_descr (d p),\n      dummily_located (g_word (d p) @ [WLiteral \"\\n\"])\n    )\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml","version":13}}}
Read message 
{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"},"range":{"start":{"line":229,"character":47},"end":{"line":229,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Generator.ast with pwd /Users/mandalarian/Github/morsmall/tests
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending response {"id": 211, "jsonrpc": "2.0", "result": null}
>> Build system running: opam exec -- dune build @install --root .
>>> stdout

>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/generator.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/generator.ml", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","id":212,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/generator.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00786781311035ms
Sending response {"id": 212, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 25}}, "command": {"title": "Morsmall.Location.lexing_position", "command": ""}}, {"range": {"start": {"line": 31, "character": 4}, "end": {"line": 31, "character": 16}}, "command": {"title": "(\n  'b => 'a,\n  'b\n) => Morsmall.Location.located('a)", "command": ""}}, {"range": {"start": {"line": 38, "character": 4}, "end": {"line": 38, "character": 10}}, "command": {"title": "p_array('a) => 'a", "command": ""}}, {"range": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 22}}, "command": {"title": "parameters", "command": ""}}, {"range": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 5}}, "command": {"title": "parameters => parameters", "command": ""}}, {"range": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 12}}, "command": {"title": "(~prob: float, unit => 'a) => option('a)", "command": ""}}, {"range": {"start": {"line": 72, "character": 8}, "end": {"line": 72, "character": 14}}, "command": {"title": "(\n  ~prob: float,\n  ~limit: int,\n  unit => 'a\n) => list('a)", "command": ""}}, {"range": {"start": {"line": 225, "character": 4}, "end": {"line": 225, "character": 19}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 217, "character": 4}, "end": {"line": 217, "character": 17}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 211, "character": 4}, "end": {"line": 211, "character": 25}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 205, "character": 4}, "end": {"line": 205, "character": 18}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 199, "character": 4}, "end": {"line": 199, "character": 18}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 192, "character": 4}, "end": {"line": 192, "character": 15}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 189, "character": 4}, "end": {"line": 189, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 15}}, "command": {"title": "parameters => Morsmall.AST.case_item", "command": ""}}, {"range": {"start": {"line": 177, "character": 4}, "end": {"line": 177, "character": 17}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 170, "character": 4}, "end": {"line": 170, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 156, "character": 4}, "end": {"line": 156, "character": 20}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 153, "character": 4}, "end": {"line": 153, "character": 14}}, "command": {"title": "parameters => Morsmall.AST.command'", "command": ""}}, {"range": {"start": {"line": 130, "character": 4}, "end": {"line": 130, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.command", "command": ""}}, {"range": {"start": {"line": 126, "character": 4}, "end": {"line": 126, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.program", "command": ""}}, {"range": {"start": {"line": 116, "character": 4}, "end": {"line": 116, "character": 22}}, "command": {"title": "parameters => Morsmall.AST.kind", "command": ""}}, {"range": {"start": {"line": 113, "character": 4}, "end": {"line": 113, "character": 11}}, "command": {"title": "parameters => Morsmall.AST.descr", "command": ""}}, {"range": {"start": {"line": 110, "character": 4}, "end": {"line": 110, "character": 17}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.assignment\n)", "command": ""}}, {"range": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 16}}, "command": {"title": "parameters => Morsmall.AST.assignment", "command": ""}}, {"range": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 14}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.pattern\n)", "command": ""}}, {"range": {"start": {"line": 100, "character": 4}, "end": {"line": 100, "character": 13}}, "command": {"title": "parameters => Morsmall.AST.pattern", "command": ""}}, {"range": {"start": {"line": 97, "character": 4}, "end": {"line": 97, "character": 10}}, "command": {"title": "parameters => Morsmall.AST.name", "command": ""}}, {"range": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 11}}, "command": {"title": "parameters => Morsmall.Location.located(\n  Morsmall.AST.word\n)", "command": ""}}, {"range": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 10}}, "command": {"title": "parameters => Morsmall.AST.word", "command": ""}}, {"range": {"start": {"line": 80, "character": 8}, "end": {"line": 80, "character": 24}}, "command": {"title": "parameters => Morsmall.AST.word_component", "command": ""}}, {"range": {"start": {"line": 23, "character": 5}, "end": {"line": 23, "character": 22}}, "command": {"title": "9 uses. values: {dummily_located} types: {lexing_position [pos_lnum, pos_fname, pos_cnum, pos_bol], position [start_p, end_p], located [value, position]}", "command": ""}}, {"range": {"start": {"line": 22, "character": 5}, "end": {"line": 22, "character": 17}}, "command": {"title": "32 uses. types: {word_component [WVariable, WSubshell, WLiteral and 2 more], pattern [::], kind [OutputDuplicate, OutputClobber, OutputAppend and 4 more], command [While, Until, Subshell and 13 more], attribute [NoAttribute], word [::]}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/run.ml","languageId":"ocaml","version":1,"text":"\nexception CouldntParse of Morsmall.AST.program\nexception ASTsDontMatch of Morsmall.AST.program * Morsmall.AST.program\n\nlet generator_parameters = Generator.default_parameters\n\nlet number_of_tests = 100\n\n(* *)\n\nlet run_one_test () =\n  (* Create a temporary file *)\n  let (filename, out_channel) = Filename.open_temp_file \"morsmall_test_\" \".sh\" in\n  let formatter = Format.formatter_of_out_channel out_channel in\n\n  (* Create a random script, put it in the file *)\n  let ast = Generator.(g_program generator_parameters) in\n  Morsmall.pp_print_safe formatter ast;\n\n  (* Close the file *)\n  Format.fprintf formatter \"@.\";\n  close_out out_channel;\n\n  try\n    (\n      (* Parse the file with Morbig and Morsmall *)\n      let ast' =\n        try\n          Morsmall.parse_file filename\n        with\n          Morsmall.SyntaxError _pos ->\n          raise (CouldntParse ast)\n      in\n\n      (* Compare *)\n      if not (Morsmall.AST.equal_program ast ast') then\n           raise (ASTsDontMatch (ast, ast'))\n    );\n\n    (* Clean the temporary file *)\n    Sys.remove filename\n  with\n  | _ as exn ->\n     Sys.remove filename;\n     raise exn\n\nlet () =\n  let errors = ref 0 in\n\n  for i = 1 to number_of_tests do\n    Format.printf \"Running test #%d...\\r@?\" i;\n    try\n      run_one_test ()\n    with\n    | _ as exn ->\n       (\n         (* Generate a report *)\n\n         let filename = \"morsmall_test_report_\"^(string_of_int i)^\".org\" in\n         let out_channel = open_out filename in\n         let formatter = Format.formatter_of_out_channel out_channel in\n         Format.fprintf formatter \"#+TITLE: Morsmall Test Engine -- Report on Test #%d\\n\\n\" i;\n         Format.fprintf formatter \"* The Error\\n\";\n         let ast =\n           (\n             match exn with\n             | CouldntParse ast ->\n                Format.fprintf formatter \"Morbig could not parse the file produced by Morsmall's printer.\\n\";\n                ast\n\n             | ASTsDontMatch (ast, _) ->\n                Format.fprintf formatter \"The parsed AST does not coincide with the generated one.\\n\";\n                ast\n                \n             | _ as exn -> raise exn\n           )\n         in\n         Format.fprintf formatter \"* Generated AST\\n%a\\n\" Morsmall.pp_print_debug ast;\n         Format.fprintf formatter \"* Generated Shell Script\\n%a\\n\" Morsmall.pp_print_safe ast;\n         (\n           match exn with\n           | ASTsDontMatch (_, ast') ->\n              (\n                Format.fprintf formatter\n                  \"* Parsed AST\\n%a\\n\"\n                  Morsmall.pp_print_debug ast';\n\n                try\n                  Format.fprintf formatter\n                    \"* Parsed Shell Script\\n%a\\n\"\n                    Morsmall.pp_print_safe ast'\n                with\n                  Assert_failure _ ->\n                  Format.fprintf formatter \"* Error while printing the parsed AST@.\";\n                  Printexc.print_backtrace out_channel\n              )\n           | _ -> ()\n         );\n         Format.fprintf formatter \"@?\";\n         close_out out_channel;\n\n         (* Complain *)\n         Format.eprintf \"Error in test #%d: check report in '%s'\\n\" i filename;\n         incr errors\n       )\n  done;\n\n  if !errors = 0 then\n    (\n      Format.printf \"Successfully ran %d tests.@.\" number_of_tests;\n      exit 0\n    )\n  else\n    (\n      Format.printf \"While running %d tests, got %d errors. See the reports for more details.@.\" number_of_tests !errors;\n      exit 1\n    )\n"}}}
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/topdirs.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unix.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/weak.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/morsmall.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytes.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/uchar.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/ephemeron.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/morsmall.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/pervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/spacetime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormat.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/digest.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_io.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/raw_spacetime_lib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/extPervasives.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/name.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/debug.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/AST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/list.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/scripts.ml
 > /Users/mandalarian/.opam/4.08.1/lib/visitors/runtime/VisitorsRuntime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unit.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lexing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson_biniou.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/option.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/unixLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/std_exit.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/string.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/utilities/testParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/assignment.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/errors.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionParser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bytesLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/array.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/sys.ml
 > /Users/mandalarian/Github/morsmall/tests/../src/safePrinter.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime/ppx_deriving_yojson_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arg.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/API.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/prelexerState.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/engine.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/parsing.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/hereDocument.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/oo.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/version.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/REBracketExpressionLexer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_share.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/gc.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/filename.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bool.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_util.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/keyword.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int32.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/token.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/listLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_dump.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/result/result.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/quoteRemoval.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stack.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/char.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_stream.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/lazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stringLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/jsonHelpers.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/patternMatchingRecognizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/float.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/aliases.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/marshal.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/complex.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/arrayLabels.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/ExtMenhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/obj.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalFormatBasics.mli
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretoken.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/dynlink.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/stdlib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/options.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int64.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/set.ml
 > /Users/mandalarian/.opam/4.08.1/lib/menhirLib/menhirLib.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/int.mli
 > /Users/mandalarian/Github/morsmall/tests/../src/CST_to_AST.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalLazy.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalOO.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/seq.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/parser.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/scanf.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/nativeint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/callback.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/moreLabels.mli
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_vint.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/camlinternalMod.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/printexc.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/random.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/recursiveParser.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/CSTHelpers.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/pretokenizer.ml
 > /Users/mandalarian/.opam/4.08.1/lib/yojson/yojson.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_outbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/nesting.mli
 > /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
 > /Users/mandalarian/Github/morsmall/tests/../src/location.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/map.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/bigarray.ml
 > /Users/mandalarian/.opam/4.08.1/lib/biniou/bi_inbuf.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/str.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/fun.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/hashtbl.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/buffer.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/queue.ml
 > /Users/mandalarian/.opam/4.08.1/lib/easy-format/easy_format.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime/ppx_deriving_runtime.ml
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/result.mli
 > /Users/mandalarian/.opam/4.08.1/lib/ocaml/genlex.mli
Reloading because you created a new file: /Users/mandalarian/Github/morsmall/tests/run.ml
Read message 
{"jsonrpc":"2.0","id":213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/run.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0100135803223ms
â¡ï¸ running compiler /Users/mandalarian/.opam/4.08.1/bin/ocamlopt.opt -c -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '../_build/default/tests/.run.eobjs/byte' -I '../_build/default/src/utilities/.morsmall_utilities.objs/byte' -I '../_build/default/src/.morsmall.objs/byte' -I '/Users/mandalarian/.opam/4.08.1/lib/yojson' -I '/Users/mandalarian/.opam/4.08.1/lib/visitors/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/result' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving_yojson/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ppx_deriving/runtime' -I '/Users/mandalarian/.opam/4.08.1/lib/ocaml' -I '/Users/mandalarian/.opam/4.08.1/lib/morbig' -I '/Users/mandalarian/.opam/4.08.1/lib/menhirLib' -I '/Users/mandalarian/.opam/4.08.1/lib/easy-format' -I '/Users/mandalarian/.opam/4.08.1/lib/biniou' -bin-annot -open Dune__exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w +A-42 -impl /Users/mandalarian/Github/morsmall/_build/.lsp/Run.ast with pwd /Users/mandalarian/Github/morsmall/tests
<< Replacing lastDefinitions for file:///Users/mandalarian/Github/morsmall/tests/run.ml
Sending response {"id": 213, "jsonrpc": "2.0", "result": [{"name": "generator_parameters", "kind": 13, "location": {"range": {"start": {"line": 4, "character": 0}, "end": {"line": 4, "character": 55}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Run.ast"}}, {"name": "number_of_tests", "kind": 13, "location": {"range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 25}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Run.ast"}}, {"name": "run_one_test", "kind": 12, "location": {"range": {"start": {"line": 10, "character": 0}, "end": {"line": 44, "character": 14}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/Run.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":214,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/run.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 214, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morsmall, CamlinternalFormatBasics, Dune__exe", "command": ""}}, {"range": {"start": {"line": 4, "character": 4}, "end": {"line": 4, "character": 24}}, "command": {"title": "Dune__exe.Generator.parameters", "command": ""}}, {"range": {"start": {"line": 6, "character": 4}, "end": {"line": 6, "character": 19}}, "command": {"title": "int", "command": ""}}, {"range": {"start": {"line": 10, "character": 4}, "end": {"line": 10, "character": 16}}, "command": {"title": "unit => unit", "command": ""}}, {"range": {"start": {"line": 16, "character": 12}, "end": {"line": 16, "character": 21}}, "command": {"title": "1 uses. values: {g_program}", "command": ""}}]}
Running diagnostics for file:///Users/mandalarian/Github/morsmall/tests/run.ml
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/mandalarian/Github/morsmall/tests/run.ml", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/tests/run.ml"}}}
Read message 
{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0309944152832ms
Sending response {"id": 215, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0181198120117ms
Sending response {"id": 216, "jsonrpc": "2.0", "result": [{"name": "convert_location", "kind": 22, "location": {"range": {"start": {"line": 25, "character": 0}, "end": {"line": 26, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "convert_location_2", "kind": 22, "location": {"range": {"start": {"line": 28, "character": 0}, "end": {"line": 30, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "erase_location", "kind": 22, "location": {"range": {"start": {"line": 32, "character": 0}, "end": {"line": 33, "character": 22}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_number__to__int", "kind": 12, "location": {"range": {"start": {"line": 855, "character": 0}, "end": {"line": 856, "character": 49}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "assignment_word'__to__assignment'", "kind": 12, "location": {"range": {"start": {"line": 850, "character": 0}, "end": {"line": 851, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "assignment_word__to__assignment", "kind": 12, "location": {"range": {"start": {"line": 846, "character": 0}, "end": {"line": 848, "character": 23}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "name'__to__name", "kind": 12, "location": {"range": {"start": {"line": 841, "character": 0}, "end": {"line": 842, "character": 37}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "name__to__name", "kind": 22, "location": {"range": {"start": {"line": 838, "character": 0}, "end": {"line": 839, "character": 21}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "variable_attribute__to__attribute", "kind": 12, "location": {"range": {"start": {"line": 814, "character": 0}, "end": {"line": 834, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_component_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 796, "character": 0}, "end": {"line": 812, "character": 16}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_component__to__word", "kind": 12, "location": {"range": {"start": {"line": 765, "character": 0}, "end": {"line": 794, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_cst_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 759, "character": 0}, "end": {"line": 761, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_cst__to__word", "kind": 12, "location": {"range": {"start": {"line": 755, "character": 0}, "end": {"line": 757, "character": 17}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word_double_quoted__to__word", "kind": 12, "location": {"range": {"start": {"line": 750, "character": 0}, "end": {"line": 751, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 747, "character": 0}, "end": {"line": 748, "character": 39}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word'__to__word", "kind": 12, "location": {"range": {"start": {"line": 744, "character": 0}, "end": {"line": 745, "character": 37}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "word__to__word", "kind": 22, "location": {"range": {"start": {"line": 740, "character": 0}, "end": {"line": 742, "character": 32}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sequential_sep__to__command", "kind": 12, "location": {"range": {"start": {"line": 735, "character": 0}, "end": {"line": 736, "character": 9}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 728, "character": 0}, "end": {"line": 731, "character": 73}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator'__to__command", "kind": 12, "location": {"range": {"start": {"line": 725, "character": 0}, "end": {"line": 726, "character": 53}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator__to__command", "kind": 12, "location": {"range": {"start": {"line": 718, "character": 0}, "end": {"line": 723, "character": 19}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 711, "character": 0}, "end": {"line": 714, "character": 79}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op'__to__command", "kind": 12, "location": {"range": {"start": {"line": 708, "character": 0}, "end": {"line": 709, "character": 59}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "separator_op__to__command", "kind": 12, "location": {"range": {"start": {"line": 703, "character": 0}, "end": {"line": 706, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_here'__to__strip_word'", "kind": 12, "location": {"range": {"start": {"line": 698, "character": 0}, "end": {"line": 699, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_here__to__strip_word'", "kind": 22, "location": {"range": {"start": {"line": 692, "character": 0}, "end": {"line": 696, "character": 40}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "filename'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 687, "character": 0}, "end": {"line": 688, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "filename__to__word'", "kind": 22, "location": {"range": {"start": {"line": 683, "character": 0}, "end": {"line": 685, "character": 27}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_file'__to__kind_word'", "kind": 12, "location": {"range": {"start": {"line": 678, "character": 0}, "end": {"line": 679, "character": 49}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_file__to__kind_word'", "kind": 12, "location": {"range": {"start": {"line": 665, "character": 0}, "end": {"line": 676, "character": 43}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 660, "character": 0}, "end": {"line": 661, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect'__to__command", "kind": 12, "location": {"range": {"start": {"line": 657, "character": 0}, "end": {"line": 658, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "io_redirect__to__command", "kind": 12, "location": {"range": {"start": {"line": 624, "character": 0}, "end": {"line": 655, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "redirect_list'__to__command", "kind": 12, "location": {"range": {"start": {"line": 619, "character": 0}, "end": {"line": 620, "character": 67}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "redirect_list__to__command", "kind": 12, "location": {"range": {"start": {"line": 609, "character": 0}, "end": {"line": 617, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_word'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 604, "character": 0}, "end": {"line": 605, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_word__to__word", "kind": 22, "location": {"range": {"start": {"line": 600, "character": 0}, "end": {"line": 602, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_name'__to__word'", "kind": 12, "location": {"range": {"start": {"line": 595, "character": 0}, "end": {"line": 596, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "cmd_name__to__word", "kind": 22, "location": {"range": {"start": {"line": 591, "character": 0}, "end": {"line": 593, "character": 26}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_suffix'", "kind": 12, "location": {"range": {"start": {"line": 585, "character": 0}, "end": {"line": 587, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_suffix", "kind": 12, "location": {"range": {"start": {"line": 563, "character": 0}, "end": {"line": 583, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_prefix'", "kind": 12, "location": {"range": {"start": {"line": 551, "character": 0}, "end": {"line": 553, "character": 74}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "sort__cmd_prefix", "kind": 12, "location": {"range": {"start": {"line": 529, "character": 0}, "end": {"line": 549, "character": 18}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "simple_command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 469, "character": 0}, "end": {"line": 519, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "do_group'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 464, "character": 0}, "end": {"line": 465, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "do_group__to__command", "kind": 22, "location": {"range": {"start": {"line": 460, "character": 0}, "end": {"line": 462, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "brace_group'__to__command", "kind": 12, "location": {"range": {"start": {"line": 455, "character": 0}, "end": {"line": 456, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "brace_group__to__command", "kind": 22, "location": {"range": {"start": {"line": 451, "character": 0}, "end": {"line": 453, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "fname'__to__name", "kind": 12, "location": {"range": {"start": {"line": 446, "character": 0}, "end": {"line": 447, "character": 39}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "fname__to__name", "kind": 22, "location": {"range": {"start": {"line": 443, "character": 0}, "end": {"line": 444, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_body'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 438, "character": 0}, "end": {"line": 439, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_body__to__command", "kind": 22, "location": {"range": {"start": {"line": 431, "character": 0}, "end": {"line": 436, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_definition'__to__command", "kind": 12, "location": {"range": {"start": {"line": 426, "character": 0}, "end": {"line": 427, "character": 70}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "function_definition__to__command", "kind": 22, "location": {"range": {"start": {"line": 419, "character": 0}, "end": {"line": 424, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "until_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 414, "character": 0}, "end": {"line": 415, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "until_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 407, "character": 0}, "end": {"line": 412, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "while_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 402, "character": 0}, "end": {"line": 403, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "while_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 395, "character": 0}, "end": {"line": 400, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "else_part'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 390, "character": 0}, "end": {"line": 391, "character": 52}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "else_part__to__command", "kind": 22, "location": {"range": {"start": {"line": 374, "character": 0}, "end": {"line": 388, "character": 47}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "if_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 369, "character": 0}, "end": {"line": 370, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "if_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 355, "character": 0}, "end": {"line": 367, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern'__to__pattern'", "kind": 12, "location": {"range": {"start": {"line": 350, "character": 0}, "end": {"line": 351, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern'__to__pattern", "kind": 12, "location": {"range": {"start": {"line": 347, "character": 0}, "end": {"line": 348, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pattern__to__pattern", "kind": 22, "location": {"range": {"start": {"line": 340, "character": 0}, "end": {"line": 345, "character": 30}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item'__to__case_item'", "kind": 12, "location": {"range": {"start": {"line": 335, "character": 0}, "end": {"line": 336, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item__to__case_item", "kind": 22, "location": {"range": {"start": {"line": 327, "character": 0}, "end": {"line": 333, "character": 90}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item_ns'__to__case_item'", "kind": 12, "location": {"range": {"start": {"line": 322, "character": 0}, "end": {"line": 323, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_item_ns__to__case_item", "kind": 22, "location": {"range": {"start": {"line": 314, "character": 0}, "end": {"line": 320, "character": 90}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list'__to__case_item'_list", "kind": 12, "location": {"range": {"start": {"line": 309, "character": 0}, "end": {"line": 310, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list__to__case_item'_list", "kind": 22, "location": {"range": {"start": {"line": 302, "character": 0}, "end": {"line": 307, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list_ns'__to__case_item'_list", "kind": 12, "location": {"range": {"start": {"line": 297, "character": 0}, "end": {"line": 298, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_list_ns__to__case_item'_list", "kind": 22, "location": {"range": {"start": {"line": 290, "character": 0}, "end": {"line": 295, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 285, "character": 0}, "end": {"line": 286, "character": 54}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "case_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 268, "character": 0}, "end": {"line": 283, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "wordlist'__to__word'_list", "kind": 12, "location": {"range": {"start": {"line": 263, "character": 0}, "end": {"line": 264, "character": 51}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "wordlist__to__word'_list", "kind": 22, "location": {"range": {"start": {"line": 256, "character": 0}, "end": {"line": 261, "character": 29}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "for_clause'__to__command", "kind": 12, "location": {"range": {"start": {"line": 251, "character": 0}, "end": {"line": 252, "character": 52}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "for_clause__to__command", "kind": 22, "location": {"range": {"start": {"line": 230, "character": 0}, "end": {"line": 249, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 225, "character": 0}, "end": {"line": 226, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term'__to__command", "kind": 12, "location": {"range": {"start": {"line": 222, "character": 0}, "end": {"line": 223, "character": 40}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "term__to__command", "kind": 22, "location": {"range": {"start": {"line": 212, "character": 0}, "end": {"line": 220, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 207, "character": 0}, "end": {"line": 208, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list'__to__command", "kind": 12, "location": {"range": {"start": {"line": 204, "character": 0}, "end": {"line": 205, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_list__to__command", "kind": 22, "location": {"range": {"start": {"line": 197, "character": 0}, "end": {"line": 202, "character": 36}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "subshell'__to__command", "kind": 12, "location": {"range": {"start": {"line": 192, "character": 0}, "end": {"line": 193, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "subshell__to__command", "kind": 22, "location": {"range": {"start": {"line": 188, "character": 0}, "end": {"line": 190, "character": 63}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 183, "character": 0}, "end": {"line": 184, "character": 66}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 180, "character": 0}, "end": {"line": 181, "character": 64}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "compound_command__to__command", "kind": 22, "location": {"range": {"start": {"line": 164, "character": 0}, "end": {"line": 178, "character": 45}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 159, "character": 0}, "end": {"line": 160, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command'__to__command", "kind": 12, "location": {"range": {"start": {"line": 156, "character": 0}, "end": {"line": 157, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "command__to__command", "kind": 22, "location": {"range": {"start": {"line": 145, "character": 0}, "end": {"line": 154, "character": 59}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 140, "character": 0}, "end": {"line": 141, "character": 60}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence'__to__command", "kind": 12, "location": {"range": {"start": {"line": 137, "character": 0}, "end": {"line": 138, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipe_sequence__to__command", "kind": 22, "location": {"range": {"start": {"line": 128, "character": 0}, "end": {"line": 135, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 123, "character": 0}, "end": {"line": 124, "character": 50}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline'__to__command", "kind": 12, "location": {"range": {"start": {"line": 120, "character": 0}, "end": {"line": 121, "character": 48}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "pipeline__to__command", "kind": 22, "location": {"range": {"start": {"line": 114, "character": 0}, "end": {"line": 118, "character": 58}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 109, "character": 0}, "end": {"line": 110, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or'__to__command", "kind": 12, "location": {"range": {"start": {"line": 106, "character": 0}, "end": {"line": 107, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "and_or__to__command", "kind": 22, "location": {"range": {"start": {"line": 92, "character": 0}, "end": {"line": 104, "character": 8}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 87, "character": 0}, "end": {"line": 88, "character": 44}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist'__to__command", "kind": 12, "location": {"range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 42}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "clist__to__command", "kind": 22, "location": {"range": {"start": {"line": 74, "character": 0}, "end": {"line": 82, "character": 33}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_command'__to__command'", "kind": 12, "location": {"range": {"start": {"line": 69, "character": 0}, "end": {"line": 70, "character": 66}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_command__to__command", "kind": 12, "location": {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 67, "character": 31}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_commands'__to__command'_list", "kind": 12, "location": {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 58, "character": 71}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "complete_commands__to__command_list", "kind": 12, "location": {"range": {"start": {"line": 50, "character": 0}, "end": {"line": 55, "character": 56}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "program'__to__program", "kind": 12, "location": {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 46}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}, {"name": "program__to__program", "kind": 12, "location": {"range": {"start": {"line": 39, "character": 0}, "end": {"line": 43, "character": 7}}, "uri": "file:///Users/mandalarian/Github/morsmall/_build/.lsp/morsmall__CST_to_AST.ast"}}]}
Read message 
{"jsonrpc":"2.0","id":217,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Sending response {"id": 217, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Dependencies: Stdlib, Morbig, Morsmall__", "command": ""}}, {"range": {"start": {"line": 25, "character": 4}, "end": {"line": 25, "character": 20}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 28, "character": 4}, "end": {"line": 28, "character": 22}}, "command": {"title": "'a 'b 'c.\n  ('a -> 'b -> 'c) ->\n  'a Morbig.CST.located -> 'b -> 'c Morsmall__.Location.located", "command": ""}}, {"range": {"start": {"line": 32, "character": 4}, "end": {"line": 32, "character": 18}}, "command": {"title": "'a 'b. ('a -> 'b) -> 'a Morbig.CST.located -> 'b", "command": ""}}, {"range": {"start": {"line": 855, "character": 4}, "end": {"line": 855, "character": 22}}, "command": {"title": "Morbig.CST.io_number => Morsmall__.AST.descr", "command": ""}}, {"range": {"start": {"line": 850, "character": 4}, "end": {"line": 850, "character": 37}}, "command": {"title": "Morbig.CST.assignment_word' => Morsmall__.AST.assignment'", "command": ""}}, {"range": {"start": {"line": 846, "character": 4}, "end": {"line": 846, "character": 35}}, "command": {"title": "Morbig.CST.assignment_word => Morsmall__.AST.assignment", "command": ""}}, {"range": {"start": {"line": 841, "character": 4}, "end": {"line": 841, "character": 19}}, "command": {"title": "Morbig.CST.name' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 838, "character": 4}, "end": {"line": 838, "character": 18}}, "command": {"title": "Morbig.CST.name -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 814, "character": 4}, "end": {"line": 814, "character": 37}}, "command": {"title": "Morbig.CST.variable_attribute => Morsmall__.AST.attribute", "command": ""}}, {"range": {"start": {"line": 796, "character": 4}, "end": {"line": 796, "character": 42}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 765, "character": 4}, "end": {"line": 765, "character": 28}}, "command": {"title": "Morbig.CST.word_component => list(\n  Morsmall__.AST.word_component\n)", "command": ""}}, {"range": {"start": {"line": 759, "character": 4}, "end": {"line": 759, "character": 36}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 755, "character": 4}, "end": {"line": 755, "character": 22}}, "command": {"title": "Morbig.CST.word_cst => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 750, "character": 4}, "end": {"line": 750, "character": 32}}, "command": {"title": "Morbig.CST.word => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 747, "character": 4}, "end": {"line": 747, "character": 20}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 744, "character": 4}, "end": {"line": 744, "character": 19}}, "command": {"title": "Morbig.CST.word' => Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 740, "character": 4}, "end": {"line": 740, "character": 18}}, "command": {"title": "Morbig.CST.word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 735, "character": 4}, "end": {"line": 735, "character": 31}}, "command": {"title": "(\n  'a,\n  Morsmall__.AST.command\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 728, "character": 4}, "end": {"line": 728, "character": 28}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 27}}, "command": {"title": "(\n  Morbig.CST.separator',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 718, "character": 4}, "end": {"line": 718, "character": 26}}, "command": {"title": "(\n  Morbig.CST.separator,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 711, "character": 4}, "end": {"line": 711, "character": 31}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 708, "character": 4}, "end": {"line": 708, "character": 30}}, "command": {"title": "(\n  Morbig.CST.separator_op',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 703, "character": 4}, "end": {"line": 703, "character": 29}}, "command": {"title": "(\n  Morbig.CST.separator_op,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 698, "character": 4}, "end": {"line": 698, "character": 29}}, "command": {"title": "Morbig.CST.io_here' => (\n  bool,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 28}}, "command": {"title": "Morbig.CST.io_here -> bool * Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 687, "character": 4}, "end": {"line": 687, "character": 24}}, "command": {"title": "Morbig.CST.filename' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 683, "character": 4}, "end": {"line": 683, "character": 23}}, "command": {"title": "Morbig.CST.filename -> Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 678, "character": 4}, "end": {"line": 678, "character": 28}}, "command": {"title": "Morbig.CST.io_file' => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 665, "character": 4}, "end": {"line": 665, "character": 27}}, "command": {"title": "Morbig.CST.io_file => (\n  Morsmall__.AST.kind,\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 660, "character": 4}, "end": {"line": 660, "character": 30}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 657, "character": 4}, "end": {"line": 657, "character": 29}}, "command": {"title": "(\n  Morbig.CST.io_redirect',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 624, "character": 4}, "end": {"line": 624, "character": 28}}, "command": {"title": "(\n  Morbig.CST.io_redirect,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 619, "character": 4}, "end": {"line": 619, "character": 31}}, "command": {"title": "(\n  Morbig.CST.redirect_list',\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 609, "character": 4}, "end": {"line": 609, "character": 30}}, "command": {"title": "(\n  Morbig.CST.redirect_list,\n  Morsmall__.AST.command'\n) => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 604, "character": 4}, "end": {"line": 604, "character": 24}}, "command": {"title": "Morbig.CST.cmd_word' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 600, "character": 4}, "end": {"line": 600, "character": 22}}, "command": {"title": "Morbig.CST.cmd_word -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 595, "character": 4}, "end": {"line": 595, "character": 24}}, "command": {"title": "Morbig.CST.cmd_name' => Morsmall__.AST.word'", "command": ""}}, {"range": {"start": {"line": 591, "character": 4}, "end": {"line": 591, "character": 22}}, "command": {"title": "Morbig.CST.cmd_name -> Morsmall__.AST.word", "command": ""}}, {"range": {"start": {"line": 585, "character": 4}, "end": {"line": 585, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix'\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 563, "character": 4}, "end": {"line": 563, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_suffix\n) => (\n  list(Morbig.CST.word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 551, "character": 4}, "end": {"line": 551, "character": 21}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix'\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 529, "character": 4}, "end": {"line": 529, "character": 20}}, "command": {"title": "(\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect'),\n  Morbig.CST.cmd_prefix\n) => (\n  list(Morbig.CST.assignment_word'),\n  list(Morbig.CST.io_redirect')\n)", "command": ""}}, {"range": {"start": {"line": 469, "character": 4}, "end": {"line": 469, "character": 32}}, "command": {"title": "Morbig.CST.simple_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 464, "character": 4}, "end": {"line": 464, "character": 27}}, "command": {"title": "Morbig.CST.do_group' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 460, "character": 4}, "end": {"line": 460, "character": 25}}, "command": {"title": "Morbig.CST.do_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 455, "character": 4}, "end": {"line": 455, "character": 29}}, "command": {"title": "Morbig.CST.brace_group' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 451, "character": 4}, "end": {"line": 451, "character": 28}}, "command": {"title": "Morbig.CST.brace_group -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 446, "character": 4}, "end": {"line": 446, "character": 20}}, "command": {"title": "Morbig.CST.fname' => Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 443, "character": 4}, "end": {"line": 443, "character": 19}}, "command": {"title": "Morbig.CST.fname -> Morsmall__.AST.name", "command": ""}}, {"range": {"start": {"line": 438, "character": 4}, "end": {"line": 438, "character": 32}}, "command": {"title": "Morbig.CST.function_body' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 431, "character": 4}, "end": {"line": 431, "character": 30}}, "command": {"title": "Morbig.CST.function_body -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 426, "character": 4}, "end": {"line": 426, "character": 37}}, "command": {"title": "Morbig.CST.function_definition' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 419, "character": 4}, "end": {"line": 419, "character": 36}}, "command": {"title": "Morbig.CST.function_definition -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 414, "character": 4}, "end": {"line": 414, "character": 30}}, "command": {"title": "Morbig.CST.until_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 407, "character": 4}, "end": {"line": 407, "character": 29}}, "command": {"title": "Morbig.CST.until_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 402, "character": 4}, "end": {"line": 402, "character": 30}}, "command": {"title": "Morbig.CST.while_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 395, "character": 4}, "end": {"line": 395, "character": 29}}, "command": {"title": "Morbig.CST.while_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 390, "character": 4}, "end": {"line": 390, "character": 28}}, "command": {"title": "Morbig.CST.else_part' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 374, "character": 4}, "end": {"line": 374, "character": 26}}, "command": {"title": "Morbig.CST.else_part -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 27}}, "command": {"title": "Morbig.CST.if_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 355, "character": 4}, "end": {"line": 355, "character": 26}}, "command": {"title": "Morbig.CST.if_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 350, "character": 4}, "end": {"line": 350, "character": 26}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern'", "command": ""}}, {"range": {"start": {"line": 347, "character": 4}, "end": {"line": 347, "character": 25}}, "command": {"title": "Morbig.CST.pattern' => Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 340, "character": 4}, "end": {"line": 340, "character": 24}}, "command": {"title": "Morbig.CST.pattern -> Morsmall__.AST.pattern", "command": ""}}, {"range": {"start": {"line": 335, "character": 4}, "end": {"line": 335, "character": 30}}, "command": {"title": "Morbig.CST.case_item' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 327, "character": 4}, "end": {"line": 327, "character": 28}}, "command": {"title": "Morbig.CST.case_item -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 322, "character": 4}, "end": {"line": 322, "character": 33}}, "command": {"title": "Morbig.CST.case_item_ns' => Morsmall__.AST.case_item'", "command": ""}}, {"range": {"start": {"line": 314, "character": 4}, "end": {"line": 314, "character": 31}}, "command": {"title": "Morbig.CST.case_item_ns -> Morsmall__.AST.case_item", "command": ""}}, {"range": {"start": {"line": 309, "character": 4}, "end": {"line": 309, "character": 35}}, "command": {"title": "Morbig.CST.case_list' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 302, "character": 4}, "end": {"line": 302, "character": 34}}, "command": {"title": "Morbig.CST.case_list -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 297, "character": 4}, "end": {"line": 297, "character": 38}}, "command": {"title": "Morbig.CST.case_list_ns' => list(\n  Morsmall__.AST.case_item'\n)", "command": ""}}, {"range": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 37}}, "command": {"title": "Morbig.CST.case_list_ns -> Morsmall__.AST.case_item' list", "command": ""}}, {"range": {"start": {"line": 285, "character": 4}, "end": {"line": 285, "character": 29}}, "command": {"title": "Morbig.CST.case_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 268, "character": 4}, "end": {"line": 268, "character": 28}}, "command": {"title": "Morbig.CST.case_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 29}}, "command": {"title": "Morbig.CST.wordlist' => list(\n  Morsmall__.AST.word'\n)", "command": ""}}, {"range": {"start": {"line": 256, "character": 4}, "end": {"line": 256, "character": 28}}, "command": {"title": "Morbig.CST.wordlist -> Morsmall__.AST.word' list", "command": ""}}, {"range": {"start": {"line": 251, "character": 4}, "end": {"line": 251, "character": 28}}, "command": {"title": "Morbig.CST.for_clause' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 27}}, "command": {"title": "Morbig.CST.for_clause -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 225, "character": 4}, "end": {"line": 225, "character": 23}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 222, "character": 4}, "end": {"line": 222, "character": 22}}, "command": {"title": "Morbig.CST.term' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 212, "character": 4}, "end": {"line": 212, "character": 21}}, "command": {"title": "Morbig.CST.term -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 207, "character": 4}, "end": {"line": 207, "character": 32}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 204, "character": 4}, "end": {"line": 204, "character": 31}}, "command": {"title": "Morbig.CST.compound_list' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 197, "character": 4}, "end": {"line": 197, "character": 30}}, "command": {"title": "Morbig.CST.compound_list -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 192, "character": 4}, "end": {"line": 192, "character": 26}}, "command": {"title": "Morbig.CST.subshell' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 188, "character": 4}, "end": {"line": 188, "character": 25}}, "command": {"title": "Morbig.CST.subshell -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 183, "character": 4}, "end": {"line": 183, "character": 35}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 180, "character": 4}, "end": {"line": 180, "character": 34}}, "command": {"title": "Morbig.CST.compound_command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 164, "character": 4}, "end": {"line": 164, "character": 33}}, "command": {"title": "Morbig.CST.compound_command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 159, "character": 4}, "end": {"line": 159, "character": 26}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 156, "character": 4}, "end": {"line": 156, "character": 25}}, "command": {"title": "Morbig.CST.command' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 145, "character": 4}, "end": {"line": 145, "character": 24}}, "command": {"title": "Morbig.CST.command -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 140, "character": 4}, "end": {"line": 140, "character": 32}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 137, "character": 4}, "end": {"line": 137, "character": 31}}, "command": {"title": "Morbig.CST.pipe_sequence' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 128, "character": 4}, "end": {"line": 128, "character": 30}}, "command": {"title": "Morbig.CST.pipe_sequence -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 123, "character": 4}, "end": {"line": 123, "character": 27}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 120, "character": 4}, "end": {"line": 120, "character": 26}}, "command": {"title": "Morbig.CST.pipeline' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 114, "character": 4}, "end": {"line": 114, "character": 25}}, "command": {"title": "Morbig.CST.pipeline -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 25}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 24}}, "command": {"title": "Morbig.CST.and_or' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 92, "character": 4}, "end": {"line": 92, "character": 23}}, "command": {"title": "Morbig.CST.and_or -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 87, "character": 4}, "end": {"line": 87, "character": 24}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 23}}, "command": {"title": "Morbig.CST.clist' => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 74, "character": 4}, "end": {"line": 74, "character": 22}}, "command": {"title": "Morbig.CST.clist -> Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 35}}, "command": {"title": "Morbig.CST.complete_command' => Morsmall__.AST.command'", "command": ""}}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 33}}, "command": {"title": "Morbig.CST.complete_command => Morsmall__.AST.command", "command": ""}}, {"range": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 41}}, "command": {"title": "Morbig.CST.complete_commands' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 39}}, "command": {"title": "Morbig.CST.complete_commands => list(\n  Morsmall__.AST.command'\n)", "command": ""}}, {"range": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 25}}, "command": {"title": "Morbig.CST.program' => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 39, "character": 28}}, "command": {"title": "Morbig.CST.program => Morsmall__.AST.program", "command": ""}}, {"range": {"start": {"line": 21, "character": 5}, "end": {"line": 21, "character": 15}}, "command": {"title": "218 uses. types: {and_or', cmd_prefix [CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_IoRedirect, CmdPrefix_CmdPrefix_AssignmentWord, CmdPrefix_AssignmentWord], io_here [IoHere_DLess_HereEnd, IoHere_DLessDash_HereEnd], cmd_suffix [CmdSuffix_Word, CmdSuffix_IoRedirect, CmdSuffix_CmdSuffix_Word, CmdSuffix_CmdSuffix_IoRedirect], and_or [AndOr_Pipeline, AndOr_AndOr_OrIf_LineBreak_Pipeline, AndOr_AndOr_AndIf_LineBreak_Pipeline], brace_group [BraceGroup_LBrace_CompoundList_RBrace], complete_command', function_definition [FunctionDefinition_Fname_Lparen_Rparen_LineBreak_FunctionBody], variable [VariableAtom], case_list_ns [CaseListNS_CaseList_CaseItemNS, CaseListNS_CaseItemNS], complete_command [CompleteCommand_CList_SeparatorOp, CompleteCommand_CList], do_group', io_redirect [IoRedirect_IoNumber_IoHere, IoRedirect_IoNumber_IoFile, IoRedirect_IoHere, IoRedirect_IoFile], case_clause', subshell', located [value, position], io_file [IoFile_Less_FileName, IoFile_LessGreat_FileName, IoFile_LessAnd_FileName and 4 more], redirect_list [RedirectList_RedirectList_IoRedirect, RedirectList_IoRedirect], name [Name], pipe_sequence [PipeSequence_PipeSequence_Pipe_LineBreak_Command, PipeSequence_Command], while_clause', program', term [Term_Term_Separator_AndOr, Term_AndOr], word_component [WordVariable, WordSubshell, WordSingleQuoted and 8 more], if_clause [IfClause_If_CompoundList_Then_CompoundList_Fi, IfClause_If_CompoundList_Then_CompoundList_ElsePart_Fi], separator_op', function_body', program [Program_LineBreak_CompleteCommands_LineBreak, Program_LineBreak], separator_op [SeparatorOp_Uppersand, SeparatorOp_Semicolon], until_clause', variable_attribute [UseDefaultValues, UseAlternativeValue, RemoveSmallestSuffixPattern and 7 more], cmd_prefix' [value], for_clause [ForClause_For_Name_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_WordList_SequentialSep_DoGroup, ForClause_For_Name_LineBreak_In_SequentialSep_DoGroup, ForClause_For_Name_DoGroup], io_file', do_group [DoGroup_Do_CompoundList_Done], fname [Fname_Name], cmd_name [CmdName_Word], compound_list [CompoundList_LineBreak_Term_Separator, CompoundList_LineBreak_Term], cmd_word', case_clause [CaseClause_Case_Word_LineBreak_In_LineBreak_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseList_Esac, CaseClause_Case_Word_LineBreak_In_LineBreak_CaseListNS_Esac], function_definition', pattern', word [Word], wordlist', case_item_ns', else_part [ElsePart_Else_CompoundList, ElsePart_Elif_CompoundList_Then_CompoundList_ElsePart, ElsePart_Elif_CompoundList_Then_CompoundList], name', pattern [Pattern_Word, Pattern_Pattern_Pipe_Word], separator [Separator_SeparatorOp_LineBreak, Separator_NewLineList], case_item [CaseItem_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Pattern_Rparen_CompoundList_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_LineBreak_Dsemi_LineBreak, CaseItem_Lparen_Pattern_Rparen_CompoundList_Dsemi_LineBreak], clist', cmd_word [CmdWord_Word], if_clause', redirect_list', function_body [FunctionBody_CompoundCommand_RedirectList, FunctionBody_CompoundCommand], else_part', brace_group', compound_command', filename', simple_command' [value, position], command', filename [Filename_Word], wordlist [WordList_WordList_Word, WordList_Word], case_list', word', cmd_name', case_item', case_list [CaseList_CaseList_CaseItem, CaseList_CaseItem], pipeline [Pipeline_PipeSequence, Pipeline_Bang_PipeSequence], term', for_clause', io_redirect', until_clause [UntilClause_Until_CompoundList_DoGroup], word_cst [[], ::], compound_list', case_item_ns [CaseItemNS_Pattern_Rparen_LineBreak, CaseItemNS_Pattern_Rparen_CompoundList, CaseItemNS_Lparen_Pattern_Rparen_LineBreak, CaseItemNS_Lparen_Pattern_Rparen_CompoundList], complete_commands [CompleteCommands_CompleteCommands_NewlineList_CompleteCommand, CompleteCommands_CompleteCommand], fname', compound_command [CompoundCommand_WhileClause, CompoundCommand_UntilClause, CompoundCommand_Subshell and 4 more], separator', case_list_ns', io_here', simple_command [SimpleCommand_CmdPrefix_CmdWord_CmdSuffix, SimpleCommand_CmdPrefix_CmdWord, SimpleCommand_CmdPrefix and 2 more], cmd_suffix' [value], assignment_word', command [Command_SimpleCommand, Command_FunctionDefinition, Command_CompoundCommand_RedirectList, Command_CompoundCommand], subshell [Subshell_Lparen_CompoundList_Rparen], while_clause [WhileClause_While_CompoundList_DoGroup], clist [CList_CList_SeparatorOp_AndOr, CList_AndOr], pipeline', io_number [IONumber], complete_commands', assignment_word}", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":218,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/mandalarian/Github/morsmall/src/CST_to_AST.ml"},"position":{"line":806,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting global Morbig
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__.ml
FINDING docs for module Impl(/Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt, /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml)
FINDING /Users/mandalarian/.opam/4.08.1/lib/morbig/morbig__CST.cmt src /Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml
[ref] Getting for 897 in word_component
[ref] Yes!! got it
Sending response {"id": 218, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 806, "character": 4}, "end": {"line": 806, "character": 16}}, "contents": {"kind": "markdown", "value": "```\nMorbig.CST.word_component\n```\n\n```\ntype word_component = \n  | WordSubshell(subshell_kind, located(program))\n  | WordName(string)\n  | WordAssignmentWord(assignment_word)\n  | WordDoubleQuoted(word)\n  | WordSingleQuoted(word)\n  | WordLiteral(string)\n  | WordVariable(variable)\n  | WordGlobAll\n  | WordGlobAny\n  | WordReBracketExpression(bracket_expression)\n  | WordEmpty\n\n```\n\n```\nWordVariable(variable)\n```\n\nfile:///Users/mandalarian/.opam/4.08.1/lib/morbig/CST.ml"}}}
